{"version":3,"file":"base.js","sourceRoot":"","sources":["base.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n import {ElementRef, Renderer, OnDestroy} from '@angular/core';\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\n\nimport {ResponsiveActivation, KeyOptions} from '../responsive/responsive-activation';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5}).\n */\nexport type StyleDefinition = string|{[property: string]: string|number};\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective implements OnDestroy {\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n  /**\n   *\n   */\n  constructor(private _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              private _renderer: Renderer) {\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    this._mediaMonitor = null;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string|number,\n                                 nativeElement?: any) {\n    let styles = {};\n    let element = nativeElement || this._elementRef.nativeElement;\n\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n\n    styles = applyCssPrefixes(style);\n\n    // Iterate all properties in hashMap and set styles\n    for (let key in styles) {\n      this._renderer.setElementStyle(element, key, styles[key]);\n    }\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[ ]) {\n    let styles = applyCssPrefixes(style);\n\n    elements.forEach(el => {\n      // Iterate all properties in hashMap and set styles\n      for (let key in styles) {\n        this._renderer.setElementStyle(el, key, styles[key]);\n      }\n    });\n\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n    return this._mqActivation = new ResponsiveActivation(\n        keyOptions,\n        this._mediaMonitor,\n        (change) => onMediaQueryChange.call(this, change)\n    );\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    var obj = this._elementRef.nativeElement.childNodes;\n    var array = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for ( var i = obj.length; i--; ) {\n      array[i] = obj[i];\n    }\n    return array;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}