{"version":3,"file":"layout-gap.js","sourceRoot":"","sources":["layout-gap.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer,\n  SimpleChanges,\n  Self,\n  AfterContentInit,\n  Optional,\n  OnDestroy,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LayoutDirective, LAYOUT_VALUES} from './layout';\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n\nexport class LayoutGapDirective extends BaseFxDirective implements AfterContentInit, OnChanges,\n                                                                   OnDestroy {\n  private _layout = 'row';  // default flex-direction\n  private _layoutWatcher: Subscription;\n\n         set gap(val)     { this._cacheInput('gap', val); }\n      set gapXs(val)   { this._cacheInput('gapXs', val); }\n   set gapGtXs(val) { this._cacheInput('gapGtXs', val); };\n      set gapSm(val)   { this._cacheInput('gapSm', val); };\n   set gapGtSm(val) { this._cacheInput('gapGtSm', val); };\n      set gapMd(val)   { this._cacheInput('gapMd', val); };\n   set gapGtMd(val) { this._cacheInput('gapGtMd', val); };\n      set gapLg(val)   { this._cacheInput('gapLg', val); };\n   set gapGtLg(val) { this._cacheInput('gapGtLg', val); };\n      set gapXl(val)   { this._cacheInput('gapXl', val); };\n\n  constructor(\n    monitor: MediaMonitor,\n    elRef: ElementRef,\n    renderer: Renderer,\n      container: LayoutDirective) {\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['gap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngAfterContentInit() {\n    this._listenForMediaQueryChanges('gap', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n     super.ngOnDestroy();\n     if (this._layoutWatcher) {\n       this._layoutWatcher.unsubscribe();\n     }\n   }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  private _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n\n    this._updateWithValue();\n  }\n\n  /**\n   *\n   */\n  private _updateWithValue(value?: string) {\n    value = value || this._queryInput(\"gap\") || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // For each `element` child, set the padding styles...\n    let items = this.childrenNodes\n          .filter( el => (el.nodeType === 1))   // only Element types\n          .filter( (el, j) => j > 0 );          // skip first element since gaps are needed\n    this._applyStyleToElements(this._buildCSS(value), items );\n  }\n\n  /**\n   * Prepare margin CSS, remove any previous explicitly\n   * assigned margin assignments\n   */\n  private _buildCSS(value) {\n    let key, margins = {\n      'margin-left': null,\n      'margin-right': null,\n      'margin-top': null,\n      'margin-bottom': null\n    };\n\n    switch (this._layout) {\n      case 'column':\n        key = 'margin-top';\n        break;\n      case 'column-reverse':\n        key = 'margin-bottom';\n        break;\n      case 'row-reverse':\n        key = 'margin-right';\n        break;\n      case \"row\" :\n        key = 'margin-left';\n        break;\n      default :\n        key = 'margin-left';\n        break;\n    }\n    margins[key] = value;\n\n    return margins;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: `\n  [fxLayoutGap],\n  [fxLayoutGap.xs]\n  [fxLayoutGap.gt-xs],\n  [fxLayoutGap.sm],\n  [fxLayoutGap.gt-sm]\n  [fxLayoutGap.md],\n  [fxLayoutGap.gt-md]\n  [fxLayoutGap.lg],\n  [fxLayoutGap.gt-lg],\n  [fxLayoutGap.xl]\n`}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaMonitor, },\n{type: ElementRef, },\n{type: Renderer, },\n{type: LayoutDirective, decorators: [{ type: Optional }, { type: Self }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'gap': [{ type: Input, args: ['fxLayoutGap', ] },],\n'gapXs': [{ type: Input, args: ['fxLayoutGap.xs', ] },],\n'gapGtXs': [{ type: Input, args: ['fxLayoutGap.gt-xs', ] },],\n'gapSm': [{ type: Input, args: ['fxLayoutGap.sm', ] },],\n'gapGtSm': [{ type: Input, args: ['fxLayoutGap.gt-sm', ] },],\n'gapMd': [{ type: Input, args: ['fxLayoutGap.md', ] },],\n'gapGtMd': [{ type: Input, args: ['fxLayoutGap.gt-md', ] },],\n'gapLg': [{ type: Input, args: ['fxLayoutGap.lg', ] },],\n'gapGtLg': [{ type: Input, args: ['fxLayoutGap.gt-lg', ] },],\n'gapXl': [{ type: Input, args: ['fxLayoutGap.xl', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}