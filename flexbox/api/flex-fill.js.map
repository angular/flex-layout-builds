{"version":3,"file":"flex-fill.js","sourceRoot":"","sources":["flex-fill.ts"],"names":[],"mappings":";;;;;OAOO,EAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAC,MAAM,eAAe;OAEtD,EAAC,YAAY,EAAC,MAAM,iCAAiC;OACrD,EAAC,eAAe,EAAC,MAAM,QAAQ;AAEtC,IAAM,aAAa,GAAG;IACpB,QAAQ,EAAE,CAAC;IACX,OAAO,EAAE,MAAM;IACf,QAAQ,EAAE,MAAM;IAChB,WAAW,EAAE,MAAM;IACnB,YAAY,EAAE,MAAM;CACrB,CAAC;AAEF;;;;;GAKG;AAEH;IAAuC,qCAAe;IACpD,2BAAY,OAAqB,EAAS,KAAiB,EAAS,QAAkB;QACpF,kBAAM,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QADQ,UAAK,GAAL,KAAK,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAEpF,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;IACI,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,iCAGpC,EAAC,EAAG,EAAE;KACN,CAAC;IACF,kBAAkB;IACX,gCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,YAAY,GAAG;QACtB,EAAC,IAAI,EAAE,UAAU,GAAG;QACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;KACjB,EAJ6F,CAI7F,CAAC;IACF,wBAAC;AAAD,CAAC,AAjBD,CAAuC,eAAe,GAiBrD","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Renderer} from '@angular/core';\n\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {BaseFxDirective} from './base';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n\nexport class FlexFillDirective extends BaseFxDirective {\n  constructor(monitor: MediaMonitor, public elRef: ElementRef, public renderer: Renderer) {\n    super(monitor, elRef, renderer);\n    this._applyStyleToElement(FLEX_FILL_CSS);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: `\n  [fxFill],\n  [fxFlexFill]\n`}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaMonitor, },\n{type: ElementRef, },\n{type: Renderer, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}