{"version":3,"file":"_module.js","sourceRoot":"","sources":["_module.ts"],"names":[],"mappings":"OAOO,EAAC,QAAQ,EAAsB,MAAM,eAAe;OAEpD,EAAC,kBAAkB,EAAC,MAAM,oCAAoC;OAC9D,EAAC,mBAAmB,EAAC,MAAM,mCAAmC;OAG9D,EAAC,UAAU,EAAC,MAAM,eAAe;OACjC,EAAC,YAAY,EAAC,MAAM,iBAAiB;OACrC,EAAC,4BAA4B,EAAC,MAAM,6CAA6C;AAExF;;;;GAIG;AAGH;IAAA;IAoBA,CAAC;IAnBQ,0BAAO,GAAd;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,kBAAkB;SAC7B,CAAC;IACJ,CAAC;IACI,6BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,SAAS,EAAE;wBACT,UAAU;wBACV,YAAY;wBACZ,kBAAkB;wBAClB,mBAAmB;wBACnB,4BAA4B,CAAE,8DAA8D;qBAC7F;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,iCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,yBAAC;AAAD,CAAC,AApBD,IAoBC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\nimport {BreakPointsProvider} from \"./providers/break-points-provider\";\n\n\nimport {MatchMedia} from './match-media';\nimport {MediaMonitor} from './media-monitor';\nimport {MatchMediaObservableProvider} from './providers/match-media-observable-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n\nexport class MediaQueriesModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MediaQueriesModule\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    MatchMedia,                   // Low-level service to publish observables w/ window.matchMedia()\n    MediaMonitor,                 // MediaQuery monitor service observes all known breakpoints\n    BreakPointRegistry,           // Registry of known/used BreakPoint(s)\n    BreakPointsProvider,           // Supports developer overrides of list of known breakpoints\n    MatchMediaObservableProvider  // easy subscription injectable `media$` matchMedia observable\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}