{"version":3,"file":"grid.es5.js","sources":["../../../src/lib/grid/module.ts","../../../src/lib/grid/rows/rows.ts","../../../src/lib/grid/row/row.ts","../../../src/lib/grid/gap/gap.ts","../../../src/lib/grid/columns/columns.ts","../../../src/lib/grid/column/column.ts","../../../src/lib/grid/auto/auto.ts","../../../src/lib/grid/areas/areas.ts","../../../src/lib/grid/area/area.ts","../../../src/lib/grid/align-rows/align-rows.ts","../../../src/lib/grid/align-columns/align-columns.ts","../../../src/lib/grid/grid-align/grid-align.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n"],"names":["selector","inputs","tslib_1.__extends","AUTO_SPECIFIER","DEFAULT_VALUE","DEFAULT_CROSS","DEFAULT_MAIN","buildCss"],"mappings":";;;;;;;;;;;;;;;;;AWgBA,IAAM,WAAW,GAAG,SAAS,CAAC;;AAC9B,IAAM,WAAW,GAAG,SAAS,CAAC;;IAGaE,SAA3C,CAAA,qBAAA,EAAA,MAAA,CAAA,CAAuD;;;;;;;;IACrD,qBAAF,CAAA,SAAA,CAAA,WAAa;;;;IAAX,UAAY,KAAa,EAA3B;QACI,OAAO,QAAQ,CAAC,KAAK,IAAI,WAAW,CAAC,CAAC;KACvC,CAAH;;QAJA,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;IAnBA,OAAA,qBAAA,CAAA;CAoBA,CAA2C,YAAY,CAAvD,CAAA,CAAA;AAAA;IAMwCA,SAAxC,CAAA,kBAAA,EAAA,MAAA,CAAA,CAAsD;IAIpD,SAAF,kBAAA,CAAwB,UAAsB;;;IAGV,YAAmC,EAC/C,MAAkB,EAClB,OAAwB,EAFhD;QAHE,IAAF,KAAA,GAMI,MANJ,CAAA,IAAA,CAAA,IAAA,EAMU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IANpD,IAAA,CAQG;QARqB,KAAxB,CAAA,UAAkC,GAAV,UAAU,CAAY;QAGV,KAApC,CAAA,YAAgD,GAAZ,YAAY,CAAuB;QAC/C,KAAxB,CAAA,MAA8B,GAAN,MAAM,CAAY;QAClB,KAAxB,CAAA,OAA+B,GAAP,OAAO,CAAiB;QAP9C,KAAF,CAAA,aAAA,GAA4B,YAAY,CAAC;QAYvC,KAAF,CAAA,UAAA,GAAyB,UAAU,CAAC;QAHhC,KAAI,CAAC,IAAI,EAAE,CAAC;;KACb;;;QA/BH,EAAA,IAAA,EAAmB,UAAU,EAA7B;QA0BA,EAAA,IAAA,EAAkD,qBAAqB,EAAvE,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,CAAA,EAAA;QApBA,EAAA,IAAA,EAAE,UAAU,EAAZ;QAJA,EAAA,IAAA,EAAE,eAAe,EAAjB;;IATA,OAAA,kBAAA,CAAA;CA0BA,CAAwC,cAAc,CAAtD,CAAA,CAAA;AAAA;AAiBA,IAAM,UAAU,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAE3D,IAAM,MAAM,GAAG;IACb,aAAa;IACb,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB;IACxF,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB;IAClF,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB;CACnF,CAAC;;AAEF,IAAM,QAAQ,GAAG,+RAKhB,CAAC;;;;;;;;;;IAW6CA,SAA/C,CAAA,yBAAA,EAAA,MAAA,CAAA,CAAiE;;;QAC/D,KAAF,CAAA,MAAA,GAAqB,MAAM,CAAC;;;;QAF5B,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApB,QAAoB,EAAE,MAAM,EAA5B,MAA4B,EAAC,EAA7B,EAAA;;IAnEA,OAAA,yBAAA,CAAA;CAoEA,CAA+C,kBAAkB,CAAjE,CAAA,CAAA;AAAA;;;;AAIA,SAAS,QAAQ,CAAC,KAAkB,EAApC;IAAkB,IAAlB,KAAA,KAAA,KAAA,CAAA,EAAkB,EAAA,KAAlB,GAAA,EAAoC,CAApC,EAAA;;IACE,IAAM,GAAG,GAA4B,EAAE,CAA2C;IAAxC,IAA5C,EAAA,GAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,EAA4C,OAA5C,GAAA,EAAA,CAAA,CAAA,CAAmD,EAAE,UAArD,GAAA,EAAA,CAAA,CAAA,CAA+D,CAAqB;;IAGlF,QAAQ,OAAO;QACb,KAAK,KAAK;YACR,GAAG,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;YAC5B,MAAM;QACR,KAAK,QAAQ;YACX,GAAG,CAAC,cAAc,CAAC,GAAG,QAAQ,CAAC;YAC/B,MAAM;QACR,KAAK,SAAS;YACZ,GAAG,CAAC,cAAc,CAAC,GAAG,SAAS,CAAC;YAChC,MAAM;QACR,KAAK,OAAO;YACV,GAAG,CAAC,cAAc,CAAC,GAAG,OAAO,CAAC;YAC9B,MAAM;QACR;YACE,GAAG,CAAC,cAAc,CAAC,GAAG,WAAW,CAAC;YAClC,MAAM;KACT;;IAGD,QAAQ,UAAU;QAChB,KAAK,KAAK;YACR,GAAG,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;YAC1B,MAAM;QACR,KAAK,QAAQ;YACX,GAAG,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC;YAC7B,MAAM;QACR,KAAK,SAAS;YACZ,GAAG,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC;YAC9B,MAAM;QACR,KAAK,OAAO;YACV,GAAG,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC;YAC5B,MAAM;QACR;YACE,GAAG,CAAC,YAAY,CAAC,GAAG,WAAW,CAAC;YAChC,MAAM;KACT;IAED,OAAO,GAAG,CAAC;CACZ;;;;;;;ADjGD,IAAM,YAAY,GAAG,OAAO,CAAC;;AAC7B,IAAM,aAAa,GAAG,SAAS,CAAC;;IAOkBA,SAAlD,CAAA,4BAAA,EAAA,MAAA,CAAA,CAA8D;;;;;;;;;IAC5D,4BAAF,CAAA,SAAA,CAAA,WAAa;;;;;IAAX,UAAY,KAAa,EAAE,MAA8B,EAA3D;QACI,OAAOK,UAAQ,CAAC,KAAK,IAAO,YAAY,GAA5C,GAAA,GAAgD,aAAe,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;KAC7E,CAAH;;QAJA,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;IAxBA,OAAA,4BAAA,CAAA;CAyBA,CAAkD,YAAY,CAA9D,CAAA,CAAA;AAAA;IAM+CL,SAA/C,CAAA,yBAAA,EAAA,MAAA,CAAA,CAA6D;IAS3D,SAAF,yBAAA,CAAwB,UAAsB;;;IAGV,YAA0C,EACtD,MAAkB,EAClB,OAAwB,EAFhD;QAHE,IAAF,KAAA,GAMI,MANJ,CAAA,IAAA,CAAA,IAAA,EAMU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IANpD,IAAA,CAQG;QARqB,KAAxB,CAAA,UAAkC,GAAV,UAAU,CAAY;QAGV,KAApC,CAAA,YAAgD,GAAZ,YAAY,CAA8B;QACtD,KAAxB,CAAA,MAA8B,GAAN,MAAM,CAAY;QAClB,KAAxB,CAAA,OAA+B,GAAP,OAAO,CAAiB;QAZ9C,KAAF,CAAA,aAAA,GAA4B,oBAAoB,CAAC;QAK/C,KAAF,CAAA,OAAA,GAAsB,KAAK,CAAC;QASxB,KAAI,CAAC,IAAI,EAAE,CAAC;;KACb;IAbD,MAAF,CAAA,cAAA,CACM,yBADN,CAAA,SAAA,EAAA,QACY,EADZ;;;;QAAE,YAAF,EAC0B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;;;;;QAC9C,UAAW,GAAY,EAAzB,EAA6B,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;;;KADzE,CAAA,CAAgD;;;;;;;;IAkBpC,yBAAZ,CAAA,SAAA,CAAA,eAA2B;;;;IAAzB,UAA0B,KAAa,EAAzC;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,uBAAuB,GAAG,iBAAiB,CAAC;QAC5E,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;KAC9C,CAAH;;;QAlDA,EAAA,IAAA,EAAmB,UAAU,EAA7B;QAoCA,EAAA,IAAA,EAAkD,4BAA4B,EAA9E,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,CAAA,EAAA;QAjCA,EAAA,IAAA,EAAE,UAAU,EAAZ;QAGA,EAAA,IAAA,EAAE,eAAe,EAAjB;;;QAsBA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,CAAA;;IAnCA,OAAA,yBAAA,CAAA;CA+BA,CAA+C,cAAc,CAA7D,CAAA,CAAA;AAAA;AA6BA,IAAM,iBAAiB,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAClE,IAAM,uBAAuB,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAExE,IAAMD,QAAM,GAAG;IACb,gBAAgB;IAChB,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB;IAC7D,mBAAmB,EAAE,mBAAmB,EAAE,sBAAsB;IAChE,sBAAsB,EAAE,sBAAsB,EAAE,sBAAsB;IACtE,sBAAsB,EAAE,sBAAsB,EAAE,sBAAsB;IACtE,sBAAsB;CACvB,CAAC;;AACF,IAAMD,UAAQ,GAAG,gVAOhB,CAAC;;;;;;;;IASoDE,SAAtD,CAAA,gCAAA,EAAA,MAAA,CAAA,CAA+E;;;QAC7E,KAAF,CAAA,MAAA,GAAqBD,QAAM,CAAC;;;;QAF5B,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBD,UAAoB,EAAE,MAAM,EAA5BC,QAA4B,EAAC,EAA7B,EAAA;;IAtFA,OAAA,gCAAA,CAAA;CAuFA,CAAsD,yBAAyB,CAA/E,CAAA,CAAA;AAAA;;;;;AAIA,SAASM,UAAQ,CAAC,KAAa,EAAE,MAAe,EAAhD;;IACE,IAAM,GAAG,GAA4B,EAAE,CAA2C;IAAxC,IAA5C,EAAA,GAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,EAA4C,QAA5C,GAAA,EAAA,CAAA,CAAA,CAAoD,EAAE,SAAtD,GAAA,EAAA,CAAA,CAAA,CAA+D,CAAqB;;IAGlF,QAAQ,QAAQ;QACd,KAAK,QAAQ;YACX,GAAG,CAAC,eAAe,CAAC,GAAG,QAAQ,CAAC;YAChC,MAAM;QACR,KAAK,cAAc;YACjB,GAAG,CAAC,eAAe,CAAC,GAAG,cAAc,CAAC;YACtC,MAAM;QACR,KAAK,eAAe;YAClB,GAAG,CAAC,eAAe,CAAC,GAAG,eAAe,CAAC;YACvC,MAAM;QACR,KAAK,cAAc;YACjB,GAAG,CAAC,eAAe,CAAC,GAAG,cAAc,CAAC;YACtC,MAAM;QACR,KAAK,KAAK;YACR,GAAG,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC;YAC7B,MAAM;QACR,KAAK,OAAO;YACV,GAAG,CAAC,eAAe,CAAC,GAAG,OAAO,CAAC;YAC/B,MAAM;QACR,KAAK,SAAS;YACZ,GAAG,CAAC,eAAe,CAAC,GAAG,SAAS,CAAC;YACjC,MAAM;QACR;YACE,GAAG,CAAC,eAAe,CAAC,GAAG,YAAY,CAAC;YACpC,MAAM;KACT;;IAGD,QAAQ,SAAS;QACf,KAAK,OAAO;YACV,GAAG,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC;YAC7B,MAAM;QACR,KAAK,QAAQ;YACX,GAAG,CAAC,aAAa,CAAC,GAAG,QAAQ,CAAC;YAC9B,MAAM;QACR,KAAK,KAAK;YACR,GAAG,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;YAC3B,MAAM;QACR,KAAK,SAAS;YACZ,GAAG,CAAC,aAAa,CAAC,GAAG,SAAS,CAAC;YAC/B,MAAM;QACR;;YACE,GAAG,CAAC,aAAa,CAAC,GAAG,aAAa,CAAC;YACnC,MAAM;KACT;IAED,GAAG,CAAC,SAAS,CAAC,GAAG,MAAM,GAAG,aAAa,GAAG,MAAM,CAAC;IAEjD,OAAO,GAAG,CAAC;CACZ;;;;;;;AD/HD,IAAMD,cAAY,GAAG,OAAO,CAAC;;AAC7B,IAAMD,eAAa,GAAG,SAAS,CAAC;;IAOeH,SAA/C,CAAA,yBAAA,EAAA,MAAA,CAAA,CAA2D;;;;;;;;;IACzD,yBAAF,CAAA,SAAA,CAAA,WAAa;;;;;IAAX,UAAY,KAAa,EAAE,MAA2B,EAAxD;QACI,OAAOK,UAAQ,CAAC,KAAK,IAAOD,cAAY,GAA5C,GAAA,GAAgDD,eAAe,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;KAC7E,CAAH;;QAJA,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;IAxBA,OAAA,yBAAA,CAAA;CAyBA,CAA+C,YAAY,CAA3D,CAAA,CAAA;AAAA;IAM4CH,SAA5C,CAAA,sBAAA,EAAA,MAAA,CAAA,CAA0D;IASxD,SAAF,sBAAA,CAAwB,UAAsB;;;IAGV,YAAuC,EACnD,MAAkB,EAClB,OAAwB,EAFhD;QAHE,IAAF,KAAA,GAMI,MANJ,CAAA,IAAA,CAAA,IAAA,EAMU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IANpD,IAAA,CAQG;QARqB,KAAxB,CAAA,UAAkC,GAAV,UAAU,CAAY;QAGV,KAApC,CAAA,YAAgD,GAAZ,YAAY,CAA2B;QACnD,KAAxB,CAAA,MAA8B,GAAN,MAAM,CAAY;QAClB,KAAxB,CAAA,OAA+B,GAAP,OAAO,CAAiB;QAZ9C,KAAF,CAAA,aAAA,GAA4B,iBAAiB,CAAC;QAK5C,KAAF,CAAA,OAAA,GAAsB,KAAK,CAAC;QASxB,KAAI,CAAC,IAAI,EAAE,CAAC;;KACb;IAbD,MAAF,CAAA,cAAA,CACM,sBADN,CAAA,SAAA,EAAA,QACY,EADZ;;;;QAAE,YAAF,EAC0B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;;;;;QAC9C,UAAW,GAAY,EAAzB,EAA6B,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;;;KADzE,CAAA,CAAgD;;;;;;;;IAkBpC,sBAAZ,CAAA,SAAA,CAAA,eAA2B;;;;IAAzB,UAA0B,KAAa,EAAzC;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,oBAAoB,GAAG,cAAc,CAAC;QACtE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;KAC9C,CAAH;;;QAlDA,EAAA,IAAA,EAAmB,UAAU,EAA7B;QAoCA,EAAA,IAAA,EAAkD,yBAAyB,EAA3E,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,CAAA,EAAA;QAjCA,EAAA,IAAA,EAAE,UAAU,EAAZ;QAGA,EAAA,IAAA,EAAE,eAAe,EAAjB;;;QAsBA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,CAAA;;IAnCA,OAAA,sBAAA,CAAA;CA+BA,CAA4C,cAAc,CAA1D,CAAA,CAAA;AAAA;AA6BA,IAAM,cAAc,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAC/D,IAAM,oBAAoB,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAErE,IAAMD,QAAM,GAAG;IACb,aAAa;IACb,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB;IACpD,gBAAgB,EAAE,gBAAgB,EAAE,mBAAmB;IACvD,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB;IAC7D,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB;IAC7D,mBAAmB;CACpB,CAAC;;AACF,IAAMD,UAAQ,GAAG,sSAOhB,CAAC;;;;;;;;IASiDE,SAAnD,CAAA,6BAAA,EAAA,MAAA,CAAA,CAAyE;;;QACvE,KAAF,CAAA,MAAA,GAAqBD,QAAM,CAAC;;;;QAF5B,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBD,UAAoB,EAAE,MAAM,EAA5BC,QAA4B,EAAC,EAA7B,EAAA;;IAtFA,OAAA,6BAAA,CAAA;CAuFA,CAAmD,sBAAsB,CAAzE,CAAA,CAAA;AAAA;;;;;AAIA,SAASM,UAAQ,CAAC,KAAa,EAAE,MAAe,EAAhD;;IACE,IAAM,GAAG,GAA4B,EAAE,CAA2C;IAAxC,IAA5C,EAAA,GAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,EAA4C,QAA5C,GAAA,EAAA,CAAA,CAAA,CAAoD,EAAE,SAAtD,GAAA,EAAA,CAAA,CAAA,CAA+D,CAAqB;;IAGlF,QAAQ,QAAQ;QACd,KAAK,QAAQ,CAAC;QACd,KAAK,cAAc,CAAC;QACpB,KAAK,eAAe,CAAC;QACrB,KAAK,cAAc,CAAC;QACpB,KAAK,KAAK,CAAC;QACX,KAAK,OAAO,CAAC;QACb,KAAK,SAAS;YACZ,GAAG,CAAC,iBAAiB,CAAC,GAAG,QAAQ,CAAC;YAClC,MAAM;QACR;YACE,GAAG,CAAC,iBAAiB,CAAC,GAAGD,cAAY,CAAC;YACtC,MAAM;KACT;;IAGD,QAAQ,SAAS;QACf,KAAK,OAAO,CAAC;QACb,KAAK,QAAQ,CAAC;QACd,KAAK,KAAK,CAAC;QACX,KAAK,SAAS;YACZ,GAAG,CAAC,eAAe,CAAC,GAAG,SAAS,CAAC;YACjC,MAAM;QACR;;YACE,GAAG,CAAC,eAAe,CAAC,GAAGD,eAAa,CAAC;YACrC,MAAM;KACT;IAED,GAAG,CAAC,SAAS,CAAC,GAAG,MAAM,GAAG,aAAa,GAAG,MAAM,CAAC;IAEjD,OAAO,GAAG,CAAC;CACZ;;;;;;;AD9GD,IAAM,aAAa,GAAG,MAAM,CAAC;;IAGaH,SAA1C,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAsD;;;;;;;;IACpD,oBAAF,CAAA,SAAA,CAAA,WAAa;;;;IAAX,UAAY,KAAa,EAA3B;QACI,OAAO,EAAC,WAAW,EAAE,KAAK,IAAI,aAAa,EAAC,CAAC;KAC9C,CAAH;;QAJA,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;IAlBA,OAAA,oBAAA,CAAA;CAmBA,CAA0C,YAAY,CAAtD,CAAA,CAAA;AAAA;IAMuCA,SAAvC,CAAA,iBAAA,EAAA,MAAA,CAAA,CAAqD;IAInD,SAAF,iBAAA,CAAwB,KAAiB,EACjB,UAAsB;;;IAGV,YAAkC,EAC9C,OAAwB,EADhD;QAJE,IAAF,KAAA,GAMI,MANJ,CAAA,IAAA,CAAA,IAAA,EAMU,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,CAAC,IANnD,IAAA,CAQG;QARqB,KAAxB,CAAA,KAA6B,GAAL,KAAK,CAAY;QACjB,KAAxB,CAAA,UAAkC,GAAV,UAAU,CAAY;QAGV,KAApC,CAAA,YAAgD,GAAZ,YAAY,CAAsB;QAC9C,KAAxB,CAAA,OAA+B,GAAP,OAAO,CAAiB;QAP9C,KAAF,CAAA,aAAA,GAA4B,WAAW,CAAC;QAYtC,KAAF,CAAA,UAAA,GAAyB,aAAa,CAAC;QAHnC,KAAI,CAAC,IAAI,EAAE,CAAC;;KACb;;;QA9BH,EAAA,IAAA,EAAmB,UAAU,EAA7B;QAGA,EAAA,IAAA,EAAE,UAAU,EAAZ;QAuBA,EAAA,IAAA,EAAkD,oBAAoB,EAAtE,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,CAAA,EAAA;QAtBA,EAAA,IAAA,EAAE,eAAe,EAAjB;;IAXA,OAAA,iBAAA,CAAA;CAyBA,CAAuC,cAAc,CAArD,CAAA,CAAA;AAAA;AAiBA,IAAM,aAAa,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAE9D,IAAMD,QAAM,GAAG;IACb,QAAQ;IACR,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW;IAC/D,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAC9D,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;CAC/D,CAAC;;AACF,IAAMD,UAAQ,GAAG,0NAKhB,CAAC;;;;;;;IAQ4CE,SAA9C,CAAA,wBAAA,EAAA,MAAA,CAAA,CAA+D;;;QAC7D,KAAF,CAAA,MAAA,GAAqBD,QAAM,CAAC;;;;QAF5B,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBD,UAAoB,EAAE,MAAM,EAA5BC,QAA4B,EAAC,EAA7B,EAAA;;IA9DA,OAAA,wBAAA,CAAA;CA+DA,CAA8C,iBAAiB,CAA/D,CAAA;;;;;;;AD9CA,IAAMG,eAAa,GAAG,MAAM,CAAC;;AAC7B,IAAM,SAAS,GAAG,GAAG,CAAC;;IAOoBF,SAA1C,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAsD;;;;;;;;;IACpD,oBAAF,CAAA,SAAA,CAAA,WAAa;;;;;IAAX,UAAY,KAAa,EAAE,MAAuB,EAApD;;QACI,IAAM,KAAK,GAAG,CAAC,KAAK,IAAIE,eAAa,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,EAAjE,EAAqE,OAAA,IAArE,GAAyE,CAAC,CAAC,IAAI,EAAE,GAAjF,IAAoF,CAApF,EAAoF,CAAC,CAAC;QAElF,OAAO;YACL,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,aAAa,GAAG,MAAM;YACjD,qBAAqB,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;SACvC,CAAC;KACH,CAAH;;QATA,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;IAxBA,OAAA,oBAAA,CAAA;CAyBA,CAA0C,YAAY,CAAtD,CAAA,CAAA;AAAA;IAWwCF,SAAxC,CAAA,kBAAA,EAAA,MAAA,CAAA,CAAsD;IASpD,SAAF,kBAAA,CAAwB,KAAiB,EACjB,UAAsB;;;IAGV,YAAkC,EAC9C,OAAwB,EADhD;QAJE,IAAF,KAAA,GAMI,MANJ,CAAA,IAAA,CAAA,IAAA,EAMU,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,CAAC,IANnD,IAAA,CAQG;QARqB,KAAxB,CAAA,KAA6B,GAAL,KAAK,CAAY;QACjB,KAAxB,CAAA,UAAkC,GAAV,UAAU,CAAY;QAGV,KAApC,CAAA,YAAgD,GAAZ,YAAY,CAAsB;QAC9C,KAAxB,CAAA,OAA+B,GAAP,OAAO,CAAiB;QAZ9C,KAAF,CAAA,aAAA,GAA4B,YAAY,CAAC;QAKvC,KAAF,CAAA,OAAA,GAAsB,KAAK,CAAC;QASxB,KAAI,CAAC,IAAI,EAAE,CAAC;;KACb;IAbD,MAAF,CAAA,cAAA,CACM,kBADN,CAAA,SAAA,EAAA,QACY,EADZ;;;;QAAE,YAAF,EAC0B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;;;;;QAC9C,UAAW,GAAY,EAAzB,EAA6B,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;;;KADzE,CAAA,CAAgD;;;;;;;;IAkBpC,kBAAZ,CAAA,SAAA,CAAA,eAA2B;;;;IAAzB,UAA0B,KAAa,EAAzC;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,gBAAgB,GAAG,UAAU,CAAC;QAC9D,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;KAC9C,CAAH;;;QAvDA,EAAA,IAAA,EAAmB,UAAU,EAA7B;QAGA,EAAA,IAAA,EAAE,UAAU,EAAZ;QAuCA,EAAA,IAAA,EAAkD,oBAAoB,EAAtE,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,CAAA,EAAA;QArCA,EAAA,IAAA,EAAE,eAAe,EAAjB;;;QA4BA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,CAAA;;IAxCA,OAAA,kBAAA,CAAA;CAoCA,CAAwC,cAAc,CAAtD,CAAA,CAAA;AAAA;AA6BA,IAAM,UAAU,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAC3D,IAAM,gBAAgB,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAEjE,IAAMD,QAAM,GAAG;IACb,SAAS;IACT,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY;IACpE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe;IAClE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe;CACnE,CAAC;;AAEF,IAAMD,UAAQ,GAAG,wOAKhB,CAAC;;;;;;;IAQ6CE,SAA/C,CAAA,yBAAA,EAAA,MAAA,CAAA,CAAiE;;;QAC/D,KAAF,CAAA,MAAA,GAAqBD,QAAM,CAAC;;;;QAF5B,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBD,UAAoB,EAAE,MAAM,EAA5BC,QAA4B,EAAC,EAA7B,EAAA;;IAvFA,OAAA,yBAAA,CAAA;CAwFA,CAA+C,kBAAkB,CAAjE,CAAA;;;;;;;ADvEA,IAAMG,eAAa,GAAG,SAAS,CAAC;;IAOUF,SAA1C,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAsD;;;;;;;;;IACpD,oBAAF,CAAA,SAAA,CAAA,WAAa;;;;;IAAX,UAAY,KAAa,EAAE,MAAsB,EAAnD;QACS,IAAT,EAAA,GAAA,CAAA,KAAA,IAAAE,eAAA,EAAA,KAAA,CAAA,GAAA,CAAA,EAAS,SAAT,GAAA,EAAA,CAAA,CAAA,CAAkB,EAAE,KAApB,GAAA,EAAA,CAAA,CAAA,CAAyB,CAAwC;QAC7D,IAAI,SAAS,KAAK,QAAQ,IAAI,SAAS,KAAK,KAAK,IAAI,SAAS,KAAK,OAAO,EAAE;YAC1E,SAAS,GAAG,KAAK,CAAC;SACnB;QAED,KAAK,GAAG,CAAC,KAAK,KAAK,OAAO,IAAI,SAAS,KAAK,OAAO,IAAI,QAAQ,GAAG,EAAE,CAAC;QAErE,OAAO;YACL,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,aAAa,GAAG,MAAM;YACjD,gBAAgB,EAAE,SAAS,GAAG,KAAK;SACpC,CAAC;KACH,CAAH;;QAdA,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;IAvBA,OAAA,oBAAA,CAAA;CAwBA,CAA0C,YAAY,CAAtD,CAAA,CAAA;AAAA;IAgBuCF,SAAvC,CAAA,iBAAA,EAAA,MAAA,CAAA,CAAqD;IAQnD,SAAF,iBAAA,CAAwB,UAAsB;;;IAGV,YAAkC,EAC9C,MAAkB,EAClB,OAAwB,EAFhD;QAHE,IAAF,KAAA,GAMI,MANJ,CAAA,IAAA,CAAA,IAAA,EAMU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IANpD,IAAA,CAQG;QARqB,KAAxB,CAAA,UAAkC,GAAV,UAAU,CAAY;QAGV,KAApC,CAAA,YAAgD,GAAZ,YAAY,CAAsB;QAC9C,KAAxB,CAAA,MAA8B,GAAN,MAAM,CAAY;QAClB,KAAxB,CAAA,OAA+B,GAAP,OAAO,CAAiB;QAT9C,KAAF,CAAA,OAAA,GAAsB,KAAK,CAAC;QAE1B,KAAF,CAAA,aAAA,GAA4B,WAAW,CAAC;QASpC,KAAI,CAAC,IAAI,EAAE,CAAC;;KACb;IAfD,MAAF,CAAA,cAAA,CACM,iBADN,CAAA,SAAA,EAAA,QACY,EADZ;;;;QAAE,YAAF,EAC0B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;;;;;QAC9C,UAAW,GAAY,EAAzB,EAA6B,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;;;KADzE,CAAA,CAAgD;;;;;;;;IAoBpC,iBAAZ,CAAA,SAAA,CAAA,eAA2B;;;;IAAzB,UAA0B,KAAa,EAAzC;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,eAAe,GAAG,SAAS,CAAC;QAC5D,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;KAC9C,CAAH;;;QA1DA,EAAA,IAAA,EAAmB,UAAU,EAA7B;QA4CA,EAAA,IAAA,EAAkD,oBAAoB,EAAtE,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,CAAA,EAAA;QAzCA,EAAA,IAAA,EAAE,UAAU,EAAZ;QAEA,EAAA,IAAA,EAAE,eAAe,EAAjB;;;QA6BA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,CAAA;;IAzCA,OAAA,iBAAA,CAAA;CAwCA,CAAuC,cAAc,CAArD,CAAA,CAAA;AAAA;AA4BA,IAAM,SAAS,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAC1D,IAAM,eAAe,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAEhE,IAAMD,QAAM,GAAG;IACb,QAAQ;IACR,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW;IAC/D,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAC9D,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;CAC/D,CAAC;;AACF,IAAMD,UAAQ,GAAG,0NAKhB,CAAC;;;;;;;IAQ4CE,SAA9C,CAAA,wBAAA,EAAA,MAAA,CAAA,CAA+D;;;QAC7D,KAAF,CAAA,MAAA,GAAqBD,QAAM,CAAC;;;;QAF5B,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBD,UAAoB,EAAE,MAAM,EAA5BC,QAA4B,EAAC,EAA7B,EAAA;;IAzFA,OAAA,wBAAA,CAAA;CA0FA,CAA8C,iBAAiB,CAA/D,CAAA;;;;;;;AD1EA,IAAMG,eAAa,GAAG,MAAM,CAAC;;IAGeF,SAA5C,CAAA,sBAAA,EAAA,MAAA,CAAA,CAAwD;;;;;;;;IACtD,sBAAF,CAAA,SAAA,CAAA,WAAa;;;;IAAX,UAAY,KAAa,EAA3B;QACI,OAAO,EAAC,aAAa,EAAE,KAAK,IAAIE,eAAa,EAAC,CAAC;KAChD,CAAH;;QAJA,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;IAlBA,OAAA,sBAAA,CAAA;CAmBA,CAA4C,YAAY,CAAxD,CAAA,CAAA;AAAA;IAMyCF,SAAzC,CAAA,mBAAA,EAAA,MAAA,CAAA,CAAuD;IAGrD,SAAF,mBAAA,CAAwB,UAAsB;;;IAGV,YAAoC,EAChD,MAAkB,EAClB,OAAwB,EAFhD;QAHE,IAAF,KAAA,GAMI,MANJ,CAAA,IAAA,CAAA,IAAA,EAMU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IANpD,IAAA,CAQG;QARqB,KAAxB,CAAA,UAAkC,GAAV,UAAU,CAAY;QAGV,KAApC,CAAA,YAAgD,GAAZ,YAAY,CAAwB;QAChD,KAAxB,CAAA,MAA8B,GAAN,MAAM,CAAY;QAClB,KAAxB,CAAA,OAA+B,GAAP,OAAO,CAAiB;QAP9C,KAAF,CAAA,aAAA,GAA4B,aAAa,CAAC;QAYxC,KAAF,CAAA,UAAA,GAAyB,WAAW,CAAC;QAHjC,KAAI,CAAC,IAAI,EAAE,CAAC;;KACb;;;QA7BH,EAAA,IAAA,EAAmB,UAAU,EAA7B;QAwBA,EAAA,IAAA,EAAkD,sBAAsB,EAAxE,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,CAAA,EAAA;QArBA,EAAA,IAAA,EAAE,UAAU,EAAZ;QACA,EAAA,IAAA,EAAE,eAAe,EAAjB;;IAXA,OAAA,mBAAA,CAAA;CAyBA,CAAyC,cAAc,CAAvD,CAAA,CAAA;AAAA;AAgBA,IAAM,WAAW,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAE5D,IAAMD,QAAM,GAAG;IACb,UAAU;IACV,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa;IACzE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB;IACtE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB;CACvE,CAAC;;AAEF,IAAMD,UAAQ,GAAG,sPAKhB,CAAC;;;;;;;IAQ8CE,SAAhD,CAAA,0BAAA,EAAA,MAAA,CAAA,CAAmE;;;QACjE,KAAF,CAAA,MAAA,GAAqBD,QAAM,CAAC;;;;QAF5B,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBD,UAAoB,EAAE,MAAM,EAA5BC,QAA4B,EAAC,EAA7B,EAAA;;IA9DA,OAAA,0BAAA,CAAA;CA+DA,CAAgD,mBAAmB,CAAnE,CAAA;;;;;;;AD9CA,IAAMG,eAAa,GAAG,MAAM,CAAC;;AAC7B,IAAM,cAAc,GAAG,GAAG,CAAC;;IAOkBF,SAA7C,CAAA,uBAAA,EAAA,MAAA,CAAA,CAAyD;;;;;;;;;IACvD,uBAAF,CAAA,SAAA,CAAA,WAAa;;;;;IAAX,UAAY,KAAa,EAAE,MAAyB,EAAtD;QACI,KAAK,GAAG,KAAK,IAAIE,eAAa,CAAC;;QAC/B,IAAI,IAAI,GAAG,KAAK,CAAC;QACjB,IAAI,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;YAClC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;YAC1D,IAAI,GAAG,IAAI,CAAC;SACb;;QAED,IAAM,GAAG,GAAG;YACV,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,aAAa,GAAG,MAAM;YACjD,mBAAmB,EAAE,EAAE;YACvB,uBAAuB,EAAE,EAAE;SAC5B,CAAC;;QACF,IAAM,GAAG,IAAI,IAAI,GAAG,mBAAmB,GAAG,uBAAuB,CAAC,CAAC;QACnE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QAEjB,OAAO,GAAG,CAAC;KACZ,CAAH;;QAnBA,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;IAxBA,OAAA,uBAAA,CAAA;CAyBA,CAA6C,YAAY,CAAzD,CAAA,CAAA;AAAA;IAqB0CF,SAA1C,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAwD;IAQtD,SAAF,oBAAA,CAAwB,UAAsB;;;IAGV,YAAqC,EACjD,MAAkB,EAClB,OAAwB,EAFhD;QAHE,IAAF,KAAA,GAMI,MANJ,CAAA,IAAA,CAAA,IAAA,EAMU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IANpD,IAAA,CAQG;QARqB,KAAxB,CAAA,UAAkC,GAAV,UAAU,CAAY;QAGV,KAApC,CAAA,YAAgD,GAAZ,YAAY,CAAyB;QACjD,KAAxB,CAAA,MAA8B,GAAN,MAAM,CAAY;QAClB,KAAxB,CAAA,OAA+B,GAAP,OAAO,CAAiB;QAZ9C,KAAF,CAAA,aAAA,GAA4B,cAAc,CAAC;QAKzC,KAAF,CAAA,OAAA,GAAsB,KAAK,CAAC;QASxB,KAAI,CAAC,IAAI,EAAE,CAAC;;KACb;IAbD,MAAF,CAAA,cAAA,CACM,oBADN,CAAA,SAAA,EAAA,QACY,EADZ;;;;QAAE,YAAF,EAC0B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;;;;;QAC9C,UAAW,GAAY,EAAzB,EAA6B,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;;;KADzE,CAAA,CAAgD;;;;;;;;IAkBpC,oBAAZ,CAAA,SAAA,CAAA,eAA2B;;;;IAAzB,UAA0B,KAAa,EAAzC;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,kBAAkB,GAAG,YAAY,CAAC;QAClE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;KAC9C,CAAH;;;QAhEA,EAAA,IAAA,EAAmB,UAAU,EAA7B;QAkDA,EAAA,IAAA,EAAkD,uBAAuB,EAAzE,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,CAAA,EAAA;QA5CA,EAAA,IAAA,EAAE,UAAU,EAAZ;QAJA,EAAA,IAAA,EAAE,eAAe,EAAjB;;;QAwCA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,CAAA;;IAjDA,OAAA,oBAAA,CAAA;CA8CA,CAA0C,cAAc,CAAxD,CAAA,CAAA;AAAA;AA4BA,IAAM,YAAY,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAC7D,IAAM,kBAAkB,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAEnE,IAAMD,QAAM,GAAG;IACb,WAAW;IACX,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAC9E,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB;IAC1E,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB;CAC3E,CAAC;;AAEF,IAAMD,UAAQ,GAAG,oQAKhB,CAAC;;;;;;;;IAS+CE,SAAjD,CAAA,2BAAA,EAAA,MAAA,CAAA,CAAqE;;;QACnE,KAAF,CAAA,MAAA,GAAqBD,QAAM,CAAC;;;;QAF5B,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBD,UAAoB,EAAE,MAAM,EAA5BC,QAA4B,EAAC,EAA7B,EAAA;;IAjGA,OAAA,2BAAA,CAAA;CAkGA,CAAiD,oBAAoB,CAArE,CAAA;;;;;;;ADjFA,IAAMG,eAAa,GAAG,GAAG,CAAC;;IAOeF,SAAzC,CAAA,mBAAA,EAAA,MAAA,CAAA,CAAqD;;;;;;;;;IACnD,mBAAF,CAAA,SAAA,CAAA,WAAa;;;;;IAAX,UAAY,KAAa,EAAE,MAAqB,EAAlD;QACI,OAAO;YACL,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,aAAa,GAAG,MAAM;YACjD,UAAU,EAAE,KAAK,IAAIE,eAAa;SACnC,CAAC;KACH,CAAH;;QAPA,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;IAvBA,OAAA,mBAAA,CAAA;CAwBA,CAAyC,YAAY,CAArD,CAAA,CAAA;AAAA;IASsCF,SAAtC,CAAA,gBAAA,EAAA,MAAA,CAAA,CAAoD;IAQlD,SAAF,gBAAA,CAAwB,KAAiB,EACjB,UAAsB;;;IAGV,YAAiC,EAC7C,OAAwB,EADhD;QAJE,IAAF,KAAA,GAMI,MANJ,CAAA,IAAA,CAAA,IAAA,EAMU,KAAK,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,CAAC,IANnD,IAAA,CAQG;QARqB,KAAxB,CAAA,KAA6B,GAAL,KAAK,CAAY;QACjB,KAAxB,CAAA,UAAkC,GAAV,UAAU,CAAY;QAGV,KAApC,CAAA,YAAgD,GAAZ,YAAY,CAAqB;QAC7C,KAAxB,CAAA,OAA+B,GAAP,OAAO,CAAiB;QAZ9C,KAAF,CAAA,aAAA,GAA4B,UAAU,CAAC;QAKrC,KAAF,CAAA,OAAA,GAAsB,KAAK,CAAC;QASxB,KAAI,CAAC,IAAI,EAAE,CAAC;;KACb;IAbD,MAAF,CAAA,cAAA,CACM,gBADN,CAAA,SAAA,EAAA,QACY,EADZ;;;;QAAE,YAAF,EAC0B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;;;;;QAC9C,UAAW,GAAY,EAAzB,EAA6B,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;;;KADzE,CAAA,CAAgD;;;;;;;;IAkBpC,gBAAZ,CAAA,SAAA,CAAA,eAA2B;;;;IAAzB,UAA0B,KAAa,EAAzC;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,cAAc,GAAG,QAAQ,CAAC;QAC1D,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;KAC9C,CAAH;;;QAnDA,EAAA,IAAA,EAAmB,UAAU,EAA7B;QAGA,EAAA,IAAA,EAAE,UAAU,EAAZ;QAmCA,EAAA,IAAA,EAAkD,mBAAmB,EAArE,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,CAAA,EAAA;QAlCA,EAAA,IAAA,EAAE,eAAe,EAAjB;;;QAyBA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,CAAA;;IApCA,OAAA,gBAAA,CAAA;CAiCA,CAAsC,cAAc,CAApD,CAAA,CAAA;AAAA;AA4BA,IAAM,QAAQ,GAAiC,IAAI,GAAG,EAAE,CAAC;;AACzD,IAAM,cAAc,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAE/D,IAAMD,QAAM,GAAG;IACb,OAAO;IACP,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAC1D,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa;IAC1D,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa;CAC3D,CAAC;;AAEF,IAAMD,UAAQ,GAAG,4MAKhB,CAAC;;;;;;;;IAS2CE,SAA7C,CAAA,uBAAA,EAAA,MAAA,CAAA,CAA6D;;;QAC3D,KAAF,CAAA,MAAA,GAAqBD,QAAM,CAAC;;;;QAF5B,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBD,UAAoB,EAAE,MAAM,EAA5BC,QAA4B,EAAC,EAA7B,EAAA;;IApFA,OAAA,uBAAA,CAAA;CAqFA,CAA6C,gBAAgB,CAA7D,CAAA;;;;;;;ADrEA,IAAMG,eAAa,GAAG,MAAM,CAAC;;IAGYF,SAAzC,CAAA,mBAAA,EAAA,MAAA,CAAA,CAAqD;;;;;;;;IACnD,mBAAF,CAAA,SAAA,CAAA,WAAa;;;;IAAX,UAAY,KAAa,EAA3B;QACI,OAAO,EAAC,UAAU,EAAE,KAAK,IAAIE,eAAa,EAAC,CAAC;KAC7C,CAAH;;QAJA,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;IAlBA,OAAA,mBAAA,CAAA;CAmBA,CAAyC,YAAY,CAArD,CAAA,CAAA;AAAA;IAMsCF,SAAtC,CAAA,gBAAA,EAAA,MAAA,CAAA,CAAoD;IAGlD,SAAF,gBAAA,CAAwB,UAAsB;;;IAGV,YAAiC,EAC7C,MAAkB,EAClB,OAAwB,EAFhD;QAHE,IAAF,KAAA,GAMI,MANJ,CAAA,IAAA,CAAA,IAAA,EAMU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IANpD,IAAA,CAQG;QARqB,KAAxB,CAAA,UAAkC,GAAV,UAAU,CAAY;QAGV,KAApC,CAAA,YAAgD,GAAZ,YAAY,CAAqB;QAC7C,KAAxB,CAAA,MAA8B,GAAN,MAAM,CAAY;QAClB,KAAxB,CAAA,OAA+B,GAAP,OAAO,CAAiB;QAP9C,KAAF,CAAA,aAAA,GAA4B,UAAU,CAAC;QAYrC,KAAF,CAAA,UAAA,GAAyB,QAAQ,CAAC;QAH9B,KAAI,CAAC,IAAI,EAAE,CAAC;;KACb;;;QA7BH,EAAA,IAAA,EAAmB,UAAU,EAA7B;QAwBA,EAAA,IAAA,EAAkD,mBAAmB,EAArE,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,CAAA,EAAA;QArBA,EAAA,IAAA,EAAE,UAAU,EAAZ;QACA,EAAA,IAAA,EAAE,eAAe,EAAjB;;IAXA,OAAA,gBAAA,CAAA;CAyBA,CAAsC,cAAc,CAApD,CAAA,CAAA;AAAA;AAgBA,IAAM,QAAQ,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAEzD,IAAMD,QAAM,GAAG;IACb,OAAO;IACP,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;IAC1D,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa;IAC1D,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa;CAC3D,CAAC;;AAEF,IAAMD,UAAQ,GAAG,4MAKhB,CAAC;;;;;;;IAQ2CE,SAA7C,CAAA,uBAAA,EAAA,MAAA,CAAA,CAA6D;;;QAC3D,KAAF,CAAA,MAAA,GAAqBD,QAAM,CAAC;;;;QAF5B,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBD,UAAoB,EAAE,MAAM,EAA5BC,QAA4B,EAAC,EAA7B,EAAA;;IA9DA,OAAA,uBAAA,CAAA;CA+DA,CAA6C,gBAAgB,CAA7D,CAAA;;;;;;;AD9CA,IAAMG,eAAa,GAAG,MAAM,CAAC;;AAC7B,IAAMD,gBAAc,GAAG,GAAG,CAAC;;IAOeD,SAA1C,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAsD;;;;;;;;;IACpD,oBAAF,CAAA,SAAA,CAAA,WAAa;;;;;IAAX,UAAY,KAAa,EAAE,MAAsB,EAAnD;QACI,KAAK,GAAG,KAAK,IAAIE,eAAa,CAAC;;QAC/B,IAAI,IAAI,GAAG,KAAK,CAAC;QACjB,IAAI,KAAK,CAAC,QAAQ,CAACD,gBAAc,CAAC,EAAE;YAClC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,CAACA,gBAAc,CAAC,CAAC,CAAC;YAC1D,IAAI,GAAG,IAAI,CAAC;SACb;;QAED,IAAM,GAAG,GAAG;YACV,SAAS,EAAE,MAAM,CAAC,MAAM,GAAG,aAAa,GAAG,MAAM;YACjD,gBAAgB,EAAE,EAAE;YACpB,oBAAoB,EAAE,EAAE;SACzB,CAAC;;QACF,IAAM,GAAG,IAAI,IAAI,GAAG,gBAAgB,GAAG,oBAAoB,CAAC,CAAC;QAC7D,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QAEjB,OAAO,GAAG,CAAC;KACZ,CAAH;;QAnBA,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;IAxBA,OAAA,oBAAA,CAAA;CAyBA,CAA0C,YAAY,CAAtD,CAAA,CAAA;AAAA;IAqBuCD,SAAvC,CAAA,iBAAA,EAAA,MAAA,CAAA,CAAqD;IAQnD,SAAF,iBAAA,CAAwB,UAAsB;;;IAGV,YAAkC,EAC9C,MAAkB,EAClB,OAAwB,EAFhD;QAHE,IAAF,KAAA,GAMI,MANJ,CAAA,IAAA,CAAA,IAAA,EAMU,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,IANpD,IAAA,CAQG;QARqB,KAAxB,CAAA,UAAkC,GAAV,UAAU,CAAY;QAGV,KAApC,CAAA,YAAgD,GAAZ,YAAY,CAAsB;QAC9C,KAAxB,CAAA,MAA8B,GAAN,MAAM,CAAY;QAClB,KAAxB,CAAA,OAA+B,GAAP,OAAO,CAAiB;QAZ9C,KAAF,CAAA,aAAA,GAA4B,WAAW,CAAC;QAKtC,KAAF,CAAA,OAAA,GAAsB,KAAK,CAAC;QASxB,KAAI,CAAC,IAAI,EAAE,CAAC;;KACb;IAbD,MAAF,CAAA,cAAA,CACM,iBADN,CAAA,SAAA,EAAA,QACY,EADZ;;;;QAAE,YAAF,EAC0B,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;;;;;QAC9C,UAAW,GAAY,EAAzB,EAA6B,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,EAAE;;;KADzE,CAAA,CAAgD;;;;;;;;IAkBpC,iBAAZ,CAAA,SAAA,CAAA,eAA2B;;;;IAAzB,UAA0B,KAAa,EAAzC;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,eAAe,GAAG,SAAS,CAAC;QAC5D,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;KAC9C,CAAH;;;QAhEA,EAAA,IAAA,EAAmB,UAAU,EAA7B;QAkDA,EAAA,IAAA,EAAkD,oBAAoB,EAAtE,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,CAAA,EAAA;QA5CA,EAAA,IAAA,EAAE,UAAU,EAAZ;QAJA,EAAA,IAAA,EAAE,eAAe,EAAjB;;;QAwCA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,CAAA;;IAjDA,OAAA,iBAAA,CAAA;CA8CA,CAAuC,cAAc,CAArD,CAAA,CAAA;AAAA;AA4BA,IAAM,SAAS,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAC1D,IAAM,eAAe,GAAiC,IAAI,GAAG,EAAE,CAAC;;AAEhE,IAAMD,SAAM,GAAG;IACb,QAAQ;IACR,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW;IAC/D,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;IAC9D,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;CAC/D,CAAC;;AAEF,IAAMD,WAAQ,GAAG,0NAKhB,CAAC;;;;;;;;IAS4CE,SAA9C,CAAA,wBAAA,EAAA,MAAA,CAAA,CAA+D;;;QAC7D,KAAF,CAAA,MAAA,GAAqBD,SAAM,CAAC;;;;QAF5B,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAC,QAAQ,EAApBD,WAAoB,EAAE,MAAM,EAA5BC,SAA4B,EAAC,EAA7B,EAAA;;IAjGA,OAAA,wBAAA,CAAA;CAkGA,CAA8C,iBAAiB,CAA/D,CAAA;;;;;;AD3FA;AAgBA,IAAM,cAAc,GAAG;IACrB,yBAAyB;IACzB,gCAAgC;IAChC,6BAA6B;IAC7B,wBAAwB;IACxB,yBAAyB;IACzB,wBAAwB;IACxB,0BAA0B;IAC1B,2BAA2B;IAC3B,uBAAuB;IACvB,uBAAuB;IACvB,wBAAwB;CACzB,CAAC;;;;;;;;;;QAQF,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;oBACR,OAAO,EAAE,CAAC,UAAU,CAAC;oBACrB,YAAY,EAAM,cAAc,CAAlC,KAAA,EAAmC;oBACjC,OAAO,EAAM,cAAc,CAA7B,KAAA,EAA8B;iBAC7B,EAAD,EAAA;;IA/CA,OAAA,UAAA,CAAA;;;;;;;;;;;;;;;"}