{"version":3,"file":"extended.es5.js","sources":["../../../src/lib/extended/module.ts","../../../src/lib/extended/style/style.ts","../../../src/lib/extended/style/style-transforms.ts","../../../src/lib/utils/object-extend.ts","../../../src/lib/extended/show-hide/show-hide.ts","../../../src/lib/extended/class/class.ts","../../../src/lib/extended/img-src/img-src.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {ImgSrcDirective} from './img-src/img-src';\nimport {ClassDirective} from './class/class';\nimport {ShowHideDirective} from './show-hide/show-hide';\nimport {StyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  ShowHideDirective,\n  ClassDirective,\n  StyleDirective,\n  ImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  KeyValueDiffers,\n  OnDestroy,\n  OnChanges,\n  Optional,\n  Renderer2,\n  SecurityContext,\n  Self,\n  SimpleChanges,\n  OnInit,\n} from '@angular/core';\nimport {NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective,\n  BaseDirectiveAdapter,\n  MediaChange,\n  MediaMonitor,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({\n  selector: `\n    [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n    [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n    [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n  `\n})\nexport class StyleDirective extends BaseDirective implements DoCheck, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Intercept ngStyle assignments so we cache the default styles\n   * which are merged with activated styles or used as fallbacks.\n   */\n  @Input('ngStyle')\n  set ngStyleBase(val: NgStyleType) {\n    const key = 'ngStyle';\n    this._base.cacheInput(key, val, true);  // convert val to hashmap\n    this._ngStyleInstance.ngStyle = this._base.queryInput(key);\n  }\n\n  /* tslint:disable */\n  @Input('ngStyle.xs')    set ngStyleXs(val: NgStyleType) { this._base.cacheInput('ngStyleXs', val, true); }\n  @Input('ngStyle.sm')    set ngStyleSm(val: NgStyleType) { this._base.cacheInput('ngStyleSm', val, true); };\n  @Input('ngStyle.md')    set ngStyleMd(val: NgStyleType) { this._base.cacheInput('ngStyleMd', val, true); };\n  @Input('ngStyle.lg')    set ngStyleLg(val: NgStyleType) { this._base.cacheInput('ngStyleLg', val, true); };\n  @Input('ngStyle.xl')    set ngStyleXl(val: NgStyleType) { this._base.cacheInput('ngStyleXl', val, true); };\n\n  @Input('ngStyle.lt-sm') set ngStyleLtSm(val: NgStyleType) { this._base.cacheInput('ngStyleLtSm', val, true); };\n  @Input('ngStyle.lt-md') set ngStyleLtMd(val: NgStyleType) { this._base.cacheInput('ngStyleLtMd', val, true); };\n  @Input('ngStyle.lt-lg') set ngStyleLtLg(val: NgStyleType) { this._base.cacheInput('ngStyleLtLg', val, true); };\n  @Input('ngStyle.lt-xl') set ngStyleLtXl(val: NgStyleType) { this._base.cacheInput('ngStyleLtXl', val, true); };\n\n  @Input('ngStyle.gt-xs') set ngStyleGtXs(val: NgStyleType) { this._base.cacheInput('ngStyleGtXs', val, true); };\n  @Input('ngStyle.gt-sm') set ngStyleGtSm(val: NgStyleType) { this._base.cacheInput('ngStyleGtSm', val, true); } ;\n  @Input('ngStyle.gt-md') set ngStyleGtMd(val: NgStyleType) { this._base.cacheInput('ngStyleGtMd', val, true); };\n  @Input('ngStyle.gt-lg') set ngStyleGtLg(val: NgStyleType) { this._base.cacheInput('ngStyleGtLg', val, true); };\n  /* tslint:enable */\n\n  /**\n   *  Constructor for the ngStyle subclass; which adds selectors and\n   *  a MediaQuery Activation Adapter\n   */\n  constructor(private monitor: MediaMonitor,\n              protected _sanitizer: DomSanitizer,\n              protected _ngEl: ElementRef,\n              protected _renderer: Renderer2,\n              protected _differs: KeyValueDiffers,\n              @Optional() @Self() private readonly _ngStyleInstance: NgStyle,\n              protected _styler: StyleUtils) {\n    super(monitor, _ngEl, _styler);\n    this._base = new BaseDirectiveAdapter(\n      'ngStyle',\n      this.monitor,\n      this._ngEl,\n      this._styler\n    );\n    if (!this._ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this._ngStyleInstance = new NgStyle(this._differs, this._ngEl, this._renderer);\n    }\n\n    this._buildCacheInterceptor();\n    this._fallbackToStyle();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For @Input changes on the current mq activation property */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._ngStyleInstance.ngStyle = this._base.mqActivation.activatedInput || '';\n    }\n  }\n\n  ngOnInit() {\n    this._configureMQListener();\n  }\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this._ngStyleInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n   * Build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  protected _configureMQListener(baseKey = 'ngStyle') {\n    const fallbackValue = this._base.queryInput(baseKey);\n    this._base.listenForMediaQueryChanges(baseKey, fallbackValue, (changes: MediaChange) => {\n      this._ngStyleInstance.ngStyle = changes.value || '';\n      this._ngStyleInstance.ngDoCheck();\n    });\n  }\n\n  // ************************************************************************\n  // Private Internal Methods\n  // ************************************************************************\n\n  /** Build intercept to convert raw strings to ngStyleMap */\n  protected _buildCacheInterceptor() {\n    let cacheInput = this._base.cacheInput.bind(this._base);\n    this._base.cacheInput = (key?: string, source?: any, cacheRaw = false, merge = true) => {\n      let styles = this._buildStyleMap(source);\n      if (merge) {\n        styles = extendObject({}, this._base.inputMap['ngStyle'], styles);\n      }\n      cacheInput(key, styles, cacheRaw);\n    };\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected _buildStyleMap(styles: NgStyleType) {\n    let sanitizer: NgStyleSanitizer = (val: any) => {\n      // Always safe-guard (aka sanitize) style property values\n      return this._sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    };\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return styles;\n  }\n\n  /** Initial lookup of raw 'class' value (if any) */\n  protected _fallbackToStyle() {\n    if (!this._base.queryInput('ngStyle')) {\n      this.ngStyleBase = this._getAttributeValue('style') || '';\n    }\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the StyleDirective\n   */\n  protected _base: BaseDirectiveAdapter;\n\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  let [key, val] = it.split(':');\n  return new NgStyleKeyValue(key, val);\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Self,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective,\n  MediaChange,\n  MediaMonitor,\n  SERVER_TOKEN,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {Subscription} from 'rxjs';\n\nimport {LayoutDirective} from '@angular/flex-layout/flex';\n\nconst FALSY = ['false', false, 0];\n\n/**\n * For fxHide selectors, we invert the 'value'\n * and assign to the equivalent fxShow selector cache\n *  - When 'hide' === '' === true, do NOT show the element\n *  - When 'hide' === false or 0... we WILL show the element\n */\nexport function negativeOf(hide: any) {\n  return (hide === '') ? false :\n         ((hide === 'false') || (hide === 0)) ? true : !hide;\n}\n\n/**\n * 'show' Layout API directive\n *\n */\n@Directive({\n  selector: `\n  [fxShow],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`\n})\nexport class ShowHideDirective extends BaseDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher?: Subscription;\n\n  /** Original dom Elements CSS display style */\n  protected _display: string = '';\n\n  /* tslint:disable */\n  @Input('fxShow')       set show(val: string) {  this._cacheInput('show', val);  }\n  @Input('fxShow.xs')    set showXs(val: string) {this._cacheInput('showXs', val);}\n  @Input('fxShow.sm')    set showSm(val: string) {this._cacheInput('showSm', val); };\n  @Input('fxShow.md')    set showMd(val: string) {this._cacheInput('showMd', val); };\n  @Input('fxShow.lg')    set showLg(val: string) {this._cacheInput('showLg', val); };\n  @Input('fxShow.xl')    set showXl(val: string) {this._cacheInput('showXl', val); };\n\n  @Input('fxShow.lt-sm') set showLtSm(val: string) { this._cacheInput('showLtSm', val); };\n  @Input('fxShow.lt-md') set showLtMd(val: string) { this._cacheInput('showLtMd', val); };\n  @Input('fxShow.lt-lg') set showLtLg(val: string) { this._cacheInput('showLtLg', val); };\n  @Input('fxShow.lt-xl') set showLtXl(val: string) { this._cacheInput('showLtXl', val); };\n\n  @Input('fxShow.gt-xs') set showGtXs(val: string) {this._cacheInput('showGtXs', val); };\n  @Input('fxShow.gt-sm') set showGtSm(val: string) {this._cacheInput('showGtSm', val); };\n  @Input('fxShow.gt-md') set showGtMd(val: string) {this._cacheInput('showGtMd', val); };\n  @Input('fxShow.gt-lg') set showGtLg(val: string) {this._cacheInput('showGtLg', val); };\n\n  @Input('fxHide')       set hide(val: string) {this._cacheInput('show', negativeOf(val));}\n  @Input('fxHide.xs')    set hideXs(val: string) {this._cacheInput('showXs', negativeOf(val));}\n  @Input('fxHide.sm')    set hideSm(val: string) {this._cacheInput('showSm', negativeOf(val)); };\n  @Input('fxHide.md')    set hideMd(val: string) {this._cacheInput('showMd', negativeOf(val)); };\n  @Input('fxHide.lg')    set hideLg(val: string) {this._cacheInput('showLg', negativeOf(val)); };\n  @Input('fxHide.xl')    set hideXl(val: string) {this._cacheInput('showXl', negativeOf(val)); };\n\n  @Input('fxHide.lt-sm') set hideLtSm(val: string) { this._cacheInput('showLtSm', negativeOf(val)); };\n  @Input('fxHide.lt-md') set hideLtMd(val: string) { this._cacheInput('showLtMd', negativeOf(val)); };\n  @Input('fxHide.lt-lg') set hideLtLg(val: string) { this._cacheInput('showLtLg', negativeOf(val)); };\n  @Input('fxHide.lt-xl') set hideLtXl(val: string) { this._cacheInput('showLtXl', negativeOf(val)); };\n\n  @Input('fxHide.gt-xs') set hideGtXs(val: string) {this._cacheInput('showGtXs', negativeOf(val)); };\n  @Input('fxHide.gt-sm') set hideGtSm(val: string) {this._cacheInput('showGtSm', negativeOf(val)); };\n  @Input('fxHide.gt-md') set hideGtMd(val: string) {this._cacheInput('showGtMd', negativeOf(val)); };\n  @Input('fxHide.gt-lg') set hideGtLg(val: string) {this._cacheInput('showGtLg', negativeOf(val)); };\n  /* tslint:enable */\n\n  constructor(monitor: MediaMonitor,\n              @Optional() @Self() protected layout: LayoutDirective,\n              protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n\n    super(monitor, elRef, styleUtils);\n\n    if (layout) {\n      /**\n       * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.\n       * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS\n       */\n      this._layoutWatcher = layout.layout$.subscribe(() => this._updateWithValue());\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected _getDisplayStyle(): string {\n    return this.layout ? 'flex' : super._getDisplayStyle();\n  }\n\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.hasInitialized && (changes['show'] != null || this._mqActivation)) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this._display = this._getDisplayStyle();\n\n    let value = this._getDefaultVal('show', true);\n    // Build _mqActivation controller\n    this._listenForMediaQueryChanges('show', value, (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected _updateWithValue(value?: string|number|boolean) {\n    value = value || this._getDefaultVal('show', true);\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    let shouldShow = this._validateTruthy(value);\n    this._applyStyleToElement(this._buildCSS(shouldShow));\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n  }\n\n\n  /** Build the CSS that should be assigned to the element instance */\n  protected _buildCSS(show: boolean) {\n    return {'display': show ? this._display : 'none'};\n  }\n\n  /**  Validate the to be not FALSY */\n  _validateTruthy(show: string | number | boolean = '') {\n    return (FALSY.indexOf(show) === -1);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  Self,\n  OnInit,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {\n  BaseDirective,\n  BaseDirectiveAdapter,\n  MediaChange,\n  MediaMonitor,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n\n/** NgClass allowed inputs **/\nexport type NgClassType = string | string[] | Set<string> | {[klass: string]: any};\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({\n  selector: `\n    [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n    [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n    [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n  `\n})\nexport class ClassDirective extends BaseDirective\n    implements DoCheck, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Intercept ngClass assignments so we cache the default classes\n   * which are merged with activated styles or used as fallbacks.\n   * Note: Base ngClass values are applied during ngDoCheck()\n   */\n  @Input('ngClass')\n  set ngClassBase(val: NgClassType) {\n    const key = 'ngClass';\n    this._base.cacheInput(key, val, true);\n    this._ngClassInstance.ngClass = this._base.queryInput(key);\n  }\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klazz(val: string) {\n    const key = 'class';\n    this._base.cacheInput(key, val);\n    this._ngClassInstance.klass = val;\n  }\n\n  /* tslint:disable */\n  @Input('ngClass.xs')    set ngClassXs(val:   NgClassType) { this._base.cacheInput('ngClassXs',   val, true); }\n  @Input('ngClass.sm')    set ngClassSm(val:   NgClassType) { this._base.cacheInput('ngClassSm',   val, true); }\n  @Input('ngClass.md')    set ngClassMd(val:   NgClassType) { this._base.cacheInput('ngClassMd',   val, true); }\n  @Input('ngClass.lg')    set ngClassLg(val:   NgClassType) { this._base.cacheInput('ngClassLg',   val, true); }\n  @Input('ngClass.xl')    set ngClassXl(val:   NgClassType) { this._base.cacheInput('ngClassXl',   val, true); }\n\n  @Input('ngClass.lt-sm') set ngClassLtSm(val: NgClassType) { this._base.cacheInput('ngClassLtSm', val, true); }\n  @Input('ngClass.lt-md') set ngClassLtMd(val: NgClassType) { this._base.cacheInput('ngClassLtMd', val, true); }\n  @Input('ngClass.lt-lg') set ngClassLtLg(val: NgClassType) { this._base.cacheInput('ngClassLtLg', val, true); }\n  @Input('ngClass.lt-xl') set ngClassLtXl(val: NgClassType) { this._base.cacheInput('ngClassLtXl', val, true); }\n\n  @Input('ngClass.gt-xs') set ngClassGtXs(val: NgClassType) { this._base.cacheInput('ngClassGtXs', val, true); }\n  @Input('ngClass.gt-sm') set ngClassGtSm(val: NgClassType) { this._base.cacheInput('ngClassGtSm', val, true); }\n  @Input('ngClass.gt-md') set ngClassGtMd(val: NgClassType) { this._base.cacheInput('ngClassGtMd', val, true); }\n  @Input('ngClass.gt-lg') set ngClassGtLg(val: NgClassType) { this._base.cacheInput('ngClassGtLg', val, true); }\n\n  /* tslint:enable */\n  constructor(protected monitor: MediaMonitor,\n              protected _iterableDiffers: IterableDiffers,\n              protected _keyValueDiffers: KeyValueDiffers,\n              protected _ngEl: ElementRef,\n              protected _renderer: Renderer2,\n              @Optional() @Self() private readonly _ngClassInstance: NgClass,\n              protected _styler: StyleUtils) {\n    super(monitor, _ngEl, _styler);\n    this._base = new BaseDirectiveAdapter(\n      'ngClass',\n      this.monitor,\n      this._ngEl,\n      this._styler\n    );\n    if (!this._ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this._ngClassInstance = new NgClass(\n        this._iterableDiffers, this._keyValueDiffers, this._ngEl, this._renderer\n      );\n    }\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._ngClassInstance.ngClass = this._base.mqActivation.activatedInput || '';\n    }\n  }\n\n  ngOnInit() {\n    this._configureMQListener();\n  }\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this._ngClassInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n   * Build an mqActivation object that bridges mql change events to onMediaQueryChange handlers\n   * NOTE: We delegate subsequent activity to the NgClass logic\n   *       Identify the activated input value and update the ngClass iterables...\n   *       Use ngDoCheck() to actually apply the values to the element\n   */\n  protected _configureMQListener(baseKey = 'ngClass') {\n    const fallbackValue = this._base.queryInput(baseKey);\n    this._base.listenForMediaQueryChanges(baseKey, fallbackValue, (changes: MediaChange) => {\n      this._ngClassInstance.ngClass = changes.value || '';\n      this._ngClassInstance.ngDoCheck();\n    });\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors and capture mediaQuery changes\n   * Delegate value changes to the internal `_ngClassInstance` for processing\n   */\n  protected _base: BaseDirectiveAdapter;   // used for `ngClass.xxx` selectors\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  Inject,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective,\n  MediaMonitor,\n  SERVER_TOKEN,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({\n  selector: `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`\n})\nexport class ImgSrcDirective extends BaseDirective implements OnInit, OnChanges {\n\n  /* tslint:disable */\n  @Input('src')        set srcBase(val: string) { this.cacheDefaultSrc(val);           }\n\n  @Input('src.xs')     set srcXs(val: string)   { this._cacheInput('srcXs', val);  }\n  @Input('src.sm')     set srcSm(val: string)   { this._cacheInput('srcSm', val);  }\n  @Input('src.md')     set srcMd(val: string)   { this._cacheInput('srcMd', val);  }\n  @Input('src.lg')     set srcLg(val: string)   { this._cacheInput('srcLg', val);  }\n  @Input('src.xl')     set srcXl(val: string)   { this._cacheInput('srcXl', val);  }\n\n  @Input('src.lt-sm')  set srcLtSm(val: string) { this._cacheInput('srcLtSm', val);  }\n  @Input('src.lt-md')  set srcLtMd(val: string) { this._cacheInput('srcLtMd', val);  }\n  @Input('src.lt-lg')  set srcLtLg(val: string) { this._cacheInput('srcLtLg', val);  }\n  @Input('src.lt-xl')  set srcLtXl(val: string) { this._cacheInput('srcLtXl', val);  }\n\n  @Input('src.gt-xs')  set srcGtXs(val: string) { this._cacheInput('srcGtXs', val);  }\n  @Input('src.gt-sm')  set srcGtSm(val: string) { this._cacheInput('srcGtSm', val);  }\n  @Input('src.gt-md')  set srcGtMd(val: string) { this._cacheInput('srcGtMd', val);  }\n  @Input('src.gt-lg')  set srcGtLg(val: string) { this._cacheInput('srcGtLg', val);  }\n  /* tslint:enable */\n\n  constructor(protected _elRef: ElementRef,\n              protected _monitor: MediaMonitor,\n              protected _styler: StyleUtils,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected _serverModuleLoaded: boolean) {\n    super(_monitor, _elRef, _styler);\n    this._cacheInput('src', _elRef.nativeElement.getAttribute('src') || '');\n    if (isPlatformServer(this._platformId) && this._serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Listen for responsive changes to update the img.src attribute\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (this.hasResponsiveKeys) {\n      // Listen for responsive changes\n      this._listenForMediaQueryChanges('src', this.defaultSrc, () => {\n        this._updateSrcFor();\n      });\n    }\n    this._updateSrcFor();\n  }\n\n  /**\n   * Update the 'src' property of the host <img> element\n   */\n  ngOnChanges() {\n    if (this.hasInitialized) {\n      this._updateSrcFor();\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected _updateSrcFor() {\n    if (this.hasResponsiveKeys) {\n      let url = this.activatedValue || this.defaultSrc;\n      if (isPlatformServer(this._platformId) && this._serverModuleLoaded) {\n        this._styler.applyStyleToElement(this.nativeElement, {'content': url ? `url(${url})` : ''});\n      } else {\n        this.nativeElement.setAttribute('src', String(url));\n      }\n    }\n  }\n\n  /**\n   * Cache initial value of 'src', this will be used as fallback when breakpoint\n   * activations change.\n   * NOTE: The default 'src' property is not bound using @Input(), so perform\n   * a post-ngOnInit() lookup of the default src value (if any).\n   */\n  protected cacheDefaultSrc(value?: string) {\n    this._cacheInput('src', value || '');\n  }\n\n  /**\n   * Empty values are maintained, undefined values are exposed as ''\n   */\n  protected get defaultSrc(): string {\n    return this._queryInput('src') || '';\n  }\n\n  /**\n   * Does the <img> have 1 or more src.<xxx> responsive inputs\n   * defined... these will be mapped to activated breakpoints.\n   */\n  protected get hasResponsiveKeys() {\n    return Object.keys(this._inputMap).length > 1;\n  }\n\n}\n"],"names":["buildMapFromList","tslib_1.__extends"],"mappings":"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"}