{"version":3,"file":"server.js","sources":["../../../src/lib/server/index.ts","../../../src/lib/server/public-api.ts","../../../src/lib/server/module.ts","../../../src/lib/server/server-provider.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './module';\nexport * from './server-provider';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {SERVER_PROVIDERS} from './server-provider';\n\n@NgModule({\n  providers: [SERVER_PROVIDERS]\n})\nexport class FlexLayoutServerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {BEFORE_APP_SERIALIZED} from '@angular/platform-server';\n\nimport {\n  BreakPoint,\n  BREAKPOINTS,\n  CLASS_NAME,\n  MatchMedia,\n  ServerStylesheet,\n  SERVER_TOKEN,\n  ServerMatchMedia\n} from '@angular/flex-layout';\n\nlet nextId = 0;\nconst IS_DEBUG_MODE = false;\n\n/**\n * create @media queries based on a virtual stylesheet\n * * Adds a unique class to each element and stores it\n *   in a shared classMap for later reuse\n * @param stylesheet the virtual stylesheet that stores styles for each\n *        element\n * @param mediaQuery the given @media CSS selector for the current breakpoint\n * @param classMap the map of HTML elements to class names to avoid duplications\n */\nfunction generateCss(stylesheet: Map<HTMLElement, Map<string, string|number>>,\n                     mediaQuery: string,\n                     classMap: Map<HTMLElement, string>) {\n  let styleText = IS_DEBUG_MODE ? `\n        @media ${mediaQuery} {` : `@media ${mediaQuery}{`;\n  stylesheet.forEach((styles, el) => {\n    let className = classMap.get(el);\n    if (!className) {\n      className = `${CLASS_NAME}${nextId++}`;\n      classMap.set(el, className);\n    }\n    el.classList.add(className);\n    styleText += IS_DEBUG_MODE ? `\n          .${className} {` : `.${className}{`;\n    styles.forEach((v, k) => {\n      if (v) {\n        styleText += IS_DEBUG_MODE ? `\n              ${k}: ${v};` : `${k}:${v};`;\n      }\n    });\n    styleText += IS_DEBUG_MODE ? `\n          }` : '}';\n  });\n  styleText += IS_DEBUG_MODE ? `\n        }\\n` : '}';\n\n  return styleText;\n}\n\n/**\n * Activate all of the registered breakpoints in sequence, and then\n * retrieve the associated stylings from the virtual stylesheet\n * @param serverSheet the virtual stylesheet that stores styles for each\n *        element\n * @param matchMedia the service to activate/deactive breakpoints\n * @param breakpoints the registered breakpoints to activate/deactivate\n */\nexport function generateStaticFlexLayoutStyles(serverSheet: ServerStylesheet,\n                                               matchMedia: MatchMedia,\n                                               breakpoints: BreakPoint[]) {\n  // Store the custom classes in the following map, that way only\n  // one class gets allocated per HTMLElement, and each class can\n  // be referenced in the static media queries\n  const classMap = new Map<HTMLElement, string>();\n\n  // Get the initial stylings for all of the directives, and initialize\n  // the fallback block of stylings, then reverse the breakpoints list\n  // to traverse in the proper order\n  const defaultStyles = new Map(serverSheet.stylesheet);\n  let styleText = generateCss(defaultStyles, 'all', classMap);\n\n  breakpoints.reverse();\n  breakpoints.forEach((bp, i) => {\n    serverSheet.clearStyles();\n    (matchMedia as ServerMatchMedia).activateBreakpoint(bp);\n    const stylesheet = new Map(serverSheet.stylesheet);\n    if (stylesheet.size > 0) {\n      styleText += generateCss(stylesheet, bp.mediaQuery, classMap);\n    }\n    (matchMedia as ServerMatchMedia).deactivateBreakpoint(breakpoints[i]);\n  });\n\n  return styleText;\n}\n\n/**\n * Create a style tag populated with the dynamic stylings from Flex\n * components and attach it to the head of the DOM\n */\nexport function FLEX_SSR_SERIALIZER_FACTORY(serverSheet: ServerStylesheet,\n                                            matchMedia: MatchMedia,\n                                            _document: Document,\n                                            breakpoints: BreakPoint[]) {\n  return () => {\n    // This is the style tag that gets inserted into the head of the DOM,\n    // populated with the manual media queries\n    const styleTag = _document.createElement('style');\n    const styleText = generateStaticFlexLayoutStyles(serverSheet, matchMedia, breakpoints);\n    styleTag.classList.add(`${CLASS_NAME}ssr`);\n    styleTag.textContent = styleText;\n    _document.head.appendChild(styleTag);\n  };\n}\n\n/**\n *  Provider to set static styles on the server\n */\nexport const SERVER_PROVIDERS = [\n  {\n    provide: <InjectionToken<() => void>>BEFORE_APP_SERIALIZED,\n    useFactory: FLEX_SSR_SERIALIZER_FACTORY,\n    deps: [\n      ServerStylesheet,\n      MatchMedia,\n      DOCUMENT,\n      BREAKPOINTS,\n    ],\n    multi: true\n  },\n  {\n    provide: SERVER_TOKEN,\n    useValue: true\n  },\n  {\n    provide: MatchMedia,\n    useClass: ServerMatchMedia\n  }\n];\n"],"names":[],"mappings":"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"}