{"version":3,"file":"grid.js","sources":["../../../src/lib/grid/module.ts","../../../src/lib/grid/rows/rows.ts","../../../src/lib/grid/row/row.ts","../../../src/lib/grid/gap/gap.ts","../../../src/lib/grid/columns/columns.ts","../../../src/lib/grid/column/column.ts","../../../src/lib/grid/auto/auto.ts","../../../src/lib/grid/areas/areas.ts","../../../src/lib/grid/area/area.ts","../../../src/lib/grid/align-rows/align-rows.ts","../../../src/lib/grid/align-columns/align-columns.ts","../../../src/lib/grid/grid-align/grid-align.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive()\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridRowsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridRowStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\n@Directive()\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridGapStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive()\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridColumnsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridColumnStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\n@Directive()\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAutoStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\n@Directive()\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridAreasStyleBuiler,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridAreaStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive()\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignRowsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive()\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignColumnsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\n@Directive()\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n"],"names":["selector","inputs","AUTO_SPECIFIER","DEFAULT_VALUE","DEFAULT_CROSS","DEFAULT_MAIN","buildCss"],"mappings":"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"}