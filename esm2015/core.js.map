{"version":3,"file":"core.js","sources":["../../../src/lib/core/media-marshaller/media-marshaller.ts","../../../src/lib/core/basis-validator/basis-validator.ts","../../../src/lib/core/style-builder/style-builder.ts","../../../src/lib/core/style-utils/style-utils.ts","../../../src/lib/utils/auto-prefixer.ts","../../../src/lib/core/media-trigger/media-trigger.ts","../../../src/lib/core/media-observer/media-observer.ts","../../../src/lib/core/utils/array.ts","../../../src/lib/core/media-marshaller/print-hook.ts","../../../src/lib/core/match-media/mock/mock-match-media.ts","../../../src/lib/core/match-media/match-media.ts","../../../src/lib/core/breakpoints/break-point-registry.ts","../../../src/lib/core/utils/sort.ts","../../../src/lib/core/breakpoints/break-points-token.ts","../../../src/lib/core/breakpoints/breakpoint-tools.ts","../../../src/lib/utils/object-extend.ts","../../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../../src/lib/core/breakpoints/data/break-points.ts","../../../src/lib/core/base/base2.ts","../../../src/lib/utils/layout-validator.ts","../../../src/lib/core/add-alias.ts","../../../src/lib/core/tokens/breakpoint-token.ts","../../../src/lib/core/tokens/server-token.ts","../../../src/lib/core/tokens/library-config.ts","../../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../../src/lib/core/media-change.ts","../../../src/lib/core/module.ts","../../../src/lib/core/browser-provider.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || (valueMap.has(key) && valueMap.get(key) != null)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(private _serverStylesheet: StylesheetMap,\n              @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  hasWrap(target: HTMLElement): boolean {\n    const query = 'flex-wrap';\n    return this.lookupStyle(target, query) === 'wrap';\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : '';\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\nimport {fromEvent, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n/**\n * Class\n */\n@Injectable({providedIn: 'root'})\nexport class MediaTrigger {\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected matchMedia: MatchMedia,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(PLATFORM_ID) protected _platformId: Object,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Manually activate range of breakpoints\n   * @param list array of mediaQuery or alias strings\n   */\n  activate(list: string[]) {\n    list = list.map(it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n\n    this.prepareAutoRestore();\n  }\n\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   */\n  restore() {\n    if (this.hasCachedRegistryMatches) {\n      const extractQuery = (change: MediaChange) => change.mediaQuery;\n      const list = this.originalActivations.map(extractQuery);\n      try {\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n      } finally {\n        this.originalActivations = [];\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   */\n  private prepareAutoRestore() {\n    const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n    const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n\n    if (enableAutoRestore) {\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   */\n  private deactivateAll() {\n    const list = this.currentActivations;\n\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   */\n  private saveActivations() {\n    if (!this.hasCachedRegistryMatches) {\n      const toMediaChange = (query: string) => new MediaChange(true, query);\n      const mergeMQAlias = (change: MediaChange) => {\n        const bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalActivations = this.currentActivations\n          .map(toMediaChange)\n          .map(mergeMQAlias)\n          .sort(sortDescendingPriority);\n\n      this.cacheRegistryMatches();\n    }\n  }\n\n  /**\n   * Force set manual activations for specified mediaQuery list\n   */\n  private setActivations(list: string[]) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n    this.simulateMediaChanges(list);\n  }\n\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   */\n  private simulateMediaChanges(queries: string[], matches = true) {\n    const toMediaQuery = (query: string) => {\n      const locator = this.breakpoints;\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    const emitChangeEvent = (query: string) => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   */\n  private forceRegistryMatches(queries: string[], matches: boolean) {\n    const registry = new Map<string, MediaQueryList>();\n    queries.forEach(query => {\n      registry.set(query, {matches} as MediaQueryList);\n    });\n\n    this.matchMedia.registry = registry;\n  }\n\n  /**\n   * Save current MatchMedia::registry items.\n   */\n  private cacheRegistryMatches() {\n    const target = this.originalRegistry;\n\n    target.clear();\n    this.matchMedia.registry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n    this.hasCachedRegistryMatches = true;\n  }\n\n  /**\n   * Restore original, 'true' registry\n   */\n  private restoreRegistryMatches() {\n    const target = this.matchMedia.registry;\n\n    target.clear();\n    this.originalRegistry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n\n    this.originalRegistry.clear();\n    this.hasCachedRegistryMatches = false;\n  }\n\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   */\n  private emitChangeEvent(matches: boolean, query: string) {\n    this.matchMedia.source.next(new MediaChange(matches, query));\n  }\n\n  private get currentActivations(): string[] {\n    return this.matchMedia.activations;\n  }\n\n  private hasCachedRegistryMatches = false;\n  private originalActivations: MediaChange[] = [];\n  private originalRegistry: Map<string, MediaQueryList> = new Map<string, MediaQueryList>();\n\n  private resizeSubscription!: Subscription;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, OnDestroy} from '@angular/core';\nimport {Subject, asapScheduler, Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\n\nimport {sortDescendingPriority} from '../utils/sort';\nimport {coerceArray} from '../utils/array';\n\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver implements OnDestroy {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 8.0.0-beta.25\n   * @deletion-target 10.0.0\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n  /**\n   * Completes the active subject, signalling to all complete for all\n   * MediaObserver subscribers\n   */\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if one or more media query/alias match\n   * the current viewport size.\n   * @param value One or more media queries (or aliases) to check.\n   * @returns Whether any of the media queries match.\n   */\n  isActive(value: string | string[]): boolean {\n    const aliases = splitQueries(coerceArray(value));\n    return aliases.some(alias => {\n      const query = toMediaQuery(alias, this.breakpoints);\n      return query !== null && this.matchMedia.isActive(query);\n    });\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(0, asapScheduler),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges),\n            takeUntil(this.destroyed$)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n  private readonly destroyed$ = new Subject<void>();\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : null;\n}\n\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries: string[]): string[] {\n  return queries.map((query: string) => query.split(','))\n                .reduce((a1: string[], a2: string[]) => a1.concat(a2))\n                .map(query => query.trim());\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Wraps the provided value in an array, unless the provided value is an array. */\nexport function coerceArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {DOCUMENT} from '@angular/common';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook implements OnDestroy {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n\n  // registeredBeforeAfterPrintHooks tracks if we registered the `beforeprint`\n  //  and `afterprint` event listeners.\n  private registeredBeforeAfterPrintHooks: boolean = false;\n\n  // isPrintingBeforeAfterEvent is used to track if we are printing from within\n  // a `beforeprint` event handler. This prevents the typicall `stopPrinting`\n  // form `interceptEvents` so that printing is not stopped while the dialog\n  // is still open. This is an extension of the `isPrinting` property on\n  // browsers which support `beforeprint` and `afterprint` events.\n  private isPrintingBeforeAfterEvent: boolean = false;\n\n  private beforePrintEventListeners: Function[] = [];\n  private afterPrintEventListeners: Function[] = [];\n\n  // registerBeforeAfterPrintHooks registers a `beforeprint` event hook so we can\n  // trigger print styles synchronously and apply proper layout styles.\n  // It is a noop if the hooks have already been registered or if the document's\n  // `defaultView` is not available.\n  private registerBeforeAfterPrintHooks(target: HookTarget) {\n    // `defaultView` may be null when rendering on the server or in other contexts.\n    if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) {\n      return;\n    }\n\n    this.registeredBeforeAfterPrintHooks = true;\n\n    const beforePrintListener = () => {\n      // If we aren't already printing, start printing and update the styles as\n      // if there was a regular print `MediaChange`(from matchMedia).\n      if (!this.isPrinting) {\n        this.isPrintingBeforeAfterEvent = true;\n        this.startPrinting(target, this.getEventBreakpoints(new MediaChange(true, PRINT)));\n        target.updateStyles();\n      }\n    };\n\n    const afterPrintListener = () => {\n      // If we aren't already printing, start printing and update the styles as\n      // if there was a regular print `MediaChange`(from matchMedia).\n      this.isPrintingBeforeAfterEvent = false;\n      if (this.isPrinting) {\n        this.stopPrinting(target);\n        target.updateStyles();\n      }\n    };\n\n    // Could we have teardown logic to remove if there are no print listeners being used?\n    this._document.defaultView.addEventListener('beforeprint', beforePrintListener);\n    this._document.defaultView.addEventListener('afterprint', afterPrintListener);\n\n    this.beforePrintEventListeners.push(beforePrintListener);\n    this.afterPrintEventListeners.push(afterPrintListener);\n  }\n\n  /**\n   * Prepare RxJS filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    this.registerBeforeAfterPrintHooks(target);\n\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting && !this.isPrintingBeforeAfterEvent) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is supported; so 'print' mediaQuery activations are used as a fallback\n   * in browsers without `beforeprint` support.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else if (!this.isPrintingBeforeAfterEvent) {\n        // Only clear deactivations if we aren't printing from a `beforeprint` event.\n        // Otherwise this will clear before `stopPrinting()` is called to restore\n        // the pre-Print Activations.\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Teardown logic for the service. */\n  ngOnDestroy() {\n    this.beforePrintEventListeners.forEach(l => this._document.defaultView.removeEventListener('beforeprint', l));\n    this.afterPrintEventListeners.forEach(l => this._document.defaultView.removeEventListener('afterprint', l));\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n\n  autoRegisterQueries = true;   // Used for testing BreakPoint registrations\n  useOverlaps = false;          // Allow fallback to overlapping mediaQueries\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this.registry.forEach((mql: MediaQueryList) => {\n      (mql as MockMediaQueryList).destroy();\n    });\n    this.registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias(['lt-xl']);\n          break;\n        case 'md'   :\n          this._activateByAlias(['lt-xl', 'lt-lg']);\n          break;\n        case 'sm'   :\n          this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md']);\n          break;\n        case 'xs'   :\n          this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md', 'lt-sm']);\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias(['gt-lg', 'gt-md', 'gt-sm', 'gt-xs']);\n          break;\n        case 'lg'   :\n          this._activateByAlias(['gt-md', 'gt-sm', 'gt-xs']);\n          break;\n        case 'md'   :\n          this._activateByAlias(['gt-sm', 'gt-xs']);\n          break;\n        case 'sm'   :\n          this._activateByAlias(['gt-xs']);\n          break;\n      }\n    }\n\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string[]) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.forEach(activate);\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this._registerMediaQuery(mediaQuery);\n    }\n    const mql: MockMediaQueryList = this.registry.get(mediaQuery) as MockMediaQueryList;\n\n    if (mql && !this.isActive(mediaQuery)) {\n      this.registry.set(mediaQuery, mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this.registry.forEach((it: MediaQueryList) => {\n      (it as MockMediaQueryList).deactivate();\n    });\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this.activations.length > 0;\n  }\n\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(this, {matches: this.matches, media: this.media} as MediaQueryListEvent);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(this, {matches: this.matches, media: this.media} as MediaQueryListEvent);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(this, {matches: this.matches, media: this.media} as MediaQueryListEvent);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, OnDestroy, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia implements OnDestroy {\n  /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n  readonly source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  registry = new Map<string, MediaQueryList>();\n  private readonly pendingRemoveListenerFns: Array<() => void> = [];\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this.registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this.registry.get(mediaQuery);\n    return !!mql ? mql.matches : this.registerQuery(mediaQuery).some(m => m.matches);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) =>\n            !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1))\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this.source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this.registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this.pendingRemoveListenerFns.push(() => mql!.removeListener(onMQLEvent));\n        this.registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  ngOnDestroy(): void {\n    let fn;\n    while (fn = this.pendingRemoveListenerFns.pop()) {\n      fn();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n\n  protected _observable$ = this.source.asObservable();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    },\n    onchange: null,\n    addEventListener() {\n    },\n    removeEventListener() {\n    },\n    dispatchEvent() {\n      return false;\n    }\n  } as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599.9px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.9px)';\n\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.9px)';\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.9px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET_LANDSCAPE},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.9px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.9px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.9px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.9px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.9px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599.9px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959.9px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279.9px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919.9px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n  protected currentValue: any;\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  protected hasWrap(target: HTMLElement): boolean {\n    return this.styler.hasWrap(target);\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    if (this.currentValue !== input) {\n      this.addStyles(input);\n      this.currentValue = input;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n  mediaTriggerAutoRestore?: boolean;\n  ssrObserveBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: [],\n  mediaTriggerAutoRestore: true,\n  ssrObserveBreakpoints: [],\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n    'Flex Layout token, config options for the library', {\n      providedIn: 'root',\n      factory: () => DEFAULT_CONFIG\n    });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n\n/**\n * *****************************************************************\n * Define module for common Angular Layout utilities\n * *****************************************************************\n */\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n"],"names":["map"],"mappings":"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"}