{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/grid/grid-align/grid-align.ts","../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/utils/sort.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/media-trigger/media-trigger.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('7.0.0-beta.23-1154fae');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected iterableDiffers: IterableDiffers,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(\n        this.iterableDiffers, this.keyValueDiffers, this.elementRef, this.renderer\n      );\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  KeyValueDiffers,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.keyValueDiffers, this.elementRef, this.renderer);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  let key, margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n\n  switch (parent.layout) {\n    case 'column':\n      key = 'margin-bottom';\n      break;\n    case 'column-reverse':\n      key = 'margin-top';\n      break;\n    case 'row':\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n    case 'row-reverse':\n      key = parent.directionality === 'rtl' ? 'margin-right' : 'margin-left';\n      break;\n    default :\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n  }\n  margins[key] = gapValue;\n\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue, this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    if (layout === 'row') {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse') {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column') {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse') {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    this.layout = layout.split(' ')[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n  readonly source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  registry = new Map<string, MediaQueryList>();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this.registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this.registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this.source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this.registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this.registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n\n  protected _observable$ = this.source.asObservable();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is not supported; so 'print' mediaQuery activations must be used.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else {\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 7.0.0-beta.24\n   * @deletion-target v7.0.0-beta.25\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    const query = toMediaQuery(alias, this.breakpoints);\n    return this.matchMedia.isActive(query);\n  }\n\n  /**\n   * Subscribers to activation list can use this function to easily exclude overlaps\n   */\n\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(10),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n  mediaTriggerAutoRestore?: boolean;\n  ssrObserveBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: [],\n  mediaTriggerAutoRestore: true,\n  ssrObserveBreakpoints: [],\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n    'Flex Layout token, config options for the library', {\n      providedIn: 'root',\n      factory: () => DEFAULT_CONFIG\n    });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.9999px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.9999px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.9999px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.9999px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.9999px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599.9999px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959.9999px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279.9999px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919.9999px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n\n  autoRegisterQueries = true;   // Used for testing BreakPoint registrations\n  useOverlaps = false;          // Allow fallback to overlapping mediaQueries\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this.registry.forEach((mql: MediaQueryList) => {\n      (mql as MockMediaQueryList).destroy();\n    });\n    this.registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql: MockMediaQueryList = this.registry.get(mediaQuery) as MockMediaQueryList;\n\n    if (mql && !this.isActive(mediaQuery)) {\n      this.registry.set(mediaQuery, mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this.registry.forEach((it: MediaQueryList) => {\n      (it as MockMediaQueryList).deactivate();\n    });\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this.activations.length > 0;\n  }\n\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\nimport {fromEvent, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n/**\n * Class\n */\n@Injectable({providedIn: 'root'})\nexport class MediaTrigger {\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected matchMedia: MatchMedia,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(PLATFORM_ID) protected _platformId: Object,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Manually activate range of breakpoints\n   * @param list array of mediaQuery or alias strings\n   */\n  activate(list: string[]) {\n    list = list.map(it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n\n    this.prepareAutoRestore();\n  }\n\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   */\n  restore() {\n    if (this.hasCachedRegistryMatches) {\n      const extractQuery = (change: MediaChange) => change.mediaQuery;\n      const list = this.originalActivations.map(extractQuery);\n      try {\n\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n\n      } finally {\n        this.originalActivations = [];\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   */\n  private prepareAutoRestore() {\n    const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n    const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n\n    if (enableAutoRestore) {\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   */\n  private deactivateAll() {\n    const list = this.currentActivations;\n\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   */\n  private saveActivations() {\n    if (!this.hasCachedRegistryMatches) {\n      const toMediaChange = (query: string) => new MediaChange(true, query);\n      const mergeMQAlias = (change: MediaChange) => {\n        const bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalActivations = this.currentActivations\n          .map(toMediaChange)\n          .map(mergeMQAlias)\n          .sort(sortDescendingPriority);\n\n      this.cacheRegistryMatches();\n    }\n  }\n\n  /**\n   * Force set manual activations for specified mediaQuery list\n   */\n  private setActivations(list: string[]) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n    this.simulateMediaChanges(list);\n  }\n\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   */\n  private simulateMediaChanges(queries: string[], matches = true) {\n    const toMediaQuery = (query: string) => {\n      const locator = this.breakpoints;\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    const emitChangeEvent = (query: string) => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   */\n  private forceRegistryMatches(queries: string[], matches: boolean) {\n    const registry = new Map<string, MediaQueryList>();\n    queries.forEach(query => {\n      registry.set(query, {matches: matches} as MediaQueryList);\n    });\n\n    this.matchMedia.registry = registry;\n  }\n\n  /**\n   * Save current MatchMedia::registry items.\n   */\n  private cacheRegistryMatches() {\n    const target = this.originalRegistry;\n\n    target.clear();\n    this.matchMedia.registry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n    this.hasCachedRegistryMatches = true;\n  }\n\n  /**\n   * Restore original, 'true' registry\n   */\n  private restoreRegistryMatches() {\n    const target = this.matchMedia.registry;\n\n    target.clear();\n    this.originalRegistry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n\n    this.originalRegistry.clear();\n    this.hasCachedRegistryMatches = false;\n  }\n\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   */\n  private emitChangeEvent(matches: boolean, query: string) {\n    this.matchMedia.source.next(new MediaChange(matches, query));\n  }\n\n  private get currentActivations() {\n    return this.matchMedia.activations;\n  }\n\n  private hasCachedRegistryMatches = false;\n  private originalActivations: MediaChange[] = [];\n  private originalRegistry: Map<string, MediaQueryList> = new Map<string, MediaQueryList>();\n\n  private resizeSubscription!: Subscription;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value.trim();\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n"],"names":["GridAlignStyleBuilder","StyleBuilder","GridAlignDirective","_super","elementRef","styleBuilder","styler","marshal","_this","call","this","DIRECTIVE_KEY","styleCache","alignCache","init","tslib_1.__extends","type","ElementRef","decorators","Optional","StyleUtils","MediaMarshaller","BaseDirective2","Map","inputs","DefaultGridAlignDirective","Directive","args","selector","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignColumnsStyleBuilder","prototype","buildStyles","input","parent","buildCss","inline","Injectable","providedIn","GridAlignColumnsDirective","_inline","Object","defineProperty","val","coerceBooleanProperty","updateWithValue","value","alignColumnsInlineCache","alignColumnsCache","addStyles","Input","DefaultGridAlignColumnsDirective","GridAlignRowsStyleBuilder","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","split","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","ALL_DIRECTIVES","NgModule","imports","CoreModule","declarations","slice","exports","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","tslib_1.__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","FlexModule","ExtendedModule","Boolean","Inject","PLATFORM_ID","activatedBreakpoints","alias","onMediaChange","mc","bp","findByQuery","mediaQuery","mergeAlias","matches","push","sort","sortDescendingPriority","updateStyles","splice","element","key","updateFn","clearFn","extraTriggers","initBuilderMap","updateMap","clearMap","buildElementKeyMap","watchExtraTriggers","getValue","bpMap","elementMap","get","values","undefined","getActivatedValues","hasValue","setValue","set","updateElement","trackValue","subject","asObservable","pipe","filter","forEach","el","keyMap","Set","elementKeyMap","valueMap","k","delete","clearElement","builders","next","releaseElement","watcherMap","s","unsubscribe","_","triggerUpdate","add","triggers","length","watchers","newSubscription","merge","apply","subscribe","currentValue","query","i","activatedBp","has","lastHope","observeActivations","target","queries","items","matchMedia","observe","hook","withPrintQuery","tap","interceptEvents","blockPropagation","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","nativeElement","getAttribute","setAttribute","src","DefaultImgSrcDirective","ClassDirective","iterableDiffers","keyValueDiffers","renderer","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","IterableDiffers","KeyValueDiffers","Renderer2","Self","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","DISPLAY_MAP","getDisplayStyle","defaultValue","ngOnChanges","changes","keys","inputKey","inputValue","shouldShow","takeUntil","destroySubject","addFlexToParent","lookupStyle","style","setProperty","WeakMap","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","DomSanitizer","DefaultStyleDirective","INLINE","LAYOUT_VALUES","LayoutStyleBuilder","buildLayoutCSS","LayoutDirective","layoutCache","DefaultLayoutDirective","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","sideEffect","_styles","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapDirective","zone","layout","observerSubject","Subject","change","onLayoutChange","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","matcher","find","x","childrenNodes","nodeType","willDisplay","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","DefaultLayoutGapDirective","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","FlexDirective","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","DefaultFlexDirective","FlexOrderStyleBuilder","order","parseInt","FlexOrderDirective","flexOrderCache","DefaultFlexOrderDirective","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","DefaultFlexOffsetDirective","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","DefaultFlexAlignDirective","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","_input","FlexFillDirective","flexFillCache","LayoutAlignStyleBuilder","align","mainAxis","crossAxis","flex-direction","LayoutAlignDirective","layoutAlignHorizontalCache","layoutAlignHorizontalRevCache","layoutAlignVerticalCache","layoutAlignVerticalRevCache","DefaultLayoutAlignDirective","BidiModule","ROW_DEFAULT","COL_DEFAULT","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","dest","clone","MediaChange","mqAlias","suffix","priority","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","sources","_i","arguments","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","overlapping","mergeByAlias","defaults","custom","dict","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","media","removeListener","isPrintBreakPoint","PRINT","toMediaQuery","locator","findByAlias","applyCssPrefixes","j","_validateCalcValue","substr","calc","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","reduce","keyValuesToMap","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","__assign","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","property","stylesheet","StylesheetMap","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","mediaTriggerAutoRestore","ssrObserveBreakpoints","InjectionToken","factory","mru","activatedAlias","complete","builder","useCache","shouldCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","concat","isArray","findByMap","findWithPredicate","searchFn","response","_zone","_platformId","BehaviorSubject","registry","_observable$","results","mql","isActive","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","deactivate","MockMediaQueryList","activations","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","useClass","BREAKPOINT_PRINT","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","startPrinting","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","filterOverlaps","_media$","watchActivations","media$","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","MediaTrigger","hasCachedRegistryMatches","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","resize$","fromEvent","window","take","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","cacheRegistryMatches","emitChangeEvent","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","Error","name_1","styleAttrValue","_parent"],"mappings":"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"}