{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/api/ext/show-hide.ts","../../src/lib/api/ext/img-src.ts","../../src/lib/media-query/breakpoints/data/break-points.ts","../../src/lib/media-query/breakpoints/data/orientation-break-points.ts","../../src/lib/media-query/observable-media.ts","../../src/lib/utils/breakpoint-tools.ts","../../src/lib/media-query/breakpoints/break-points-provider.ts","../../src/lib/media-query/observable-media-provider.ts","../../src/lib/media-query/media-monitor-provider.ts","../../src/lib/media-query/server-match-media.ts","../../src/lib/media-query/_module.ts","../../src/lib/utils/styling/browser-provider.ts","../../src/lib/bidi/dir.ts","../../src/lib/bidi/bidi-module.ts","../../src/lib/module.ts","../../src/lib/api/flexbox/layout-gap.ts","../../src/lib/api/flexbox/flex.ts","../../src/lib/api/flexbox/flex-align.ts","../../src/lib/api/flexbox/flex-fill.ts","../../src/lib/api/flexbox/flex-offset.ts","../../src/lib/api/flexbox/flex-order.ts","../../src/lib/api/core/renderer-adapter.ts","../../src/lib/api/ext/class.ts","../../src/lib/utils/styling/style-transforms.ts","../../src/lib/api/ext/style.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/utils/layout-validator.ts","../../src/lib/utils/object-extend.ts","../../src/lib/media-query/match-media.ts","../../src/lib/utils/add-alias.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/utils/basis-validator.ts","../../src/lib/version.ts","../../src/lib/api/core/responsive-activation.ts","../../src/lib/api/core/base.ts","../../src/lib/api/core/base-adapter.ts","../../src/lib/media-query/breakpoints/break-points-token.ts","../../src/lib/media-query/breakpoints/break-point-registry.ts","../../src/lib/media-query/media-change.ts","../../src/lib/media-query/media-monitor.ts","../../src/lib/utils/styling/server-stylesheet.ts","../../src/lib/utils/styling/server-token.ts","../../src/lib/utils/styling/style-utils.ts","../../src/lib/api/flexbox/layout.ts","../../src/lib/api/flexbox/layout-align.ts","../../src/lib/bidi/directionality.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Self,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LayoutDirective} from '../flexbox/layout';\nimport {StyleUtils} from '../../utils/styling/style-utils';\nimport {SERVER_TOKEN} from '../../utils/styling/server-token';\n\nconst FALSY = ['false', false, 0];\n\n/**\n * For fxHide selectors, we invert the 'value'\n * and assign to the equivalent fxShow selector cache\n *  - When 'hide' === '' === true, do NOT show the element\n *  - When 'hide' === false or 0... we WILL show the element\n */\nexport function negativeOf(hide: any) {\n  return (hide === '') ? false :\n         ((hide === 'false') || (hide === 0)) ? true : !hide;\n}\n\n/**\n * 'show' Layout API directive\n *\n */\n@Directive({\n  selector: `\n  [fxShow],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`\n})\nexport class ShowHideDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShow')       set show(val) {  this._cacheInput('show', val);  }\n  @Input('fxShow.xs')    set showXs(val) {this._cacheInput('showXs', val);}\n  @Input('fxShow.sm')    set showSm(val) {this._cacheInput('showSm', val); };\n  @Input('fxShow.md')    set showMd(val) {this._cacheInput('showMd', val); };\n  @Input('fxShow.lg')    set showLg(val) {this._cacheInput('showLg', val); };\n  @Input('fxShow.xl')    set showXl(val) {this._cacheInput('showXl', val); };\n\n  @Input('fxShow.lt-sm') set showLtSm(val) { this._cacheInput('showLtSm', val); };\n  @Input('fxShow.lt-md') set showLtMd(val) { this._cacheInput('showLtMd', val); };\n  @Input('fxShow.lt-lg') set showLtLg(val) { this._cacheInput('showLtLg', val); };\n  @Input('fxShow.lt-xl') set showLtXl(val) { this._cacheInput('showLtXl', val); };\n\n  @Input('fxShow.gt-xs') set showGtXs(val) {this._cacheInput('showGtXs', val); };\n  @Input('fxShow.gt-sm') set showGtSm(val) {this._cacheInput('showGtSm', val); };\n  @Input('fxShow.gt-md') set showGtMd(val) {this._cacheInput('showGtMd', val); };\n  @Input('fxShow.gt-lg') set showGtLg(val) {this._cacheInput('showGtLg', val); };\n\n  @Input('fxHide')       set hide(val) {this._cacheInput('show', negativeOf(val));}\n  @Input('fxHide.xs')    set hideXs(val) {this._cacheInput('showXs', negativeOf(val));}\n  @Input('fxHide.sm')    set hideSm(val) {this._cacheInput('showSm', negativeOf(val)); };\n  @Input('fxHide.md')    set hideMd(val) {this._cacheInput('showMd', negativeOf(val)); };\n  @Input('fxHide.lg')    set hideLg(val) {this._cacheInput('showLg', negativeOf(val)); };\n  @Input('fxHide.xl')    set hideXl(val) {this._cacheInput('showXl', negativeOf(val)); };\n\n  @Input('fxHide.lt-sm') set hideLtSm(val) { this._cacheInput('showLtSm', negativeOf(val)); };\n  @Input('fxHide.lt-md') set hideLtMd(val) { this._cacheInput('showLtMd', negativeOf(val)); };\n  @Input('fxHide.lt-lg') set hideLtLg(val) { this._cacheInput('showLtLg', negativeOf(val)); };\n  @Input('fxHide.lt-xl') set hideLtXl(val) { this._cacheInput('showLtXl', negativeOf(val)); };\n\n  @Input('fxHide.gt-xs') set hideGtXs(val) {this._cacheInput('showGtXs', negativeOf(val)); };\n  @Input('fxHide.gt-sm') set hideGtSm(val) {this._cacheInput('showGtSm', negativeOf(val)); };\n  @Input('fxHide.gt-md') set hideGtMd(val) {this._cacheInput('showGtMd', negativeOf(val)); };\n  @Input('fxHide.gt-lg') set hideGtLg(val) {this._cacheInput('showGtLg', negativeOf(val)); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n              @Optional() @Self() protected layout: LayoutDirective,\n              protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n\n    super(monitor, elRef, styleUtils);\n\n    if (layout) {\n      /**\n       * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.\n       * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS\n       */\n      this._layoutWatcher = layout.layout$.subscribe(() => this._updateWithValue());\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected _getDisplayStyle(): string {\n    return this.layout ? 'flex' : super._getDisplayStyle();\n  }\n\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.hasInitialized && (changes['show'] != null || this._mqActivation)) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    let value = this._getDefaultVal('show', true);\n    // Build _mqActivation controller\n    this._listenForMediaQueryChanges('show', value, (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected _updateWithValue(value?: string|number|boolean) {\n    value = value || this._getDefaultVal('show', true);\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    let shouldShow = this._validateTruthy(value);\n    this._applyStyleToElement(this._buildCSS(shouldShow));\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n  }\n\n\n  /** Build the CSS that should be assigned to the element instance */\n  protected _buildCSS(show) {\n    return {'display': show ? this._display : 'none'};\n  }\n\n  /**  Validate the to be not FALSY */\n  _validateTruthy(show) {\n    return (FALSY.indexOf(show) == -1);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  Inject,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {StyleUtils} from '../../utils/styling/style-utils';\nimport {SERVER_TOKEN} from '../../utils/styling/server-token';\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({\n  selector: `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`\n})\nexport class ImgSrcDirective extends BaseFxDirective implements OnInit, OnChanges {\n\n  /* tslint:disable */\n  @Input('src')        set srcBase(val) { this.cacheDefaultSrc(val);           }\n\n  @Input('src.xs')     set srcXs(val)   { this._cacheInput('srcXs', val);  }\n  @Input('src.sm')     set srcSm(val)   { this._cacheInput('srcSm', val);  }\n  @Input('src.md')     set srcMd(val)   { this._cacheInput('srcMd', val);  }\n  @Input('src.lg')     set srcLg(val)   { this._cacheInput('srcLg', val);  }\n  @Input('src.xl')     set srcXl(val)   { this._cacheInput('srcXl', val);  }\n\n  @Input('src.lt-sm')  set srcLtSm(val) { this._cacheInput('srcLtSm', val);  }\n  @Input('src.lt-md')  set srcLtMd(val) { this._cacheInput('srcLtMd', val);  }\n  @Input('src.lt-lg')  set srcLtLg(val) { this._cacheInput('srcLtLg', val);  }\n  @Input('src.lt-xl')  set srcLtXl(val) { this._cacheInput('srcLtXl', val);  }\n\n  @Input('src.gt-xs')  set srcGtXs(val) { this._cacheInput('srcGtXs', val);  }\n  @Input('src.gt-sm')  set srcGtSm(val) { this._cacheInput('srcGtSm', val);  }\n  @Input('src.gt-md')  set srcGtMd(val) { this._cacheInput('srcGtMd', val);  }\n  @Input('src.gt-lg')  set srcGtLg(val) { this._cacheInput('srcGtLg', val);  }\n  /* tslint:enable */\n\n  constructor(protected _elRef: ElementRef,\n              protected _monitor: MediaMonitor,\n              protected _styler: StyleUtils,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected _serverModuleLoaded: boolean) {\n    super(_monitor, _elRef, _styler);\n    this._cacheInput('src', _elRef.nativeElement.getAttribute('src') || '');\n    if (isPlatformServer(this._platformId) && this._serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Listen for responsive changes to update the img.src attribute\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (this.hasResponsiveKeys) {\n      // Listen for responsive changes\n      this._listenForMediaQueryChanges('src', this.defaultSrc, () => {\n        this._updateSrcFor();\n      });\n    }\n    this._updateSrcFor();\n  }\n\n  /**\n   * Update the 'src' property of the host <img> element\n   */\n  ngOnChanges() {\n    if (this.hasInitialized) {\n      this._updateSrcFor();\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected _updateSrcFor() {\n    if (this.hasResponsiveKeys) {\n      let url = this.activatedValue || this.defaultSrc;\n      if (isPlatformServer(this._platformId) && this._serverModuleLoaded) {\n        this._styler.applyStyleToElement(this.nativeElement, {'content': url ? `url(${url})` : ''});\n      } else {\n        this.nativeElement.setAttribute('src', String(url));\n      }\n    }\n  }\n\n  /**\n   * Cache initial value of 'src', this will be used as fallback when breakpoint\n   * activations change.\n   * NOTE: The default 'src' property is not bound using @Input(), so perform\n   * a post-ngOnInit() lookup of the default src value (if any).\n   */\n  protected cacheDefaultSrc(value?: string) {\n    this._cacheInput('src', value || '');\n  }\n\n  /**\n   * Empty values are maintained, undefined values are exposed as ''\n   */\n  protected get defaultSrc(): string {\n    return this._queryInput('src') || '';\n  }\n\n  /**\n   * Does the <img> have 1 or more src.<xxx> responsive inputs\n   * defined... these will be mapped to activated breakpoints.\n   */\n  protected get hasResponsiveKeys() {\n    return Object.keys(this._inputMap).length > 1;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(min-width: 0px) and (max-width: 599px)'\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)'\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)'\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)'\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)'\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)'\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)'\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)'\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)'\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)'\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1920px)'\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)'\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientations: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientations: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientations: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientations: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientations: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientations: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\nimport {Observable, Subscribable} from 'rxjs/Observable';\n\nimport {map} from 'rxjs/operators/map';\nimport {filter} from 'rxjs/operators/filter';\n\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {MediaChange} from './media-change';\nimport {MatchMedia} from './match-media';\nimport {mergeAlias} from './../utils/add-alias';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import {filter} from 'rxjs/operators/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .pipe(\n *          filter((change:MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable()\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias): boolean {\n    let query = this._toMediaQuery(alias);\n    return this.mediaWatcher.isActive(query);\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(next?: (value: MediaChange) => void,\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    return this.observable$.subscribe(next, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    let queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const self = this;\n    const media$ = this.mediaWatcher.observe();\n    const activationsOnly = (change: MediaChange) => {\n      return change.matches === true;\n    };\n    const addAliasInformation = (change: MediaChange) => {\n      return mergeAlias(change, this._findByQuery(change.mediaQuery));\n    };\n    const excludeOverlaps = (change: MediaChange) => {\n      let bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(self.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return media$.pipe(\n      filter(activationsOnly),\n      filter(excludeOverlaps),\n      map(addAliasInformation)\n    );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query) {\n    let bp: BreakPoint | null = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private observable$: Observable<MediaChange>;\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../media-query/breakpoints/break-point';\nimport {extendObject} from './object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix || bp.suffix === '') {\n      bp.suffix = camelCase(bp.alias);          // create Suffix value based on alias\n      bp.overlapping = bp.overlapping || false; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const merged = defaults.map((bp) => extendObject({}, bp));\n  const findByAlias = (alias) => merged.reduce((result, bp) => {\n    return result || (( bp.alias === alias) ? bp : null);\n  }, null);\n\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    let target = findByAlias(bp.alias);\n    if (target) {\n      extendObject(target, bp);\n    } else {\n      merged.push(bp);\n    }\n  });\n\n  return validateSuffixes(merged);\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {DEFAULT_BREAKPOINTS} from './data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from './data/orientation-break-points';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {mergeByAlias, validateSuffixes} from '../../utils/breakpoint-tools';\n\n\n/**\n * Options to identify which breakpoint types to include as part of\n * a BreakPoint provider\n */\nexport interface BreakPointProviderOptions {\n  /**\n   * include pre-configured, internal default breakpoints.\n   * @default 'true'\n   */\n  defaults ?: boolean;\n  /**\n   * include pre-configured, internal orientations breakpoints.\n   * @default 'false'\n   */\n  orientations ?: boolean;\n}\n\n/**\n * Add new custom items to the default list or override existing default with custom overrides\n */\nexport function buildMergedBreakPoints(_custom?: BreakPoint[],\n                                       options?: BreakPointProviderOptions) {\n  options = extendObject({}, {\n        defaults: true,       // exclude pre-configured, internal default breakpoints\n        orientation: false      // exclude pre-configured, internal orientations breakpoints\n  }, options || {});\n\n  return () => {\n    // Order so the defaults are loaded last; so ObservableMedia will report these last!\n    let defaults = (options && options.orientations) ?\n      ORIENTATION_BREAKPOINTS.concat(DEFAULT_BREAKPOINTS) : DEFAULT_BREAKPOINTS;\n\n    return (options && options.defaults) ?\n      mergeByAlias(defaults, _custom || []) : mergeByAlias(_custom || []);\n  };\n}\n\n/**\n *  Ensure that only a single global BreakPoint list is instantiated...\n */\nexport function DEFAULT_BREAKPOINTS_PROVIDER_FACTORY() {\n  return validateSuffixes(DEFAULT_BREAKPOINTS);\n}\n/**\n * Default Provider that does not support external customization nor provide\n * the extra extended breakpoints:   \"handset\", \"tablet\", and \"web\"\n *\n *  NOTE: !! breakpoints are considered to have unique 'alias' properties,\n *        custom breakpoints matching existing breakpoints will override the properties\n *        of the existing (and not be added as an extra breakpoint entry).\n *        [xs, gt-xs, sm, gt-sm, md, gt-md, lg, gt-lg, xl]\n */\nexport const DEFAULT_BREAKPOINTS_PROVIDER = { // tslint:disable-line:variable-name\n  provide: BREAKPOINTS,\n  useFactory: DEFAULT_BREAKPOINTS_PROVIDER_FACTORY\n};\n/**\n * Use with FlexLayoutModule.CUSTOM_BREAKPOINTS_PROVIDER_FACTORY!\n */\nexport function CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(_custom?: BreakPoint[],\n                                                    options?: BreakPointProviderOptions) {\n  return {\n    provide: <InjectionToken<BreakPoint[]>>BREAKPOINTS,\n    useFactory: buildMergedBreakPoints(_custom, options)\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Optional,\n  SkipSelf\n} from '@angular/core';\n\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {MatchMedia} from './match-media';\nimport {ObservableMedia, MediaService} from './observable-media';\n\n/**\n * Ensure a single global ObservableMedia service provider\n */\nexport function OBSERVABLE_MEDIA_PROVIDER_FACTORY(parentService: ObservableMedia,\n                                                  matchMedia: MatchMedia,\n                                                  breakpoints: BreakPointRegistry) {\n  return parentService || new MediaService(breakpoints, matchMedia);\n}\n/**\n *  Provider to return global service for observable service for all MediaQuery activations\n */\nexport const OBSERVABLE_MEDIA_PROVIDER = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  deps: [\n    [ new Optional(), new SkipSelf(), ObservableMedia ],\n    MatchMedia,\n    BreakPointRegistry\n  ],\n  useFactory: OBSERVABLE_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor';\nimport {MatchMedia} from './match-media';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\n/**\n * Ensure a single global service provider\n */\nexport function MEDIA_MONITOR_PROVIDER_FACTORY(parentMonitor: MediaMonitor,\n                                               breakpoints: BreakPointRegistry,\n                                               matchMedia: MatchMedia) {\n  return parentMonitor || new MediaMonitor(breakpoints, matchMedia);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const MEDIA_MONITOR_PROVIDER = {\n  provide : MediaMonitor,\n  deps : [\n    [ new Optional(), new SkipSelf(), MediaMonitor ],\n    BreakPointRegistry,\n    MatchMedia,\n  ],\n  useFactory : MEDIA_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {Observable} from 'rxjs/Observable';\nimport {MatchMedia} from './match-media';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n    this._registry = new Map<string, ServerMediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor';\nimport {OBSERVABLE_MEDIA_PROVIDER} from './observable-media-provider';\nimport {DEFAULT_BREAKPOINTS_PROVIDER} from './breakpoints/break-points-provider';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\nimport {MatchMedia} from './match-media';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [\n    DEFAULT_BREAKPOINTS_PROVIDER,  // Supports developer overrides of list of known breakpoints\n    BreakPointRegistry,      // Registry of known/used BreakPoint(s)\n    MatchMedia,              // Low-level service to publish observables w/ window.matchMedia()\n    MediaMonitor,            // MediaQuery monitor service observes all known breakpoints\n    OBSERVABLE_MEDIA_PROVIDER  // easy subscription injectable `media$` matchMedia observable\n  ]\n})\nexport class MediaQueriesModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n      const classRegex = new RegExp(/\\bflex-layout-.+?\\b/, 'g');\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n    Directive,\n    Output,\n    Input,\n    EventEmitter,\n    AfterContentInit,\n    OnDestroy,\n  } from '@angular/core';\n\n  import {Direction, Directionality} from './directionality';\n\n  /**\n   * Directive to listen for changes of direction of part of the DOM.\n   *\n   * Provides itself as Directionality such that descendant directives only need to ever inject\n   * Directionality to get the closest direction.\n   */\n  @Directive({\n    selector: '[dir]',\n    providers: [{provide: Directionality, useExisting: Dir}],\n    host: {'[dir]': 'dir'},\n    exportAs: 'dir',\n  })\n  export class Dir implements Directionality, AfterContentInit, OnDestroy {\n    _dir: Direction = 'ltr';\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Event emitted when the direction changes. */\n    @Output('dirChange') change = new EventEmitter<Direction>();\n\n    /** @docs-private */\n    @Input()\n    get dir(): Direction { return this._dir; }\n    set dir(v: Direction) {\n      const old = this._dir;\n      this._dir = v;\n      if (old !== this._dir && this._isInitialized) {\n        this.change.emit(this._dir);\n      }\n    }\n\n    /** Current layout direction of the element. */\n    get value(): Direction { return this.dir; }\n\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n      this._isInitialized = true;\n    }\n\n    ngOnDestroy() {\n      this.change.complete();\n    }\n  }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Dir} from './dir';\nimport {DIR_DOCUMENT, Directionality} from './directionality';\n\n\n@NgModule({\n  exports: [Dir],\n  declarations: [Dir],\n  providers: [\n    {provide: DIR_DOCUMENT, useExisting: DOCUMENT},\n    Directionality,\n  ]\n})\nexport class BidiModule { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, ModuleWithProviders, NgModule, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {MediaQueriesModule} from './media-query/_module';\nimport {BreakPoint} from './media-query/breakpoints/break-point';\nimport {\n  BreakPointProviderOptions,\n  CUSTOM_BREAKPOINTS_PROVIDER_FACTORY\n} from './media-query/breakpoints/break-points-provider';\n\nimport {FlexDirective} from './api/flexbox/flex';\nimport {LayoutDirective} from './api/flexbox/layout';\nimport {FlexAlignDirective} from './api/flexbox/flex-align';\nimport {FlexFillDirective} from './api/flexbox/flex-fill';\nimport {FlexOffsetDirective} from './api/flexbox/flex-offset';\nimport {FlexOrderDirective} from './api/flexbox/flex-order';\nimport {LayoutAlignDirective} from './api/flexbox/layout-align';\nimport {LayoutGapDirective} from './api/flexbox/layout-gap';\n\nimport {ShowHideDirective} from './api/ext/show-hide';\nimport {ClassDirective} from './api/ext/class';\nimport {StyleDirective} from './api/ext/style';\nimport {ImgSrcDirective} from './api/ext/img-src';\n\nimport {BidiModule} from './bidi/bidi-module';\nimport {BROWSER_PROVIDER} from './utils/styling/browser-provider';\nimport {StyleUtils} from './utils/styling/style-utils';\nimport {ServerStylesheet} from './utils/styling/server-stylesheet';\nimport {SERVER_TOKEN} from './utils/styling/server-token';\n\n/**\n * Since the equivalent results are easily achieved with a css class attached to each\n * layout child, these have been deprecated and removed from the API.\n *\n *  import {LayoutPaddingDirective} from './api/flexbox/layout-padding';\n *  import {LayoutMarginDirective} from './api/flexbox/layout-margin';\n */\n\nconst ALL_DIRECTIVES = [\n  LayoutDirective,\n  LayoutGapDirective,\n  LayoutAlignDirective,\n  FlexDirective,\n  FlexOrderDirective,\n  FlexOffsetDirective,\n  FlexFillDirective,\n  FlexAlignDirective,\n  ShowHideDirective,\n  ClassDirective,\n  StyleDirective,\n  ImgSrcDirective\n];\n\n/**\n *\n */\n@NgModule({\n  imports: [MediaQueriesModule, BidiModule],\n  exports: [MediaQueriesModule, ...ALL_DIRECTIVES],\n  declarations: [...ALL_DIRECTIVES],\n  providers: [\n    ServerStylesheet,\n    StyleUtils,\n    BROWSER_PROVIDER,\n  ]\n})\nexport class FlexLayoutModule {\n\n  constructor (\n    @Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n\n  /**\n   * External uses can easily add custom breakpoints AND include internal orientations\n   * breakpoints; which are not available by default.\n   *\n   * !! Selector aliases are not auto-configured. Developers must subclass\n   * the API directives to support extra selectors for the orientations breakpoints !!\n   */\n  static provideBreakPoints(breakpoints: BreakPoint[],\n                            options?: BreakPointProviderOptions): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: [\n        CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(breakpoints, options || {orientations: false})\n      ]\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  Self,\n  AfterContentInit,\n  Optional,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from '../core/base';\nimport {LayoutDirective} from './layout';\nimport {Directionality} from '../../bidi/directionality';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\nimport {StyleUtils} from '../../utils/styling/style-utils';\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n@Directive({\n  selector: `\n  [fxLayoutGap],\n  [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md], [fxLayoutGap.lg], [fxLayoutGap.xl],\n  [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md], [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl],\n  [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm], [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`\n})\nexport class LayoutGapDirective extends BaseFxDirective\n  implements AfterContentInit, OnChanges, OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n  protected _observer: MutationObserver;\n  private _directionWatcher: Subscription;\n\n  /* tslint:disable */\n @Input('fxLayoutGap')       set gap(val) { this._cacheInput('gap', val); }\n @Input('fxLayoutGap.xs')    set gapXs(val) { this._cacheInput('gapXs', val); }\n @Input('fxLayoutGap.sm')    set gapSm(val) { this._cacheInput('gapSm', val); };\n @Input('fxLayoutGap.md')    set gapMd(val) { this._cacheInput('gapMd', val); };\n @Input('fxLayoutGap.lg')    set gapLg(val) { this._cacheInput('gapLg', val); };\n @Input('fxLayoutGap.xl')    set gapXl(val) { this._cacheInput('gapXl', val); };\n\n @Input('fxLayoutGap.gt-xs') set gapGtXs(val) { this._cacheInput('gapGtXs', val); };\n @Input('fxLayoutGap.gt-sm') set gapGtSm(val) { this._cacheInput('gapGtSm', val); };\n @Input('fxLayoutGap.gt-md') set gapGtMd(val) { this._cacheInput('gapGtMd', val); };\n @Input('fxLayoutGap.gt-lg') set gapGtLg(val) { this._cacheInput('gapGtLg', val); };\n\n @Input('fxLayoutGap.lt-sm') set gapLtSm(val) { this._cacheInput('gapLtSm', val); };\n @Input('fxLayoutGap.lt-md') set gapLtMd(val) { this._cacheInput('gapLtMd', val); };\n @Input('fxLayoutGap.lt-lg') set gapLtLg(val) { this._cacheInput('gapLtLg', val); };\n @Input('fxLayoutGap.lt-xl') set gapLtXl(val) { this._cacheInput('gapLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              @Optional() @Self() container: LayoutDirective,\n              private _zone: NgZone,\n              private _directionality: Directionality,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n    this._directionWatcher =\n        this._directionality.change.subscribe(this._updateWithValue.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['gap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngAfterContentInit() {\n    this._watchContentChanges();\n    this._listenForMediaQueryChanges('gap', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n    if (this._directionWatcher) {\n      this._directionWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Watch for child nodes to be added... and apply the layout gap styles to each.\n   * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n   */\n  protected _watchContentChanges() {\n    this._zone.runOutsideAngular(() => {\n\n      if (typeof MutationObserver !== 'undefined') {\n        this._observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n                (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this._updateWithValue();\n          }\n        });\n        this._observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n    this._updateWithValue();\n  }\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('gap') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this._getDisplayStyle(el) != 'none')\n      .sort((a, b) => {\n        const orderA = +this._styler.lookupStyle(a, 'order');\n        const orderB = +this._styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const lastItem = items.pop();\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      this._applyStyleToElements(this._buildCSS(value), items);\n\n      // Clear all gaps for all visible elements\n      this._applyStyleToElements(this._buildCSS(), [lastItem]);\n    }\n  }\n\n  /**\n   * Prepare margin CSS, remove any previous explicitly\n   * assigned margin assignments\n   */\n  private _buildCSS(value: any = null) {\n    let key, margins = {\n      'margin-left': null,\n      'margin-right': null,\n      'margin-top': null,\n      'margin-bottom': null\n    };\n\n    switch (this._layout) {\n      case 'column':\n      case 'column-reverse':\n        key = 'margin-bottom';\n        break;\n      case 'row' :\n      case 'row-reverse':\n      default :\n        key = this._directionality.value === 'rtl' ? 'margin-left' : 'margin-right';\n        break;\n    }\n    margins[key] = value;\n\n    return margins;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {extendObject} from '../../utils/object-extend';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {LayoutDirective} from './layout';\nimport {validateBasis} from '../../utils/basis-validator';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\nimport {StyleUtils} from '../../utils/styling/style-utils';\n\n\n/** Built-in aliases for different flex-basis values. */\nexport type FlexBasisAlias = 'grow' | 'initial' | 'auto' | 'none' | 'nogrow' | 'noshrink';\n\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive({selector: `\n  [fxFlex],\n  [fxFlex.xs], [fxFlex.sm], [fxFlex.md], [fxFlex.lg], [fxFlex.xl],\n  [fxFlex.lt-sm], [fxFlex.lt-md], [fxFlex.lt-lg], [fxFlex.lt-xl],\n  [fxFlex.gt-xs], [fxFlex.gt-sm], [fxFlex.gt-md], [fxFlex.gt-lg],\n`\n})\nexport class FlexDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /** The flex-direction of this element's flex container. Defaults to 'row'. */\n  protected _layout: string;\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShrink')     set shrink(val)    { this._cacheInput('shrink', val); };\n  @Input('fxGrow')       set grow(val)      { this._cacheInput('grow', val); };\n\n  @Input('fxFlex')       set flex(val)      { this._cacheInput('flex', val); };\n  @Input('fxFlex.xs')    set flexXs(val)    { this._cacheInput('flexXs', val); };\n  @Input('fxFlex.sm')    set flexSm(val)    { this._cacheInput('flexSm', val); };\n  @Input('fxFlex.md')    set flexMd(val)    { this._cacheInput('flexMd', val); };\n  @Input('fxFlex.lg')    set flexLg(val)    { this._cacheInput('flexLg', val); };\n  @Input('fxFlex.xl')    set flexXl(val)    { this._cacheInput('flexXl', val); };\n\n  @Input('fxFlex.gt-xs') set flexGtXs(val)  { this._cacheInput('flexGtXs', val); };\n  @Input('fxFlex.gt-sm') set flexGtSm(val)  { this._cacheInput('flexGtSm', val); };\n  @Input('fxFlex.gt-md') set flexGtMd(val)  { this._cacheInput('flexGtMd', val); };\n  @Input('fxFlex.gt-lg') set flexGtLg(val)  { this._cacheInput('flexGtLg', val); };\n\n  @Input('fxFlex.lt-sm') set flexLtSm(val) { this._cacheInput('flexLtSm', val); };\n  @Input('fxFlex.lt-md') set flexLtMd(val) { this._cacheInput('flexLtMd', val); };\n  @Input('fxFlex.lt-lg') set flexLtLg(val) { this._cacheInput('flexLtLg', val); };\n  @Input('fxFlex.lt-xl') set flexLtXl(val) { this._cacheInput('flexLtXl', val); };\n  /* tslint:enable */\n\n  // Note: Explicitly @SkipSelf on LayoutDirective because we are looking\n  //       for the parent flex container for this flex item.\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              protected styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    this._cacheInput('flex', '');\n    this._cacheInput('shrink', 1);\n    this._cacheInput('grow', 1);\n\n    if (_container) {\n      // If this flex item is inside of a flex container marked with\n      // Subscribe to layout immediate parent direction changes\n      this._layoutWatcher = _container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['flex'] != null || this._mqActivation) {\n      this._updateStyle();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('flex', '', (changes: MediaChange) => {\n      this._updateStyle(changes.value);\n    });\n    this._updateStyle();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateStyle();\n  }\n\n  protected _updateStyle(value?: string|number) {\n    let flexBasis = value || this._queryInput('flex') || '';\n    if (this._mqActivation) {\n      flexBasis = this._mqActivation.activatedInput;\n    }\n\n    let basis = String(flexBasis).replace(';', '');\n    let parts = validateBasis(basis, this._queryInput('grow'), this._queryInput('shrink'));\n    this._applyStyleToElement(this._validateValue.apply(this, parts));\n  }\n\n  /**\n   * Validate the value to be one of the acceptable value options\n   * Use default fallback of 'row'\n   */\n  protected _validateValue(grow: number|string,\n                           shrink: number|string,\n                           basis: string|number|FlexBasisAlias) {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    let layout = this._getFlowDirection(this.parentElement, true);\n    let direction = (layout.indexOf('column') > -1) ? 'column' : 'row';\n    let css, isValue;\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    let clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        css = extendObject(clearStyles, {'flex': `${grow} ${shrink} 0.000000001px`});\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        css = extendObject(clearStyles, {'flex': '0 1 auto'});\n        break;\n      case 'grow':\n        css = extendObject(clearStyles, {'flex': '1 1 100%'});\n        break;\n      case 'noshrink':\n        shrink = 0;\n        css = extendObject(clearStyles, {'flex': '1 0 auto'});\n        break;\n      case 'auto':\n        css = extendObject(clearStyles, {'flex': `${grow} ${shrink} auto`});\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        css = extendObject(clearStyles, {'flex': '0 0 auto'});\n        break;\n      default:\n        let hasCalc = String(basis).indexOf('calc') > -1;\n        let isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n\n        isValue = hasCalc ||\n            String(basis).indexOf('px') > -1 ||\n            String(basis).indexOf('em') > -1 ||\n            String(basis).indexOf('vw') > -1 ||\n            String(basis).indexOf('vh') > -1;\n\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        css = extendObject(clearStyles, { // fix issue #5345\n          'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n        });\n        break;\n    }\n\n    let max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    let min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    let usingCalc = (String(basis).indexOf('calc') > -1) || (basis == 'auto');\n    let isPx = String(basis).indexOf('px') > -1 || usingCalc;\n\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    let isFixed = !grow && !shrink;\n    css[min] = (basis == '0%') ? 0 : isFixed || (isPx && grow) ? basis : null;\n    css[max] = (basis == '0%') ? 0 : isFixed || (!usingCalc && shrink) ? basis : null;\n\n    return extendObject(css, {'box-sizing': 'border-box'});\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {StyleUtils} from '../../utils/styling/style-utils';\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n@Directive({\n  selector: `\n  [fxFlexAlign],\n  [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md], [fxFlexAlign.lg], [fxFlexAlign.xl],\n  [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md], [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl],\n  [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm], [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`\n})\nexport class FlexAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexAlign')       set align(val)  { this._cacheInput('align', val);  };\n  @Input('fxFlexAlign.xs')    set alignXs(val)  { this._cacheInput('alignXs', val);  };\n  @Input('fxFlexAlign.sm')    set alignSm(val)  { this._cacheInput('alignSm', val); };\n  @Input('fxFlexAlign.md')    set alignMd(val)  { this._cacheInput('alignMd', val); };\n  @Input('fxFlexAlign.lg')    set alignLg(val)  { this._cacheInput('alignLg', val); };\n  @Input('fxFlexAlign.xl')    set alignXl(val)  { this._cacheInput('alignXl', val); };\n\n  @Input('fxFlexAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxFlexAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxFlexAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxFlexAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  @Input('fxFlexAlign.gt-xs') set alignGtXs(val)  { this._cacheInput('alignGtXs', val); };\n  @Input('fxFlexAlign.gt-sm') set alignGtSm(val)  { this._cacheInput('alignGtSm', val); };\n  @Input('fxFlexAlign.gt-md') set alignGtMd(val)  { this._cacheInput('alignGtMd', val); };\n  @Input('fxFlexAlign.gt-lg') set alignGtLg(val)  { this._cacheInput('alignGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('align', 'stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('align') || 'stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(align) {\n    let css = {};\n\n    // Cross-axis\n    switch (align) {\n      case 'start':\n        css['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        css['align-self'] = 'flex-end';\n        break;\n      default:\n        css['align-self'] = align;\n        break;\n    }\n\n    return css;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef} from '@angular/core';\n\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {BaseFxDirective} from '../core/base';\nimport {StyleUtils} from '../../utils/styling/style-utils';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `\n  [fxFill],\n  [fxFlexFill]\n`})\nexport class FlexFillDirective extends BaseFxDirective {\n  constructor(monitor: MediaMonitor,\n              public elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n    this._applyStyleToElement(FLEX_FILL_CSS);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from '../core/base';\nimport {Directionality} from '../../bidi/directionality';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LayoutDirective} from './layout';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\nimport {StyleUtils} from '../../utils/styling/style-utils';\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive({selector: `\n  [fxFlexOffset],\n  [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md], [fxFlexOffset.lg], [fxFlexOffset.xl],\n  [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md], [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl],\n  [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm], [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`})\nexport class FlexOffsetDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n  private _directionWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxFlexOffset')       set offset(val)     { this._cacheInput('offset', val); }\n  @Input('fxFlexOffset.xs')    set offsetXs(val)   { this._cacheInput('offsetXs', val); }\n  @Input('fxFlexOffset.sm')    set offsetSm(val)   { this._cacheInput('offsetSm', val); };\n  @Input('fxFlexOffset.md')    set offsetMd(val)   { this._cacheInput('offsetMd', val); };\n  @Input('fxFlexOffset.lg')    set offsetLg(val)   { this._cacheInput('offsetLg', val); };\n  @Input('fxFlexOffset.xl')    set offsetXl(val)   { this._cacheInput('offsetXl', val); };\n\n  @Input('fxFlexOffset.lt-sm') set offsetLtSm(val) { this._cacheInput('offsetLtSm', val); };\n  @Input('fxFlexOffset.lt-md') set offsetLtMd(val) { this._cacheInput('offsetLtMd', val); };\n  @Input('fxFlexOffset.lt-lg') set offsetLtLg(val) { this._cacheInput('offsetLtLg', val); };\n  @Input('fxFlexOffset.lt-xl') set offsetLtXl(val) { this._cacheInput('offsetLtXl', val); };\n\n  @Input('fxFlexOffset.gt-xs') set offsetGtXs(val) { this._cacheInput('offsetGtXs', val); };\n  @Input('fxFlexOffset.gt-sm') set offsetGtSm(val) { this._cacheInput('offsetGtSm', val); };\n  @Input('fxFlexOffset.gt-md') set offsetGtMd(val) { this._cacheInput('offsetGtMd', val); };\n  @Input('fxFlexOffset.gt-lg') set offsetGtLg(val) { this._cacheInput('offsetGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              private _directionality: Directionality,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    this._directionWatcher =\n        this._directionality.change.subscribe(this._updateWithValue.bind(this));\n\n    this.watchParentFlow();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['offset'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * Cleanup\n   */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._directionWatcher) {\n      this._directionWatcher.unsubscribe();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('offset', 0 , (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** The flex-direction of this element's host container. Defaults to 'row'. */\n  protected _layout = 'row';\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /**\n   * If parent flow-direction changes, then update the margin property\n   * used to offset\n   */\n  protected watchParentFlow() {\n    if (this._container) {\n      // Subscribe to layout immediate parent direction changes (if any)\n      this._layoutWatcher = this._container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateWithValue();\n  }\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('offset') || 0;\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(offset) {\n    let isPercent = String(offset).indexOf('%') > -1;\n    let isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(offset)) {\n      offset = offset + '%';\n    }\n\n    const horizontalLayoutKey =\n        this._directionality.value === 'rtl' ? 'margin-right' : 'margin-left';\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    let layout = this._getFlowDirection(this.parentElement, true);\n    return isFlowHorizontal(layout) ? {[horizontalLayoutKey]: `${offset}`} :\n                                      {'margin-top': `${offset}`};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {StyleUtils} from '../../utils/styling/style-utils';\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n@Directive({selector: `\n  [fxFlexOrder],\n  [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md], [fxFlexOrder.lg], [fxFlexOrder.xl],\n  [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md], [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl],\n  [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm], [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`})\nexport class FlexOrderDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOrder')       set order(val)     { this._cacheInput('order', val); }\n  @Input('fxFlexOrder.xs')    set orderXs(val)   { this._cacheInput('orderXs', val); }\n  @Input('fxFlexOrder.sm')    set orderSm(val)   { this._cacheInput('orderSm', val); };\n  @Input('fxFlexOrder.md')    set orderMd(val)   { this._cacheInput('orderMd', val); };\n  @Input('fxFlexOrder.lg')    set orderLg(val)   { this._cacheInput('orderLg', val); };\n  @Input('fxFlexOrder.xl')    set orderXl(val)   { this._cacheInput('orderXl', val); };\n\n  @Input('fxFlexOrder.gt-xs') set orderGtXs(val) { this._cacheInput('orderGtXs', val); };\n  @Input('fxFlexOrder.gt-sm') set orderGtSm(val) { this._cacheInput('orderGtSm', val); };\n  @Input('fxFlexOrder.gt-md') set orderGtMd(val) { this._cacheInput('orderGtMd', val); };\n  @Input('fxFlexOrder.gt-lg') set orderGtLg(val) { this._cacheInput('orderGtLg', val); };\n\n  @Input('fxFlexOrder.lt-sm') set orderLtSm(val) { this._cacheInput('orderLtSm', val); };\n  @Input('fxFlexOrder.lt-md') set orderLtMd(val) { this._cacheInput('orderLtMd', val); };\n  @Input('fxFlexOrder.lt-lg') set orderLtLg(val) { this._cacheInput('orderLtLg', val); };\n  @Input('fxFlexOrder.lt-xl') set orderLtXl(val) { this._cacheInput('orderLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['order'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('order', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('order') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n\n  protected _buildCSS(value) {\n    value = parseInt(value, 10);\n    return {order: isNaN(value) ? 0 : value};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Renderer2, RendererStyleFlags2} from '@angular/core';\n\n/**\n * Adapts the 'deprecated' Angular Renderer v1 API to use the new Renderer2 instance\n * This is required for older versions of NgStyle and NgClass that require\n * the v1 API (but should use the v2 instances)\n */\nexport class RendererAdapter {\n  constructor(private _renderer: Renderer2) { }\n\n  setElementClass(el: any, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this._renderer.addClass(el, className);\n    } else {\n      this._renderer.removeClass(el, className);\n    }\n  }\n\n  setElementStyle(el: any, styleName: string, styleValue: string): void {\n    if (styleValue) {\n      this._renderer.setStyle(el, styleName, styleValue);\n    } else {\n      this._renderer.removeStyle(el, styleName);\n    }\n  }\n\n  // new API is forwarded\n  addClass(el: any, name: string): void {\n    this._renderer.addClass(el, name);\n  }\n\n  removeClass(el: any, name: string): void {\n    this._renderer.removeClass(el, name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void {\n    this._renderer.setStyle(el, style, value, flags);\n  }\n\n  removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void {\n    this._renderer.removeStyle(el, style, flags);\n  }\n\n  // ******************************************************************\n  // !! Renderer is an abstract class with abstract methods\n  //\n  // These are implementation of those methods... and do NOTHING since\n  // we only use setElementStyle() and setElementClass()\n  // ******************************************************************\n\n  /* tslint:disable */\n  animate()             : any  { throw _notImplemented('animate'); }\n  attachViewAfter()     : void { throw _notImplemented('attachViewAfter'); }\n  detachView()          : void { throw _notImplemented('detachView'); }\n  destroyView()         : void { throw _notImplemented('destroyView'); }\n  createElement()       : any  { throw _notImplemented('createElement'); }\n  createViewRoot()      : any  { throw _notImplemented('createViewRoot'); }\n  createTemplateAnchor(): any  { throw _notImplemented('createTemplateAnchor'); }\n  createText()          : any  { throw _notImplemented('createText'); }\n  invokeElementMethod() : void { throw _notImplemented('invokeElementMethod'); }\n  projectNodes()        : void { throw _notImplemented('projectNodes'); }\n  selectRootElement()   : any  { throw _notImplemented('selectRootElement'); }\n  setBindingDebugInfo() : void { throw _notImplemented('setBindingDebugInfo'); }\n  setElementProperty()  : void { throw _notImplemented('setElementProperty'); }\n  setElementAttribute() : void { throw _notImplemented('setElementAttribute'); }\n  setText()             : void { throw _notImplemented('setText'); }\n  listen()              : Function { throw _notImplemented('listen');  }\n  listenGlobal()        : Function { throw _notImplemented('listenGlobal');  }\n  /* tslint:enable */\n}\n\nfunction _notImplemented(methodName: string) {\n  return new Error(`The method RendererAdapter::${methodName}() has not been implemented`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  Self,\n  OnInit,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\n\nimport {BaseFxDirective} from '../core/base';\nimport {BaseFxDirectiveAdapter} from '../core/base-adapter';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {RendererAdapter} from '../core/renderer-adapter';\nimport {StyleUtils} from '../../utils/styling/style-utils';\n\n/** NgClass allowed inputs **/\nexport type NgClassType = string | string[] | Set<string> | {[klass: string]: any};\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({\n  selector: `\n    [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n    [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n    [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n  `\n})\nexport class ClassDirective extends BaseFxDirective\n    implements DoCheck, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Intercept ngClass assignments so we cache the default classes\n   * which are merged with activated styles or used as fallbacks.\n   * Note: Base ngClass values are applied during ngDoCheck()\n   */\n  @Input('ngClass')\n  set ngClassBase(val: NgClassType) {\n    const key = 'ngClass';\n    this._base.cacheInput(key, val, true);\n    this._ngClassInstance.ngClass = this._base.queryInput(key);\n  }\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klazz(val: string) {\n    const key = 'class';\n    this._base.cacheInput(key, val);\n    this._ngClassInstance.klass = val;\n  }\n\n  /* tslint:disable */\n  @Input('ngClass.xs')    set ngClassXs(val:   NgClassType) { this._base.cacheInput('ngClassXs',   val, true); }\n  @Input('ngClass.sm')    set ngClassSm(val:   NgClassType) { this._base.cacheInput('ngClassSm',   val, true); }\n  @Input('ngClass.md')    set ngClassMd(val:   NgClassType) { this._base.cacheInput('ngClassMd',   val, true); }\n  @Input('ngClass.lg')    set ngClassLg(val:   NgClassType) { this._base.cacheInput('ngClassLg',   val, true); }\n  @Input('ngClass.xl')    set ngClassXl(val:   NgClassType) { this._base.cacheInput('ngClassXl',   val, true); }\n\n  @Input('ngClass.lt-sm') set ngClassLtSm(val: NgClassType) { this._base.cacheInput('ngClassLtSm', val, true); }\n  @Input('ngClass.lt-md') set ngClassLtMd(val: NgClassType) { this._base.cacheInput('ngClassLtMd', val, true); }\n  @Input('ngClass.lt-lg') set ngClassLtLg(val: NgClassType) { this._base.cacheInput('ngClassLtLg', val, true); }\n  @Input('ngClass.lt-xl') set ngClassLtXl(val: NgClassType) { this._base.cacheInput('ngClassLtXl', val, true); }\n\n  @Input('ngClass.gt-xs') set ngClassGtXs(val: NgClassType) { this._base.cacheInput('ngClassGtXs', val, true); }\n  @Input('ngClass.gt-sm') set ngClassGtSm(val: NgClassType) { this._base.cacheInput('ngClassGtSm', val, true); }\n  @Input('ngClass.gt-md') set ngClassGtMd(val: NgClassType) { this._base.cacheInput('ngClassGtMd', val, true); }\n  @Input('ngClass.gt-lg') set ngClassGtLg(val: NgClassType) { this._base.cacheInput('ngClassGtLg', val, true); }\n\n  /* tslint:enable */\n  constructor(protected monitor: MediaMonitor,\n              protected _iterableDiffers: IterableDiffers,\n              protected _keyValueDiffers: KeyValueDiffers,\n              protected _ngEl: ElementRef,\n              protected _renderer: Renderer2,\n              @Optional() @Self() private _ngClassInstance: NgClass,\n              protected _styler: StyleUtils) {\n    super(monitor, _ngEl, _styler);\n    this._configureAdapters();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._ngClassInstance.ngClass = this._base.mqActivation.activatedInput || '';\n    }\n  }\n\n  ngOnInit() {\n    this._configureMQListener();\n  }\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this._ngClassInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n    delete this._ngClassInstance;\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n   * Configure adapters (that delegate to an internal ngClass instance) if responsive\n   * keys have been defined.\n   */\n  protected _configureAdapters() {\n    this._base = new BaseFxDirectiveAdapter(\n      'ngClass',\n      this.monitor,\n      this._ngEl,\n      this._styler\n    );\n    if (!this._ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      let adapter = new RendererAdapter(this._renderer);\n      this._ngClassInstance = new NgClass(\n          this._iterableDiffers, this._keyValueDiffers, this._ngEl, <any> adapter\n      );\n    }\n  }\n\n  /**\n   * Build an mqActivation object that bridges mql change events to onMediaQueryChange handlers\n   * NOTE: We delegate subsequent activity to the NgClass logic\n   *       Identify the activated input value and update the ngClass iterables...\n   *       Use ngDoCheck() to actually apply the values to the element\n   */\n  protected _configureMQListener(baseKey = 'ngClass') {\n    const fallbackValue = this._base.queryInput(baseKey);\n    this._base.listenForMediaQueryChanges(baseKey, fallbackValue, (changes: MediaChange) => {\n      this._ngClassInstance.ngClass = changes.value || '';\n      this._ngClassInstance.ngDoCheck();\n    });\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors and capture mediaQuery changes\n   * Delegate value changes to the internal `_ngClassInstance` for processing\n   */\n  protected _base: BaseFxDirectiveAdapter;   // used for `ngClass.xxx` selectors\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/**\n * NgStyle allowed inputs\n */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\n/**\n * Transform Operators for @angular/flex-layout NgStyle Directive\n */\nexport const ngStyleUtils = {\n  getType,\n  buildRawList,\n  buildMapFromList,\n  buildMapFromSet\n};\n\nfunction getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set ) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/**\n * Convert array of key:value strings to a iterable map object\n */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {});\n}\n\n/**\n * Convert Set<string> or raw Object to an iterable NgStyleMap\n */\nfunction buildMapFromSet(source: any, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list = new Array<string>();\n  if (getType(source) == 'set') {\n    source.forEach(entry => list.push(entry));\n  } else {                                // simple hashmap\n    Object.keys(source).forEach(key => {\n      list.push(`${key}:${source[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/**\n * Convert 'key:value' -> [key, value]\n */\nfunction stringToKeyValue(it: string): NgStyleKeyValue|null {\n  let [key, val] = it.split(':');\n  return val ? new NgStyleKeyValue(key, val) : null;\n}\n\n/**\n * Convert [ [key,value] ] -> { key : value }\n */\nfunction keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  KeyValueDiffers,\n  OnDestroy,\n  OnChanges,\n  Optional,\n  Renderer2,\n  SecurityContext,\n  Self,\n  SimpleChanges,\n  OnInit,\n} from '@angular/core';\nimport {NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {BaseFxDirective} from '../core/base';\nimport {BaseFxDirectiveAdapter} from '../core/base-adapter';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  ngStyleUtils as _\n} from '../../utils/styling/style-transforms';\nimport {RendererAdapter} from '../core/renderer-adapter';\nimport {StyleUtils} from '../../utils/styling/style-utils';\n\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({\n  selector: `\n    [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n    [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n    [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n  `\n})\nexport class StyleDirective extends BaseFxDirective\n    implements DoCheck, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Intercept ngStyle assignments so we cache the default styles\n   * which are merged with activated styles or used as fallbacks.\n   */\n  @Input('ngStyle')\n  set ngStyleBase(val: NgStyleType) {\n    const key = 'ngStyle';\n    this._base.cacheInput(key, val, true);  // convert val to hashmap\n    this._ngStyleInstance.ngStyle = this._base.queryInput(key);\n  }\n\n  /* tslint:disable */\n  @Input('ngStyle.xs')    set ngStyleXs(val: NgStyleType) { this._base.cacheInput('ngStyleXs', val, true); }\n  @Input('ngStyle.sm')    set ngStyleSm(val: NgStyleType) { this._base.cacheInput('ngStyleSm', val, true); };\n  @Input('ngStyle.md')    set ngStyleMd(val: NgStyleType) { this._base.cacheInput('ngStyleMd', val, true); };\n  @Input('ngStyle.lg')    set ngStyleLg(val: NgStyleType) { this._base.cacheInput('ngStyleLg', val, true); };\n  @Input('ngStyle.xl')    set ngStyleXl(val: NgStyleType) { this._base.cacheInput('ngStyleXl', val, true); };\n\n  @Input('ngStyle.lt-sm') set ngStyleLtSm(val: NgStyleType) { this._base.cacheInput('ngStyleLtSm', val, true); };\n  @Input('ngStyle.lt-md') set ngStyleLtMd(val: NgStyleType) { this._base.cacheInput('ngStyleLtMd', val, true); };\n  @Input('ngStyle.lt-lg') set ngStyleLtLg(val: NgStyleType) { this._base.cacheInput('ngStyleLtLg', val, true); };\n  @Input('ngStyle.lt-xl') set ngStyleLtXl(val: NgStyleType) { this._base.cacheInput('ngStyleLtXl', val, true); };\n\n  @Input('ngStyle.gt-xs') set ngStyleGtXs(val: NgStyleType) { this._base.cacheInput('ngStyleGtXs', val, true); };\n  @Input('ngStyle.gt-sm') set ngStyleGtSm(val: NgStyleType) { this._base.cacheInput('ngStyleGtSm', val, true); } ;\n  @Input('ngStyle.gt-md') set ngStyleGtMd(val: NgStyleType) { this._base.cacheInput('ngStyleGtMd', val, true); };\n  @Input('ngStyle.gt-lg') set ngStyleGtLg(val: NgStyleType) { this._base.cacheInput('ngStyleGtLg', val, true); };\n  /* tslint:enable */\n\n  /**\n   *  Constructor for the ngStyle subclass; which adds selectors and\n   *  a MediaQuery Activation Adapter\n   */\n  constructor(private monitor: MediaMonitor,\n              protected _sanitizer: DomSanitizer,\n              protected _ngEl: ElementRef,\n              protected _renderer: Renderer2,\n              protected _differs: KeyValueDiffers,\n              @Optional() @Self() private _ngStyleInstance: NgStyle,\n              protected _styler: StyleUtils) {\n\n    super(monitor, _ngEl, _styler);\n    this._configureAdapters();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._ngStyleInstance.ngStyle = this._base.mqActivation.activatedInput || '';\n    }\n  }\n\n\n  ngOnInit() {\n    this._configureMQListener();\n  }\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this._ngStyleInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n    delete this._ngStyleInstance;\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n     * Configure adapters (that delegate to an internal ngClass instance) if responsive\n     * keys have been defined.\n     */\n    protected _configureAdapters() {\n        this._base = new BaseFxDirectiveAdapter(\n          'ngStyle',\n          this.monitor,\n          this._ngEl,\n          this._styler\n        );\n        if (!this._ngStyleInstance) {\n          // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n          // defined on the same host element; since the responsive variations may be defined...\n          let adapter = new RendererAdapter(this._renderer);\n          this._ngStyleInstance = new NgStyle(this._differs, this._ngEl, <any> adapter);\n        }\n\n        this._buildCacheInterceptor();\n        this._fallbackToStyle();\n    }\n\n    /**\n     * Build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    protected _configureMQListener(baseKey = 'ngStyle') {\n      const fallbackValue = this._base.queryInput(baseKey);\n      this._base.listenForMediaQueryChanges(baseKey, fallbackValue, (changes: MediaChange) => {\n        this._ngStyleInstance.ngStyle = changes.value || '';\n        this._ngStyleInstance.ngDoCheck();\n      });\n    }\n\n  // ************************************************************************\n  // Private Internal Methods\n  // ************************************************************************\n\n  /**\n   * Build intercept to convert raw strings to ngStyleMap\n   */\n  protected _buildCacheInterceptor() {\n    let cacheInput = this._base.cacheInput.bind(this._base);\n    this._base.cacheInput = (key?: string, source?: any, cacheRaw = false, merge = true) => {\n      let styles = this._buildStyleMap(source);\n      if (merge) {\n        styles = extendObject({}, this._base.inputMap['ngStyle'], styles);\n      }\n      cacheInput(key, styles, cacheRaw);\n    };\n  }\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected _buildStyleMap(styles: NgStyleType) {\n    let sanitizer: NgStyleSanitizer = (val: any) => {\n      // Always safe-guard (aka sanitize) style property values\n      return this._sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    };\n    if (styles) {\n      switch ( _.getType(styles) ) {\n        case 'string':  return _.buildMapFromList(_.buildRawList(styles), sanitizer);\n        case 'array' :  return _.buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return _.buildMapFromSet(styles, sanitizer);\n        default      :  return _.buildMapFromSet(styles, sanitizer);\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * Initial lookup of raw 'class' value (if any)\n   */\n  protected _fallbackToStyle() {\n    if (!this._base.queryInput('ngStyle')) {\n      this.ngStyleBase = this._getAttributeValue('style') || '';\n    }\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the StyleDirective\n   */\n  protected _base: BaseFxDirectiveAdapter;\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operators/filter';\n\nimport {MediaChange} from './media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable()\nexport class MatchMedia {\n  protected _registry: Map<string, MediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    this._registry = new Map<string, MediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    let mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    if (mediaQuery) {\n      this.registerQuery(mediaQuery);\n    }\n\n    return this._observable$.pipe(\n      filter((change: MediaChange) => {\n        return mediaQuery ? (change.mediaQuery === mediaQuery) : true;\n      })\n    );\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    let list = normalizeQuery(mediaQuery);\n\n    if (list.length > 0) {\n      this._prepareQueryCSS(list, this._document);\n\n      list.forEach(query => {\n        let mql = this._registry.get(query);\n        let onMQLEvent = (e: MediaQueryList) => {\n          this._zone.run(() => {\n            let change = new MediaChange(e.matches, query);\n            this._source.next(change);\n          });\n        };\n\n        if (!mql) {\n          mql = this._buildMQL(query);\n          mql.addListener(onMQLEvent);\n          this._registry.set(query, mql);\n        }\n\n        if (mql.matches) {\n          onMQLEvent(mql);  // Announce activate range for initial subscribers\n        }\n      });\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    let canListen = isPlatformBrowser(this._platformId) &&\n      !!(<any>window).matchMedia('all').addListener;\n\n    return canListen ? (<any>window).matchMedia(query) : <MediaQueryList>{\n      matches: query === 'all' || query === '',\n      media: query,\n      addListener: () => {\n      },\n      removeListener: () => {\n      }\n    };\n  }\n\n  /**\n   * For Webkit engines that only trigger the MediaQueryList Listener\n   * when there is at least one CSS selector for the respective media query.\n   *\n   * @param query string The mediaQuery used to create a faux CSS selector\n   *\n   */\n  protected _prepareQueryCSS(mediaQueries: string[], _document: Document) {\n    let list = mediaQueries.filter(it => !ALL_STYLES[it]);\n    if (list.length > 0) {\n      let query = list.join(', ');\n\n      try {\n        let styleEl = _document.createElement('style');\n\n        styleEl.setAttribute('type', 'text/css');\n        if (!styleEl['styleSheet']) {\n          let cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n` ;\n          styleEl.appendChild(_document.createTextNode(cssText));\n        }\n\n        _document.head.appendChild(styleEl);\n\n        // Store in private global registry\n        list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n\n/**\n * Always convert to unique list of queries; for iteration in ::registerQuery()\n */\nfunction normalizeQuery(mediaQuery: string | string[]): string[] {\n  return (typeof mediaQuery === 'undefined') ? [] :\n      (typeof mediaQuery === 'string') ? [mediaQuery] : unique(mediaQuery as string[]);\n}\n\n/**\n * Filter duplicate mediaQueries in the list\n */\nfunction unique(list: string[]): string[] {\n  let seen = {};\n  return list.filter(item => {\n    return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n  });\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from '../media-query/media-change';\nimport {BreakPoint} from '../media-query/breakpoints/break-point';\nimport {extendObject} from './object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null) {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('2.0.0-beta.12-8bdc586');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs/Subscription';\nimport {map} from 'rxjs/operators/map';\n\nimport {MediaChange, MediaQuerySubscriber} from '../../media-query/media-change';\nimport {BreakPoint} from '../../media-query/breakpoints/break-point';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {extendObject} from '../../utils/object-extend';\n\nexport declare type SubscriptionList = Subscription[ ];\n\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nexport class ResponsiveActivation {\n  private _subscribers: SubscriptionList = [];\n  private _activatedInputKey: string;\n  private _registryMap: BreakPointX[];\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n    this._registryMap = this._buildRegistryMap();\n    this._subscribers = this._configureChangeObservers();\n  }\n\n  /**\n   * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n   * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n   * important when several media queries are 'registered' and from which, the browser uses the\n   * first matching media query.\n   */\n  get registryFromLargest(): BreakPointX[] {\n    return [...this._registryMap].reverse();\n  }\n\n  /**\n   * Accessor to the DI'ed directive property\n   * Each directive instance has a reference to the MediaMonitor which is\n   * used HERE to subscribe to mediaQuery change notifications.\n   */\n  get mediaMonitor(): MediaMonitor {\n    return this._mediaMonitor;\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    let key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  hasKeyValue(key) {\n    let value = this._options.inputKeys[key];\n    return typeof value !== 'undefined';\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach((link: Subscription) => {\n      link.unsubscribe();\n    });\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): SubscriptionList {\n    let subscriptions: Subscription[] = [];\n\n    this._registryMap.forEach((bp: BreakPointX) => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        let buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n          this.mediaMonitor\n              .observe(bp.alias)\n              .pipe(map(buildChanges))\n              .subscribe(change => {\n                this._onMonitorEvents(change);\n              })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this.mediaMonitor.breakpoints\n        .map(bp => {\n          return <BreakPointX> extendObject({}, bp, {\n            baseKey: this._options.baseKey,             // e.g. layout, hide, self-align, flex-wrap\n            key: this._options.baseKey + bp.suffix  // e.g.  layoutGtSm, layoutMd, layoutGtLg\n          });\n        })\n        .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property == this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                     // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey == currentKey) ? '' : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey) {\n    let isMissingKey = (key) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      this.mediaMonitor.activeOverlaps.some(bp => {\n        let key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  SimpleChange,\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  StyleUtils,\n} from '../../utils/styling/style-utils';\n\nimport {ResponsiveActivation, KeyOptions} from '../core/responsive-activation';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective implements OnDestroy, OnChanges {\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access to host element's parent DOM node\n   */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  protected get nativeElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._display = this._getDisplayStyle();\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseFxDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    delete this._mediaMonitor;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows us to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source: HTMLElement = this.nativeElement): string {\n    const query = 'display';\n    return this._styler.lookupStyle(source, query);\n  }\n\n  /**\n   * Quick accessor to raw attribute value on the target DOM element\n   */\n  protected _getAttributeValue(attribute: string,\n                               source: HTMLElement = this.nativeElement): string {\n    return this._styler.lookupAttributeValue(source, attribute);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    let value = 'row';\n    let hasInlineValue = '';\n\n    if (target) {\n      [value, hasInlineValue] = this._styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this._styler.applyStyleToElements(style, elements);\n      }\n    }\n\n    return value.trim() || 'row';\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 element: HTMLElement = this.nativeElement) {\n    this._styler.applyStyleToElement(element, style, value);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[]) {\n    this._styler.applyStyleToElements(style, elements);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      if (!!key) {\n        this._inputMap[key] = source;\n      }\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(\n          keyOptions,\n          this._mediaMonitor,\n          (change) => onMediaQueryChange(change)\n      );\n    }\n    return this._mqActivation;\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /**\n   * Does this directive have 1 or more responsive keys defined\n   * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n   */\n  hasResponsiveAPI(baseKey: string) {\n    const totalKeys = Object.keys(this._inputMap).length;\n    const baseValue = this._inputMap[baseKey];\n    return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n  }\n\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** Original dom Elements CSS display style */\n  protected _display;\n\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {ResponsiveActivation} from './responsive-activation';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {StyleUtils} from '../../utils/styling/style-utils';\n\n\n/**\n * Adapter to the BaseFxDirective abstract class so it can be used via composition.\n * @see BaseFxDirective\n */\nexport class BaseFxDirectiveAdapter extends BaseFxDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseFxDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation;\n  }\n\n  /**\n   * BaseFxDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n    super(_mediaMonitor, _elementRef, _styler);\n  }\n\n  /**\n    * Does this directive have 1 or more responsive keys defined\n    * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n    */\n  hasResponsiveAPI() {\n   return super.hasResponsiveAPI(this._baseKey);\n  }\n\n  /**\n   * @see BaseFxDirective._queryInput\n   */\n  queryInput(key) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error(\n        `Invalid class value '${key}' provided. Did you want to cache the raw value?`\n      );\n    }\n  }\n\n  /**\n   * @see BaseFxDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    if (key) {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source ? source.join(' ') : '';\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes: string[] = [];\n    if (source) {\n      for (let prop in source) {\n        if (!!source[prop]) {\n          classes.push(prop);\n        }\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n    new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overriden from custom, application-specific ranges\n *\n */\n@Injectable()\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[ ] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint | null {\n    return this._registry.find(bp => bp.alias == alias) || null;\n  }\n\n  findByQuery(query: string): BreakPoint | null {\n    return this._registry.find(bp => bp.mediaQuery == query) || null;\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => !!it.suffix ? it.suffix : '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string;\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {BreakPoint} from './breakpoints/break-point';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\nimport {MatchMedia} from './match-media';\nimport {MediaChange} from './media-change';\n\nimport {mergeAlias} from '../utils/add-alias';\n\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operators/filter';\nimport {map} from 'rxjs/operators/map';\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n */\n@Injectable()\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    let items: BreakPoint[] = this._breakpoints.overlappings.reverse();\n    return items.filter((bp: BreakPoint) => {\n      return this._matchMedia.isActive(bp.mediaQuery);\n    });\n  }\n\n  get active(): BreakPoint | null {\n    let found: BreakPoint | null = null, items = this.breakpoints.reverse();\n    items.forEach(bp => {\n      if (bp.alias !== '') {\n        if (!found && this._matchMedia.isActive(bp.mediaQuery)) {\n          found = bp;\n        }\n      }\n    });\n\n    let first = this.breakpoints[0];\n    return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias?: string): Observable<MediaChange> {\n    let bp = this._breakpoints.findByAlias(alias || '') ||\n      this._breakpoints.findByQuery(alias || '');\n    let hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    let media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return media$.pipe(\n      map(change => mergeAlias(change, bp)),\n      filter(hasAlias)\n    );\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    let queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This stores all of the styles for a given HTML element\n * and returns them later\n */\n@Injectable()\nexport class ServerStylesheet {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string|number {\n    const styles = this.stylesheet.get(el);\n    return (styles && styles.get(styleName)) || '';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>('FlexLayoutServerLoaded');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../auto-prefixer';\nimport {ServerStylesheet} from './server-stylesheet';\nimport {SERVER_TOKEN} from './server-token';\n\n@Injectable()\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: ServerStylesheet,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement, style: StyleDefinition, value?: string | number) {\n    let styles = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    if (value === FALLBACK_STYLE) {\n      value = '';\n    }\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return element.style[styleName] || element.style.getPropertyValue(styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = `${this._serverStylesheet.getStyleForElement(element, styleName)}`;\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : FALLBACK_STYLE;\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: {}, element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n      values.sort();\n      for (let value of values) {\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          element.style.setProperty(key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n\nconst FALLBACK_STYLE = 'block';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {ReplaySubject} from 'rxjs/ReplaySubject';\nimport {StyleUtils} from '../../utils/styling/style-utils';\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive({selector: `\n  [fxLayout],\n  [fxLayout.xs], [fxLayout.sm], [fxLayout.md], [fxLayout.lg], [fxLayout.xl],\n  [fxLayout.lt-sm], [fxLayout.lt-md], [fxLayout.lt-lg], [fxLayout.lt-xl],\n  [fxLayout.gt-xs], [fxLayout.gt-sm], [fxLayout.gt-md], [fxLayout.gt-lg]\n`})\nexport class LayoutDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Create Observable for nested/child 'flex' directives. This allows\n   * child flex directives to subscribe/listen for flexbox direction changes.\n   */\n  protected _announcer: ReplaySubject<string>;\n\n  /**\n   * Publish observer to enabled nested, dependent directives to listen\n   * to parent 'layout' direction changes\n   */\n  layout$: Observable<string>;\n\n  /* tslint:disable */\n  @Input('fxLayout')       set layout(val)     { this._cacheInput('layout', val); };\n  @Input('fxLayout.xs')    set layoutXs(val)   { this._cacheInput('layoutXs', val); };\n  @Input('fxLayout.sm')    set layoutSm(val)   { this._cacheInput('layoutSm', val); };\n  @Input('fxLayout.md')    set layoutMd(val)   { this._cacheInput('layoutMd', val); };\n  @Input('fxLayout.lg')    set layoutLg(val)   { this._cacheInput('layoutLg', val); };\n  @Input('fxLayout.xl')    set layoutXl(val)   { this._cacheInput('layoutXl', val); };\n\n  @Input('fxLayout.gt-xs') set layoutGtXs(val) { this._cacheInput('layoutGtXs', val); };\n  @Input('fxLayout.gt-sm') set layoutGtSm(val) { this._cacheInput('layoutGtSm', val); };\n  @Input('fxLayout.gt-md') set layoutGtMd(val) { this._cacheInput('layoutGtMd', val); };\n  @Input('fxLayout.gt-lg') set layoutGtLg(val) { this._cacheInput('layoutGtLg', val); };\n\n  @Input('fxLayout.lt-sm') set layoutLtSm(val) { this._cacheInput('layoutLtSm', val); };\n  @Input('fxLayout.lt-md') set layoutLtMd(val) { this._cacheInput('layoutLtMd', val); };\n  @Input('fxLayout.lt-lg') set layoutLtLg(val) { this._cacheInput('layoutLtLg', val); };\n  @Input('fxLayout.lt-xl') set layoutLtXl(val) { this._cacheInput('layoutLtXl', val); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n    this._announcer = new ReplaySubject<string>(1);\n    this.layout$ = this._announcer.asObservable();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxLayout')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['layout'] != null || this._mqActivation) {\n      this._updateWithDirection();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('layout', 'row', (changes: MediaChange) => {\n      this._updateWithDirection(changes.value);\n    });\n    this._updateWithDirection();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Validate the direction value and then update the host's inline flexbox styles\n   */\n  protected _updateWithDirection(value?: string) {\n    value = value || this._queryInput('layout') || 'row';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Update styles and announce to subscribers the *new* direction\n    let css = buildLayoutCSS(!!value ? value : '');\n\n    this._applyStyleToElement(css);\n    this._announcer.next(css['flex-direction']);\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  Self,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {extendObject} from '../../utils/object-extend';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {LayoutDirective} from './layout';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\nimport {StyleUtils} from '../../utils/styling/style-utils';\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n@Directive({selector: `\n  [fxLayoutAlign],\n  [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md], [fxLayoutAlign.lg],[fxLayoutAlign.xl],\n  [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md], [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl],\n  [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm], [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`})\nexport class LayoutAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxLayoutAlign')       set align(val)     { this._cacheInput('align', val); }\n  @Input('fxLayoutAlign.xs')    set alignXs(val)   { this._cacheInput('alignXs', val); }\n  @Input('fxLayoutAlign.sm')    set alignSm(val)   { this._cacheInput('alignSm', val); };\n  @Input('fxLayoutAlign.md')    set alignMd(val)   { this._cacheInput('alignMd', val); };\n  @Input('fxLayoutAlign.lg')    set alignLg(val)   { this._cacheInput('alignLg', val); };\n  @Input('fxLayoutAlign.xl')    set alignXl(val)   { this._cacheInput('alignXl', val); };\n\n  @Input('fxLayoutAlign.gt-xs') set alignGtXs(val) { this._cacheInput('alignGtXs', val); };\n  @Input('fxLayoutAlign.gt-sm') set alignGtSm(val) { this._cacheInput('alignGtSm', val); };\n  @Input('fxLayoutAlign.gt-md') set alignGtMd(val) { this._cacheInput('alignGtMd', val); };\n  @Input('fxLayoutAlign.gt-lg') set alignGtLg(val) { this._cacheInput('alignGtLg', val); };\n\n  @Input('fxLayoutAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxLayoutAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxLayoutAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxLayoutAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  /* tslint:enable */\n  constructor(\n      monitor: MediaMonitor,\n      elRef: ElementRef,\n      @Optional() @Self() container: LayoutDirective,\n      styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('align', 'start stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if ( this._layoutWatcher ) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n    this._allowStretching(value, !this._layout ? 'row' : this._layout);\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n\n    let value = this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n    this._allowStretching(value, this._layout || 'row');\n  }\n\n  protected _buildCSS(align) {\n    let css = {}, [main_axis, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    // Main axis\n    switch (main_axis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (cross_axis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'baseline':\n        css['align-items'] = 'baseline';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : this._layout || 'row',\n      'box-sizing' : 'border-box'\n    });\n  }\n\n\n  /**\n   * Update container element to 'stretch' as needed...\n   * NOTE: this is only done if the crossAxis is explicitly set to 'stretch'\n   */\n  protected _allowStretching(align, layout) {\n    let [, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    if (cross_axis == 'stretch') {\n      // Use `null` values to remove style\n      this._applyStyleToElement({\n        'box-sizing': 'border-box',\n        'max-width': !isFlowHorizontal(layout) ? '100%' : null,\n        'max-height': isFlowHorizontal(layout) ? '100%' : null\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n    EventEmitter,\n    Injectable,\n    Optional,\n    Inject,\n    InjectionToken,\n  } from '@angular/core';\n\n\n  export type Direction = 'ltr' | 'rtl';\n\n  /**\n   * Injection token used to inject the document into Directionality.\n   * This is used so that the value can be faked in tests.\n   *\n   * We can't use the real document in tests because changing the real `dir` causes geometry-based\n   * tests in Safari to fail.\n   *\n   * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n   * themselves use things like `querySelector` in test code.\n   */\n  export const DIR_DOCUMENT = new InjectionToken<Document>('cdk-dir-doc');\n\n  /**\n   * The directionality (LTR / RTL) context for the application (or a subtree of it).\n   * Exposes the current direction and a stream of direction changes.\n   */\n  @Injectable()\n  export class Directionality {\n    /** The current 'ltr' or 'rtl' value. */\n    readonly value: Direction = 'ltr';\n\n    /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n    readonly change = new EventEmitter<Direction>();\n\n    constructor(@Optional() @Inject(DIR_DOCUMENT) _document?: any) {\n      if (_document) {\n        // TODO: handle 'auto' value -\n        // We still need to account for dir=\"auto\".\n        // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n        // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n        const bodyDir = _document.body ? _document.body.dir : null;\n        const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n        this.value = (bodyDir || htmlDir || 'ltr') as Direction;\n      }\n    }\n  }\n"],"names":["Object","defineProperty","ShowHideDirective","prototype","val","this","_cacheInput","negativeOf","_getDisplayStyle","layout","_super","call","ngOnChanges","changes","hasInitialized","_mqActivation","_updateWithValue","ngOnInit","_this","value","_getDefaultVal","_listenForMediaQueryChanges","ngOnDestroy","_layoutWatcher","unsubscribe","activatedInput","shouldShow","_validateTruthy","_applyStyleToElement","_buildCSS","isPlatformServer","platformId","serverModuleLoaded","nativeElement","style","setProperty","show","display","_display","FALSY","indexOf","type","Directive","args","selector","MediaMonitor","LayoutDirective","decorators","Optional","Self","ElementRef","StyleUtils","Inject","PLATFORM_ID","undefined","SERVER_TOKEN","Input","showXs","showSm","showMd","showLg","showXl","showLtSm","showLtMd","showLtLg","showLtXl","showGtXs","showGtSm","showGtMd","showGtLg","hide","hideXs","hideSm","hideMd","hideLg","hideXl","hideLtSm","hideLtMd","hideLtLg","hideLtXl","hideGtXs","hideGtSm","hideGtMd","hideGtLg","BaseFxDirective","ImgSrcDirective","_elRef","_monitor","_styler","_platformId","_serverModuleLoaded","getAttribute","setAttribute","tslib_1.__extends","cacheDefaultSrc","hasResponsiveKeys","defaultSrc","_updateSrcFor","url","activatedValue","applyStyleToElement","content","String","_queryInput","keys","_inputMap","length","srcBase","srcXs","srcSm","srcMd","srcLg","srcXl","srcLtSm","srcLtMd","srcLtLg","srcLtXl","srcGtXs","srcGtSm","srcGtMd","srcGtLg","RESPONSIVE_ALIASES","DEFAULT_BREAKPOINTS","alias","mediaQuery","overlapping","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","ObservableMedia","MediaService","breakpoints","mediaWatcher","filterOverlaps","_registerBreakPoints","observable$","_buildObservable","isActive","query","_toMediaQuery","subscribe","next","error","complete","asObservable","queries","sortedItems","map","bp","registerQuery","self","media$","observe","activationsOnly","change","matches","addAliasInformation","mergeAlias","_findByQuery","excludeOverlaps","findByQuery","pipe","filter","_findByAlias","findByAlias","Injectable","BreakPointRegistry","MatchMedia","ALIAS_DELIMITERS","DEFAULT_BREAKPOINTS_PROVIDER","provide","BREAKPOINTS","useFactory","DEFAULT_BREAKPOINTS_PROVIDER_FACTORY","OBSERVABLE_MEDIA_PROVIDER","deps","SkipSelf","OBSERVABLE_MEDIA_PROVIDER_FACTORY","MEDIA_MONITOR_PROVIDER","MEDIA_MONITOR_PROVIDER_FACTORY","ServerMediaQueryList","_mediaQuery","_isActive","_listeners","destroy","deactivate","activate","forEach","callback","addListener","listener","push","removeListener","_","ServerMatchMedia","_zone","_document","_registry","Map","_source","BehaviorSubject","MediaChange","_observable$","activateBreakpoint","lookupBreakpoint","get","deactivateBreakpoint","_buildMQL","NgZone","DOCUMENT","NgModule","providers","MediaQueriesModule","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","removeStyles","multi","CLASS_NAME","_dir","_isInitialized","EventEmitter","Dir","v","old","emit","dir","ngAfterContentInit","Directionality","useExisting","host","[dir]","exportAs","Output","BidiModule","exports","declarations","DIR_DOCUMENT","ALL_DIRECTIVES","LayoutGapDirective","LayoutAlignDirective","FlexDirective","FlexOrderDirective","FlexOffsetDirective","FlexFillDirective","FlexAlignDirective","ClassDirective","StyleDirective","FlexLayoutModule","console","warn","provideBreakPoints","options","ngModule","CUSTOM_BREAKPOINTS_PROVIDER_FACTORY","orientations","imports","concat","slice","ServerStylesheet","gap","gapXs","gapSm","gapMd","gapLg","gapXl","gapGtXs","gapGtSm","gapGtMd","gapGtLg","gapLtSm","gapLtMd","gapLtLg","gapLtXl","monitor","elRef","_container","styleUtils","layout$","direction","_onLayoutChange","_updateStyle","_layout","flexBasis","basis","replace","parts","validateBasis","_validateValue","apply","grow","shrink","css","isValue","_getFlowDirection","parentElement","clearStyles","max-width","max-height","min-width","min-height","extendObject","flex","hasCalc","isPercent","isNaN","max","isFlowHorizontal","min","usingCalc","isPx","isFixed","box-sizing","flexXs","flexSm","flexMd","flexLg","flexXl","flexGtXs","flexGtSm","flexGtMd","flexGtLg","flexLtSm","flexLtMd","flexLtLg","flexLtXl","align","alignXs","alignSm","alignMd","alignLg","alignXl","alignLtSm","alignLtMd","alignLtLg","alignLtXl","alignGtXs","alignGtSm","alignGtMd","alignGtLg","FLEX_FILL_CSS","margin","width","height","_directionality","_directionWatcher","bind","watchParentFlow","offset","horizontalLayoutKey","_a","margin-top","offsetXs","offsetSm","offsetMd","offsetLg","offsetXl","offsetLtSm","offsetLtMd","offsetLtLg","offsetLtXl","offsetGtXs","offsetGtSm","offsetGtMd","offsetGtLg","parseInt","order","orderXs","orderSm","orderMd","orderLg","orderXl","orderGtXs","orderGtSm","orderGtMd","orderGtLg","orderLtSm","orderLtMd","orderLtLg","orderLtXl","RendererAdapter","_renderer","setElementClass","el","className","isAdd","addClass","removeClass","setElementStyle","styleName","styleValue","setStyle","removeStyle","name","flags","animate","_notImplemented","attachViewAfter","detachView","destroyView","createElement","createViewRoot","createTemplateAnchor","createText","invokeElementMethod","projectNodes","selectRootElement","setBindingDebugInfo","setElementProperty","setElementAttribute","setText","listen","listenGlobal","_iterableDiffers","_keyValueDiffers","_ngEl","_ngClassInstance","_configureAdapters","_base","cacheInput","ngClass","queryInput","klass","activeKey","mqActivation","_configureMQListener","ngDoCheck","BaseFxDirectiveAdapter","adapter","NgClass","baseKey","fallbackValue","listenForMediaQueryChanges","IterableDiffers","KeyValueDiffers","Renderer2","ngClassBase","klazz","ngClassXs","ngClassSm","ngClassMd","ngClassLg","ngClassXl","ngClassLtSm","ngClassLtMd","ngClassLtLg","ngClassLtXl","ngClassGtXs","ngClassGtSm","ngClassGtMd","ngClassGtLg","NgStyleKeyValue","key","noQuotes","trim","ngStyleUtils","getType","buildRawList","buildMapFromList","buildMapFromSet","_sanitizer","_differs","_ngStyleInstance","ngStyle","NgStyle","_buildCacheInterceptor","_fallbackToStyle","source","cacheRaw","merge","styles","_buildStyleMap","inputMap","sanitizer","sanitize","SecurityContext","STYLE","ngStyleBase","_getAttributeValue","DomSanitizer","ngStyleXs","ngStyleSm","ngStyleMd","ngStyleLg","ngStyleXl","ngStyleLtSm","ngStyleLtMd","ngStyleLtLg","ngStyleLtXl","ngStyleGtXs","ngStyleGtSm","ngStyleGtMd","ngStyleGtLg","__extends","d","b","__","constructor","extendStatics","create","buildLayoutCSS","validateValue","buildCSS","toLowerCase","split","wrap","inline","LAYOUT_VALUES","find","x","INLINE","validateWrapValue","flex-direction","flex-wrap","dest","sources","_i","arguments","TypeError","sources_1","hasOwnProperty","normalizeQuery","unique","list","seen","item","mqAlias","suffix","applyCssPrefixes","target","j","_validateCalcValue","substring","substr","calc","methodName","Error","what","Array","Set","delimiter","sanitizeValue","it","stringToKeyValue","entry","reduce","keyValuesToMap","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","join","validateSuffixes","mergeByAlias","defaults","custom","merged","result","buildMergedBreakPoints","_custom","orientation","parentService","matchMedia","parentMonitor","isPlatformBrowser","elements","from","querySelectorAll","classRegex_1","RegExp","classList","contains","parentNode","removeChild","setPrototypeOf","__proto__","p","VERSION","Version","KeyOptions","defaultValue","inputKeys","ResponsiveActivation","_options","_mediaMonitor","_onMediaChanges","_subscribers","_registryMap","_buildRegistryMap","_configureChangeObservers","reverse","_activatedInputKey","activatedInputKey","hasKeyValue","_lookupKeyValue","link","subscriptions","_keyInUse","buildChanges","clone","property","mediaMonitor","_onMonitorEvents","_calculateActivatedValue","current","currentKey","newKey","_validateInputKey","inputKey","isMissingKey","activeOverlaps","some","_elementRef","_hasInitialized","previousVal","SimpleChange","fallbackVal","lookupStyle","attribute","lookupAttributeValue","addIfMissing","hasInlineValue","getFlowDirection","applyStyleToElements","element","_applyStyleToElements","prop","onMediaQueryChange","keyOptions","obj","children","buffer","i","hasResponsiveAPI","_baseKey","mqa","_cacheInputRaw","isArray","_cacheInputArray","_cacheInputObject","_cacheInputString","classes","InjectionToken","overlaps","nonOverlaps","mql","_prepareQueryCSS","onMQLEvent","e","run","set","media","mediaQueries","ALL_STYLES","styleEl_1","cssText","appendChild","createTextNode","head","mq","_breakpoints","_matchMedia","_registerBreakpoints","items","overlappings","found","hasAlias","stylesheet","addStyleToElement","clear","getStyleForElement","_serverStylesheet","_applyMultiValueStyleToElement","FALLBACK_STYLE","lookupInlineStyle","getPropertyValue","inlineOnly","getComputedStyle","sort","values","values_1","_announcer","ReplaySubject","_updateWithDirection","layoutXs","layoutSm","layoutMd","layoutLg","layoutXl","layoutGtXs","layoutGtSm","layoutGtMd","layoutGtLg","layoutLtSm","layoutLtMd","layoutLtLg","layoutLtXl","container","_allowStretching","main_axis","cross_axis","bodyDir","body","htmlDir","documentElement","_watchContentChanges","_observer","disconnect","runOutsideAngular","MutationObserver","mutations","validatedChanges","addedNodes","removedNodes","childList","childrenNodes","nodeType","a","orderA","orderB","lastItem","pop","margins","margin-left","margin-right","margin-bottom"],"mappings":"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"}