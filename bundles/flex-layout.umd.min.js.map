{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/api/ext/show-hide.ts","../../src/lib/api/ext/img-src.ts","../../src/lib/media-query/breakpoints/data/break-points.ts","../../src/lib/media-query/breakpoints/data/orientation-break-points.ts","../../src/lib/media-query/observable-media.ts","../../src/lib/utils/breakpoint-tools.ts","../../src/lib/media-query/breakpoints/break-points-provider.ts","../../src/lib/media-query/observable-media-provider.ts","../../src/lib/media-query/media-monitor-provider.ts","../../src/lib/media-query/_module.ts","../../src/lib/module.ts","../../src/lib/api/flexbox/flex.ts","../../src/lib/api/flexbox/flex-align.ts","../../src/lib/api/flexbox/flex-fill.ts","../../src/lib/api/flexbox/flex-offset.ts","../../src/lib/api/flexbox/flex-order.ts","../../src/lib/api/core/renderer-adapter.ts","../../src/lib/api/ext/class.ts","../../src/lib/utils/style-transforms.ts","../../src/lib/api/ext/style.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/utils/layout-validator.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/utils/style-utils.ts","../../src/lib/utils/object-extend.ts","../../src/lib/media-query/match-media.ts","../../src/lib/utils/add-alias.ts","../../src/lib/utils/basis-validator.ts","../../src/lib/version.ts","../../src/lib/api/core/responsive-activation.ts","../../src/lib/api/core/base.ts","../../src/lib/api/core/base-adapter.ts","../../src/lib/media-query/breakpoints/break-points-token.ts","../../src/lib/media-query/breakpoints/break-point-registry.ts","../../src/lib/media-query/media-change.ts","../../src/lib/media-query/media-monitor.ts","../../src/lib/api/flexbox/layout.ts","../../src/lib/api/flexbox/layout-align.ts","../../src/lib/api/flexbox/layout-gap.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  Self,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LayoutDirective} from '../flexbox/layout';\n\nconst FALSY = ['false', false, 0];\n\n/**\n * For fxHide selectors, we invert the 'value'\n * and assign to the equivalent fxShow selector cache\n *  - When 'hide' === '' === true, do NOT show the element\n *  - When 'hide' === false or 0... we WILL show the element\n */\nexport function negativeOf(hide: any) {\n  return (hide === '') ? false :\n         ((hide === 'false') || (hide === 0)) ? true : !hide;\n}\n\n/**\n * 'show' Layout API directive\n *\n */\n@Directive({\n  selector: `\n  [fxShow],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`\n})\nexport class ShowHideDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShow')       set show(val) {  this._cacheInput('show', val);  }\n  @Input('fxShow.xs')    set showXs(val) {this._cacheInput('showXs', val);}\n  @Input('fxShow.sm')    set showSm(val) {this._cacheInput('showSm', val); };\n  @Input('fxShow.md')    set showMd(val) {this._cacheInput('showMd', val); };\n  @Input('fxShow.lg')    set showLg(val) {this._cacheInput('showLg', val); };\n  @Input('fxShow.xl')    set showXl(val) {this._cacheInput('showXl', val); };\n\n  @Input('fxShow.lt-sm') set showLtSm(val) { this._cacheInput('showLtSm', val); };\n  @Input('fxShow.lt-md') set showLtMd(val) { this._cacheInput('showLtMd', val); };\n  @Input('fxShow.lt-lg') set showLtLg(val) { this._cacheInput('showLtLg', val); };\n  @Input('fxShow.lt-xl') set showLtXl(val) { this._cacheInput('showLtXl', val); };\n\n  @Input('fxShow.gt-xs') set showGtXs(val) {this._cacheInput('showGtXs', val); };\n  @Input('fxShow.gt-sm') set showGtSm(val) {this._cacheInput('showGtSm', val); };\n  @Input('fxShow.gt-md') set showGtMd(val) {this._cacheInput('showGtMd', val); };\n  @Input('fxShow.gt-lg') set showGtLg(val) {this._cacheInput('showGtLg', val); };\n\n  @Input('fxHide')       set hide(val) {this._cacheInput('show', negativeOf(val));}\n  @Input('fxHide.xs')    set hideXs(val) {this._cacheInput('showXs', negativeOf(val));}\n  @Input('fxHide.sm')    set hideSm(val) {this._cacheInput('showSm', negativeOf(val)); };\n  @Input('fxHide.md')    set hideMd(val) {this._cacheInput('showMd', negativeOf(val)); };\n  @Input('fxHide.lg')    set hideLg(val) {this._cacheInput('showLg', negativeOf(val)); };\n  @Input('fxHide.xl')    set hideXl(val) {this._cacheInput('showXl', negativeOf(val)); };\n\n  @Input('fxHide.lt-sm') set hideLtSm(val) { this._cacheInput('showLtSm', negativeOf(val)); };\n  @Input('fxHide.lt-md') set hideLtMd(val) { this._cacheInput('showLtMd', negativeOf(val)); };\n  @Input('fxHide.lt-lg') set hideLtLg(val) { this._cacheInput('showLtLg', negativeOf(val)); };\n  @Input('fxHide.lt-xl') set hideLtXl(val) { this._cacheInput('showLtXl', negativeOf(val)); };\n\n  @Input('fxHide.gt-xs') set hideGtXs(val) {this._cacheInput('showGtXs', negativeOf(val)); };\n  @Input('fxHide.gt-sm') set hideGtSm(val) {this._cacheInput('showGtSm', negativeOf(val)); };\n  @Input('fxHide.gt-md') set hideGtMd(val) {this._cacheInput('showGtMd', negativeOf(val)); };\n  @Input('fxHide.gt-lg') set hideGtLg(val) {this._cacheInput('showGtLg', negativeOf(val)); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n              @Optional() @Self() protected _layout: LayoutDirective,\n              protected elRef: ElementRef,\n              protected renderer: Renderer2,\n              @Inject(PLATFORM_ID) protected platformId: Object) {\n\n    super(monitor, elRef, renderer, platformId);\n\n    if (_layout) {\n      /**\n       * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.\n       * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS\n       */\n      this._layoutWatcher = _layout.layout$.subscribe(() => this._updateWithValue());\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected _getDisplayStyle(): string {\n    return this._layout ? 'flex' : super._getDisplayStyle();\n  }\n\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.hasInitialized && (changes['show'] != null || this._mqActivation)) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    let value = this._getDefaultVal('show', true);\n    // Build _mqActivation controller\n    this._listenForMediaQueryChanges('show', value, (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected _updateWithValue(value?: string|number|boolean) {\n    value = value || this._getDefaultVal('show', true);\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    let shouldShow = this._validateTruthy(value);\n    this._applyStyleToElement(this._buildCSS(shouldShow));\n  }\n\n\n  /** Build the CSS that should be assigned to the element instance */\n  protected _buildCSS(show) {\n    return {'display': show ? this._display : 'none'};\n  }\n\n  /**  Validate the to be not FALSY */\n  _validateTruthy(show) {\n    return (FALSY.indexOf(show) == -1);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  Renderer2,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({\n  selector: `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`\n})\nexport class ImgSrcDirective extends BaseFxDirective implements OnInit, OnChanges {\n\n  /* tslint:disable */\n  @Input('src')        set srcBase(val) { this.cacheDefaultSrc(val);           }\n\n  @Input('src.xs')     set srcXs(val)   { this._cacheInput('srcXs', val);  }\n  @Input('src.sm')     set srcSm(val)   { this._cacheInput('srcSm', val);  }\n  @Input('src.md')     set srcMd(val)   { this._cacheInput('srcMd', val);  }\n  @Input('src.lg')     set srcLg(val)   { this._cacheInput('srcLg', val);  }\n  @Input('src.xl')     set srcXl(val)   { this._cacheInput('srcXl', val);  }\n\n  @Input('src.lt-sm')  set srcLtSm(val) { this._cacheInput('srcLtSm', val);  }\n  @Input('src.lt-md')  set srcLtMd(val) { this._cacheInput('srcLtMd', val);  }\n  @Input('src.lt-lg')  set srcLtLg(val) { this._cacheInput('srcLtLg', val);  }\n  @Input('src.lt-xl')  set srcLtXl(val) { this._cacheInput('srcLtXl', val);  }\n\n  @Input('src.gt-xs')  set srcGtXs(val) { this._cacheInput('srcGtXs', val);  }\n  @Input('src.gt-sm')  set srcGtSm(val) { this._cacheInput('srcGtSm', val);  }\n  @Input('src.gt-md')  set srcGtMd(val) { this._cacheInput('srcGtMd', val);  }\n  @Input('src.gt-lg')  set srcGtLg(val) { this._cacheInput('srcGtLg', val);  }\n  /* tslint:enable */\n\n  constructor(elRef: ElementRef,\n              renderer: Renderer2,\n              monitor: MediaMonitor,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(monitor, elRef, renderer, platformId);\n    this._cacheInput('src', elRef.nativeElement.getAttribute('src') || '');\n  }\n\n  /**\n   * Listen for responsive changes to update the img.src attribute\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (this.hasResponsiveKeys) {\n      // Listen for responsive changes\n      this._listenForMediaQueryChanges('src', this.defaultSrc, () => {\n        this._updateSrcFor();\n      });\n    }\n    this._updateSrcFor();\n  }\n\n  /**\n   * Update the 'src' property of the host <img> element\n   */\n  ngOnChanges() {\n    if (this.hasInitialized) {\n      this._updateSrcFor();\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected _updateSrcFor() {\n    if (this.hasResponsiveKeys) {\n      let url = this.activatedValue || this.defaultSrc;\n      this._renderer.setAttribute(this.nativeElement, 'src', String(url));\n    }\n  }\n\n  /**\n   * Cache initial value of 'src', this will be used as fallback when breakpoint\n   * activations change.\n   * NOTE: The default 'src' property is not bound using @Input(), so perform\n   * a post-ngOnInit() lookup of the default src value (if any).\n   */\n  protected cacheDefaultSrc(value?: string) {\n    this._cacheInput('src', value || '');\n  }\n\n  /**\n   * Empty values are maintained, undefined values are exposed as ''\n   */\n  protected get defaultSrc(): string {\n    return this._queryInput('src') || '';\n  }\n\n  /**\n   * Does the <img> have 1 or more src.<xxx> responsive inputs\n   * defined... these will be mapped to activated breakpoints.\n   */\n  protected get hasResponsiveKeys() {\n    return Object.keys(this._inputMap).length > 1;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(min-width: 0px) and (max-width: 599px)'\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)'\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)'\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)'\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)'\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)'\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)'\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)'\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)'\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)'\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1920px)'\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)'\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientations: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientations: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientations: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientations: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientations: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientations: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\nimport {Observable, Subscribable} from 'rxjs/Observable';\n\nimport {map} from 'rxjs/operators/map';\nimport {filter} from 'rxjs/operators/filter';\n\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {MediaChange} from './media-change';\nimport {MatchMedia} from './match-media';\nimport {mergeAlias} from './../utils/add-alias';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import {filter} from 'rxjs/operators/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .pipe(\n *          filter((change:MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable()\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias): boolean {\n    let query = this._toMediaQuery(alias);\n    return this.mediaWatcher.isActive(query);\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(next?: (value: MediaChange) => void,\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    return this.observable$.subscribe(next, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    let queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const self = this;\n    const media$ = this.mediaWatcher.observe();\n    const activationsOnly = (change: MediaChange) => {\n      return change.matches === true;\n    };\n    const addAliasInformation = (change: MediaChange) => {\n      return mergeAlias(change, this._findByQuery(change.mediaQuery));\n    };\n    const excludeOverlaps = (change: MediaChange) => {\n      let bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(self.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return media$.pipe(\n      filter(activationsOnly),\n      filter(excludeOverlaps),\n      map(addAliasInformation)\n    );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query) {\n    let bp: BreakPoint | null = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private observable$: Observable<MediaChange>;\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../media-query/breakpoints/break-point';\nimport {extendObject} from './object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix || bp.suffix === '') {\n      bp.suffix = camelCase(bp.alias);          // create Suffix value based on alias\n      bp.overlapping = bp.overlapping || false; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const merged = defaults.map((bp) => extendObject({}, bp));\n  const findByAlias = (alias) => merged.reduce((result, bp) => {\n    return result || (( bp.alias === alias) ? bp : null);\n  }, null);\n\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    let target = findByAlias(bp.alias);\n    if (target) {\n      extendObject(target, bp);\n    } else {\n      merged.push(bp);\n    }\n  });\n\n  return validateSuffixes(merged);\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  InjectionToken,    // tslint:disable-line:no-unused-variable\n} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {DEFAULT_BREAKPOINTS} from './data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from './data/orientation-break-points';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {mergeByAlias, validateSuffixes} from '../../utils/breakpoint-tools';\n\n\n/**\n * Options to identify which breakpoint types to include as part of\n * a BreakPoint provider\n */\nexport interface BreakPointProviderOptions {\n  /**\n   * include pre-configured, internal default breakpoints.\n   * @default 'true'\n   */\n  defaults ?: boolean;\n  /**\n   * include pre-configured, internal orientations breakpoints.\n   * @default 'false'\n   */\n  orientations ?: boolean;\n}\n\n/**\n * Add new custom items to the default list or override existing default with custom overrides\n */\nexport function buildMergedBreakPoints(_custom?: BreakPoint[],\n                                       options?: BreakPointProviderOptions) {\n  options = extendObject({}, {\n        defaults: true,       // exclude pre-configured, internal default breakpoints\n        orientation: false      // exclude pre-configured, internal orientations breakpoints\n  }, options || {});\n\n  return () => {\n    // Order so the defaults are loaded last; so ObservableMedia will report these last!\n    let defaults = (options && options.orientations) ?\n      ORIENTATION_BREAKPOINTS.concat(DEFAULT_BREAKPOINTS) : DEFAULT_BREAKPOINTS;\n\n    return (options && options.defaults) ?\n      mergeByAlias(defaults, _custom || []) : mergeByAlias(_custom || []);\n  };\n}\n\n/**\n *  Ensure that only a single global BreakPoint list is instantiated...\n */\nexport function DEFAULT_BREAKPOINTS_PROVIDER_FACTORY() {\n  return validateSuffixes(DEFAULT_BREAKPOINTS);\n}\n/**\n * Default Provider that does not support external customization nor provide\n * the extra extended breakpoints:   \"handset\", \"tablet\", and \"web\"\n *\n *  NOTE: !! breakpoints are considered to have unique 'alias' properties,\n *        custom breakpoints matching existing breakpoints will override the properties\n *        of the existing (and not be added as an extra breakpoint entry).\n *        [xs, gt-xs, sm, gt-sm, md, gt-md, lg, gt-lg, xl]\n */\nexport const DEFAULT_BREAKPOINTS_PROVIDER = { // tslint:disable-line:variable-name\n  provide: BREAKPOINTS,\n  useFactory: DEFAULT_BREAKPOINTS_PROVIDER_FACTORY\n};\n/**\n * Use with FlexLayoutModule.CUSTOM_BREAKPOINTS_PROVIDER_FACTORY!\n */\nexport function CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(_custom?: BreakPoint[],\n                                                    options?: BreakPointProviderOptions) {\n  return {\n    provide: BREAKPOINTS,\n    useFactory: buildMergedBreakPoints(_custom, options)\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Optional,\n  SkipSelf\n} from '@angular/core';\n\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {MatchMedia} from './match-media';\nimport {ObservableMedia, MediaService} from './observable-media';\n\n/**\n * Ensure a single global ObservableMedia service provider\n */\nexport function OBSERVABLE_MEDIA_PROVIDER_FACTORY(parentService: ObservableMedia,\n                                                  matchMedia: MatchMedia,\n                                                  breakpoints: BreakPointRegistry) {\n  return parentService || new MediaService(breakpoints, matchMedia);\n}\n/**\n *  Provider to return global service for observable service for all MediaQuery activations\n */\nexport const OBSERVABLE_MEDIA_PROVIDER = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  deps: [\n    [ new Optional(), new SkipSelf(), ObservableMedia ],\n    MatchMedia,\n    BreakPointRegistry\n  ],\n  useFactory: OBSERVABLE_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor';\nimport {MatchMedia} from './match-media';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\n/**\n * Ensure a single global service provider\n */\nexport function MEDIA_MONITOR_PROVIDER_FACTORY(parentMonitor: MediaMonitor,\n                                               breakpoints: BreakPointRegistry,\n                                               matchMedia: MatchMedia) {\n  return parentMonitor || new MediaMonitor(breakpoints, matchMedia);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const MEDIA_MONITOR_PROVIDER = {\n  provide : MediaMonitor,\n  deps : [\n    [ new Optional(), new SkipSelf(), MediaMonitor ],\n    BreakPointRegistry,\n    MatchMedia,\n  ],\n  useFactory : MEDIA_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {MatchMedia} from './match-media';\nimport {MediaMonitor} from './media-monitor';\nimport {OBSERVABLE_MEDIA_PROVIDER} from './observable-media-provider';\nimport {DEFAULT_BREAKPOINTS_PROVIDER} from './breakpoints/break-points-provider';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [\n    DEFAULT_BREAKPOINTS_PROVIDER,  // Supports developer overrides of list of known breakpoints\n    BreakPointRegistry,      // Registry of known/used BreakPoint(s)\n    MatchMedia,              // Low-level service to publish observables w/ window.matchMedia()\n    MediaMonitor,            // MediaQuery monitor service observes all known breakpoints\n    OBSERVABLE_MEDIA_PROVIDER  // easy subscription injectable `media$` matchMedia observable\n  ]\n})\nexport class MediaQueriesModule {\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {MediaQueriesModule} from './media-query/_module';\n\nimport {BreakPoint} from './media-query/breakpoints/break-point';\nimport {\n  BreakPointProviderOptions,\n  DEFAULT_BREAKPOINTS_PROVIDER,\n  CUSTOM_BREAKPOINTS_PROVIDER_FACTORY\n} from './media-query/breakpoints/break-points-provider';\nimport {MEDIA_MONITOR_PROVIDER} from './media-query/media-monitor-provider';\nimport {OBSERVABLE_MEDIA_PROVIDER} from './media-query/observable-media-provider';\n\nimport {FlexDirective} from './api/flexbox/flex';\nimport {LayoutDirective} from './api/flexbox/layout';\nimport {FlexAlignDirective} from './api/flexbox/flex-align';\nimport {FlexFillDirective} from './api/flexbox/flex-fill';\nimport {FlexOffsetDirective} from './api/flexbox/flex-offset';\nimport {FlexOrderDirective} from './api/flexbox/flex-order';\nimport {LayoutAlignDirective} from './api/flexbox/layout-align';\nimport {LayoutGapDirective} from './api/flexbox/layout-gap';\n\nimport {ShowHideDirective} from './api/ext/show-hide';\nimport {ClassDirective} from './api/ext/class';\nimport {StyleDirective} from './api/ext/style';\nimport {ImgSrcDirective} from './api/ext/img-src';\n\n/**\n * Since the equivalent results are easily achieved with a css class attached to each\n * layout child, these have been deprecated and removed from the API.\n *\n *  import {LayoutPaddingDirective} from './api/flexbox/layout-padding';\n *  import {LayoutMarginDirective} from './api/flexbox/layout-margin';\n */\n\nconst ALL_DIRECTIVES = [\n  LayoutDirective,\n  LayoutGapDirective,\n  LayoutAlignDirective,\n  FlexDirective,\n  FlexOrderDirective,\n  FlexOffsetDirective,\n  FlexFillDirective,\n  FlexAlignDirective,\n  ShowHideDirective,\n  ClassDirective,\n  StyleDirective,\n  ImgSrcDirective\n];\n\n/**\n *\n */\n@NgModule({\n  imports: [MediaQueriesModule],\n  exports: [MediaQueriesModule, ...ALL_DIRECTIVES],\n  declarations: [...ALL_DIRECTIVES],\n  providers: [\n    MEDIA_MONITOR_PROVIDER,\n    DEFAULT_BREAKPOINTS_PROVIDER,   // Extend defaults with internal custom breakpoints\n    OBSERVABLE_MEDIA_PROVIDER\n  ]\n})\nexport class FlexLayoutModule {\n  /**\n   * External uses can easily add custom breakpoints AND include internal orientations\n   * breakpoints; which are not available by default.\n   *\n   * !! Selector aliases are not auto-configured. Developers must subclass\n   * the API directives to support extra selectors for the orientations breakpoints !!\n   */\n  static provideBreakPoints(breakpoints: BreakPoint[],\n                            options ?: BreakPointProviderOptions): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: [\n        CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(breakpoints, options || {orientations: false})\n      ]\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {extendObject} from '../../utils/object-extend';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {LayoutDirective} from './layout';\nimport {validateBasis} from '../../utils/basis-validator';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\n\n/** Built-in aliases for different flex-basis values. */\nexport type FlexBasisAlias = 'grow' | 'initial' | 'auto' | 'none' | 'nogrow' | 'noshrink';\n\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive({selector: `\n  [fxFlex],\n  [fxFlex.xs], [fxFlex.sm], [fxFlex.md], [fxFlex.lg], [fxFlex.xl],\n  [fxFlex.lt-sm], [fxFlex.lt-md], [fxFlex.lt-lg], [fxFlex.lt-xl],\n  [fxFlex.gt-xs], [fxFlex.gt-sm], [fxFlex.gt-md], [fxFlex.gt-lg],\n`\n})\nexport class FlexDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /** The flex-direction of this element's flex container. Defaults to 'row'. */\n  protected _layout: string;\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShrink')     set shrink(val)    { this._cacheInput('shrink', val); };\n  @Input('fxGrow')       set grow(val)      { this._cacheInput('grow', val); };\n\n  @Input('fxFlex')       set flex(val)      { this._cacheInput('flex', val); };\n  @Input('fxFlex.xs')    set flexXs(val)    { this._cacheInput('flexXs', val); };\n  @Input('fxFlex.sm')    set flexSm(val)    { this._cacheInput('flexSm', val); };\n  @Input('fxFlex.md')    set flexMd(val)    { this._cacheInput('flexMd', val); };\n  @Input('fxFlex.lg')    set flexLg(val)    { this._cacheInput('flexLg', val); };\n  @Input('fxFlex.xl')    set flexXl(val)    { this._cacheInput('flexXl', val); };\n\n  @Input('fxFlex.gt-xs') set flexGtXs(val)  { this._cacheInput('flexGtXs', val); };\n  @Input('fxFlex.gt-sm') set flexGtSm(val)  { this._cacheInput('flexGtSm', val); };\n  @Input('fxFlex.gt-md') set flexGtMd(val)  { this._cacheInput('flexGtMd', val); };\n  @Input('fxFlex.gt-lg') set flexGtLg(val)  { this._cacheInput('flexGtLg', val); };\n\n  @Input('fxFlex.lt-sm') set flexLtSm(val) { this._cacheInput('flexLtSm', val); };\n  @Input('fxFlex.lt-md') set flexLtMd(val) { this._cacheInput('flexLtMd', val); };\n  @Input('fxFlex.lt-lg') set flexLtLg(val) { this._cacheInput('flexLtLg', val); };\n  @Input('fxFlex.lt-xl') set flexLtXl(val) { this._cacheInput('flexLtXl', val); };\n  /* tslint:enable */\n\n  // Note: Explicitly @SkipSelf on LayoutDirective because we are looking\n  //       for the parent flex container for this flex item.\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer2,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              @Inject(PLATFORM_ID) platformId: Object) {\n\n    super(monitor, elRef, renderer, platformId);\n\n    this._cacheInput('flex', '');\n    this._cacheInput('shrink', 1);\n    this._cacheInput('grow', 1);\n\n    if (_container) {\n      // If this flex item is inside of a flex container marked with\n      // Subscribe to layout immediate parent direction changes\n      this._layoutWatcher = _container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['flex'] != null || this._mqActivation) {\n      this._updateStyle();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('flex', '', (changes: MediaChange) => {\n      this._updateStyle(changes.value);\n    });\n    this._updateStyle();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateStyle();\n  }\n\n  protected _updateStyle(value?: string|number) {\n    let flexBasis = value || this._queryInput('flex') || '';\n    if (this._mqActivation) {\n      flexBasis = this._mqActivation.activatedInput;\n    }\n\n    let basis = String(flexBasis).replace(';', '');\n    let parts = validateBasis(basis, this._queryInput('grow'), this._queryInput('shrink'));\n    this._applyStyleToElement(this._validateValue.apply(this, parts));\n  }\n\n  /**\n   * Validate the value to be one of the acceptable value options\n   * Use default fallback of 'row'\n   */\n  protected _validateValue(grow: number|string,\n                           shrink: number|string,\n                           basis: string|number|FlexBasisAlias) {\n      // The flex-direction of this element's flex container. Defaults to 'row'.\n      let layout = this._getFlowDirection(this.parentElement, true);\n      let direction = (layout.indexOf('column') > -1) ? 'column' : 'row';\n      let css, isValue;\n\n      grow = (grow == '0') ? 0 : grow;\n      shrink = (shrink == '0') ? 0 : shrink;\n\n      // flex-basis allows you to specify the initial/starting main-axis size of the element,\n      // before anything else is computed. It can either be a percentage or an absolute value.\n      // It is, however, not the breaking point for flex-grow/shrink properties\n      //\n      // flex-grow can be seen as this:\n      //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n      //   1: (Default value). Stretch; will be the same size to all other flex items on\n      //       the same row since they have a default value of 1.\n      //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n      //      with 'flex-grow: 1' on the same row.\n\n      // Use `null` to clear existing styles.\n      let clearStyles = {\n        'max-width': null,\n        'max-height': null,\n        'min-width': null,\n        'min-height': null\n      };\n      switch (basis || '') {\n        case '':\n          css = extendObject(clearStyles, {'flex': `${grow} ${shrink} 0.000000001px`});\n          break;\n        case 'initial':   // default\n        case 'nogrow':\n          grow = 0;\n          css = extendObject(clearStyles, {'flex': '0 1 auto'});\n          break;\n        case 'grow':\n          css = extendObject(clearStyles, {'flex': '1 1 100%'});\n          break;\n        case 'noshrink':\n          shrink = 0;\n          css = extendObject(clearStyles, {'flex': '1 0 auto'});\n          break;\n        case 'auto':\n          css = extendObject(clearStyles, {'flex': `${grow} ${shrink} auto`});\n          break;\n        case 'none':\n          grow = 0;\n          shrink = 0;\n          css = extendObject(clearStyles, {'flex': '0 0 auto'});\n          break;\n        default:\n          let hasCalc = String(basis).indexOf('calc') > -1;\n          let isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n\n          isValue = hasCalc ||\n              String(basis).indexOf('px') > -1 ||\n              String(basis).indexOf('em') > -1 ||\n              String(basis).indexOf('vw') > -1 ||\n              String(basis).indexOf('vh') > -1;\n\n          // Defaults to percentage sizing unless `px` is explicitly set\n          if (!isValue && !isPercent && !isNaN(basis as any)) {\n            basis = basis + '%';\n          }\n\n          if (basis === '0px') {\n            basis = '0%';\n          }\n\n          css = extendObject(clearStyles, { // fix issue #5345\n            'flex-grow' : `${grow}`,\n            'flex-shrink' : `${shrink}`,\n            'flex-basis' : isValue ? `${basis}` : '100%'\n          });\n          break;\n      }\n\n      let max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n      let min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n      let usingCalc = (String(basis).indexOf('calc') > -1) || (basis == 'auto');\n      let isPx = String(basis).indexOf('px') > -1 || usingCalc;\n\n\n      // make box inflexible when shrink and grow are both zero\n      // should not set a min when the grow is zero\n      // should not set a max when the shrink is zero\n      let isFixed = !grow && !shrink;\n      css[min] = (basis == '0%') ? 0 : isFixed || (isPx && grow) ? basis : null;\n      css[max] = (basis == '0%') ? 0 : isFixed || (!usingCalc && shrink) ? basis : null;\n\n    return extendObject(css, {'box-sizing': 'border-box'});\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n@Directive({\n  selector: `\n  [fxFlexAlign],\n  [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md], [fxFlexAlign.lg], [fxFlexAlign.xl],\n  [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md], [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl],\n  [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm], [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`\n})\nexport class FlexAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexAlign')       set align(val)  { this._cacheInput('align', val);  };\n  @Input('fxFlexAlign.xs')    set alignXs(val)  { this._cacheInput('alignXs', val);  };\n  @Input('fxFlexAlign.sm')    set alignSm(val)  { this._cacheInput('alignSm', val); };\n  @Input('fxFlexAlign.md')    set alignMd(val)  { this._cacheInput('alignMd', val); };\n  @Input('fxFlexAlign.lg')    set alignLg(val)  { this._cacheInput('alignLg', val); };\n  @Input('fxFlexAlign.xl')    set alignXl(val)  { this._cacheInput('alignXl', val); };\n\n  @Input('fxFlexAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxFlexAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxFlexAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxFlexAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  @Input('fxFlexAlign.gt-xs') set alignGtXs(val)  { this._cacheInput('alignGtXs', val); };\n  @Input('fxFlexAlign.gt-sm') set alignGtSm(val)  { this._cacheInput('alignGtSm', val); };\n  @Input('fxFlexAlign.gt-md') set alignGtMd(val)  { this._cacheInput('alignGtMd', val); };\n  @Input('fxFlexAlign.gt-lg') set alignGtLg(val)  { this._cacheInput('alignGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer2,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(monitor, elRef, renderer, platformId);\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('align', 'stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('align') || 'stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(align) {\n    let css = {};\n\n    // Cross-axis\n    switch (align) {\n      case 'start':\n        css['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        css['align-self'] = 'flex-end';\n        break;\n      default:\n        css['align-self'] = align;\n        break;\n    }\n\n    return css;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Renderer2} from '@angular/core';\n\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {BaseFxDirective} from '../core/base';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `\n  [fxFill],\n  [fxFlexFill]\n`})\nexport class FlexFillDirective extends BaseFxDirective {\n  constructor(monitor: MediaMonitor,\n              public elRef: ElementRef,\n              public renderer: Renderer2,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(monitor, elRef, renderer, platformId);\n    this._applyStyleToElement(FLEX_FILL_CSS);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  SkipSelf,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LayoutDirective} from './layout';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive({selector: `\n  [fxFlexOffset],\n  [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md], [fxFlexOffset.lg], [fxFlexOffset.xl],\n  [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md], [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl],\n  [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm], [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`})\nexport class FlexOffsetDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOffset')       set offset(val)     { this._cacheInput('offset', val); }\n  @Input('fxFlexOffset.xs')    set offsetXs(val)   { this._cacheInput('offsetXs', val); }\n  @Input('fxFlexOffset.sm')    set offsetSm(val)   { this._cacheInput('offsetSm', val); };\n  @Input('fxFlexOffset.md')    set offsetMd(val)   { this._cacheInput('offsetMd', val); };\n  @Input('fxFlexOffset.lg')    set offsetLg(val)   { this._cacheInput('offsetLg', val); };\n  @Input('fxFlexOffset.xl')    set offsetXl(val)   { this._cacheInput('offsetXl', val); };\n\n  @Input('fxFlexOffset.lt-sm') set offsetLtSm(val) { this._cacheInput('offsetLtSm', val); };\n  @Input('fxFlexOffset.lt-md') set offsetLtMd(val) { this._cacheInput('offsetLtMd', val); };\n  @Input('fxFlexOffset.lt-lg') set offsetLtLg(val) { this._cacheInput('offsetLtLg', val); };\n  @Input('fxFlexOffset.lt-xl') set offsetLtXl(val) { this._cacheInput('offsetLtXl', val); };\n\n  @Input('fxFlexOffset.gt-xs') set offsetGtXs(val) { this._cacheInput('offsetGtXs', val); };\n  @Input('fxFlexOffset.gt-sm') set offsetGtSm(val) { this._cacheInput('offsetGtSm', val); };\n  @Input('fxFlexOffset.gt-md') set offsetGtMd(val) { this._cacheInput('offsetGtMd', val); };\n  @Input('fxFlexOffset.gt-lg') set offsetGtLg(val) { this._cacheInput('offsetGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer2,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(monitor, elRef, renderer, platformId);\n\n\n    this.watchParentFlow();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['offset'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * Cleanup\n   */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('offset', 0 , (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** The flex-direction of this element's host container. Defaults to 'row'. */\n  protected _layout = 'row';\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /**\n   * If parent flow-direction changes, then update the margin property\n   * used to offset\n   */\n  protected watchParentFlow() {\n    if (this._container) {\n      // Subscribe to layout immediate parent direction changes (if any)\n      this._layoutWatcher = this._container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateWithValue();\n  }\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('offset') || 0;\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(offset) {\n    let isPercent = String(offset).indexOf('%') > -1;\n    let isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(offset)) {\n      offset = offset + '%';\n    }\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    let layout = this._getFlowDirection(this.parentElement, true);\n    return isFlowHorizontal(layout) ? {'margin-left': `${offset}`} : {'margin-top': `${offset}`};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n@Directive({selector: `\n  [fxFlexOrder],\n  [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md], [fxFlexOrder.lg], [fxFlexOrder.xl],\n  [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md], [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl],\n  [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm], [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`})\nexport class FlexOrderDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOrder')       set order(val)     { this._cacheInput('order', val); }\n  @Input('fxFlexOrder.xs')    set orderXs(val)   { this._cacheInput('orderXs', val); }\n  @Input('fxFlexOrder.sm')    set orderSm(val)   { this._cacheInput('orderSm', val); };\n  @Input('fxFlexOrder.md')    set orderMd(val)   { this._cacheInput('orderMd', val); };\n  @Input('fxFlexOrder.lg')    set orderLg(val)   { this._cacheInput('orderLg', val); };\n  @Input('fxFlexOrder.xl')    set orderXl(val)   { this._cacheInput('orderXl', val); };\n\n  @Input('fxFlexOrder.gt-xs') set orderGtXs(val) { this._cacheInput('orderGtXs', val); };\n  @Input('fxFlexOrder.gt-sm') set orderGtSm(val) { this._cacheInput('orderGtSm', val); };\n  @Input('fxFlexOrder.gt-md') set orderGtMd(val) { this._cacheInput('orderGtMd', val); };\n  @Input('fxFlexOrder.gt-lg') set orderGtLg(val) { this._cacheInput('orderGtLg', val); };\n\n  @Input('fxFlexOrder.lt-sm') set orderLtSm(val) { this._cacheInput('orderLtSm', val); };\n  @Input('fxFlexOrder.lt-md') set orderLtMd(val) { this._cacheInput('orderLtMd', val); };\n  @Input('fxFlexOrder.lt-lg') set orderLtLg(val) { this._cacheInput('orderLtLg', val); };\n  @Input('fxFlexOrder.lt-xl') set orderLtXl(val) { this._cacheInput('orderLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer2,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(monitor, elRef, renderer, platformId);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['order'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('order', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('order') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n\n  protected _buildCSS(value) {\n    value = parseInt(value, 10);\n    return {order: isNaN(value) ? 0 : value};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Renderer2, RendererStyleFlags2} from '@angular/core';\n\n/**\n * Adapts the 'deprecated' Angular Renderer v1 API to use the new Renderer2 instance\n * This is required for older versions of NgStyle and NgClass that require\n * the v1 API (but should use the v2 instances)\n */\nexport class RendererAdapter {\n  constructor(private _renderer: Renderer2) { }\n\n  setElementClass(el: any, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this._renderer.addClass(el, className);\n    } else {\n      this._renderer.removeClass(el, className);\n    }\n  }\n\n  setElementStyle(el: any, styleName: string, styleValue: string): void {\n    if (styleValue) {\n      this._renderer.setStyle(el, styleName, styleValue);\n    } else {\n      this._renderer.removeStyle(el, styleName);\n    }\n  }\n\n  // new API is forwarded\n  addClass(el: any, name: string): void {\n    this._renderer.addClass(el, name);\n  }\n\n  removeClass(el: any, name: string): void {\n    this._renderer.removeClass(el, name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void {\n    this._renderer.setStyle(el, style, value, flags);\n  }\n\n  removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void {\n    this._renderer.removeStyle(el, style, flags);\n  }\n\n  // ******************************************************************\n  // !! Renderer is an abstract class with abstract methods\n  //\n  // These are implementation of those methods... and do NOTHING since\n  // we only use setElementStyle() and setElementClass()\n  // ******************************************************************\n\n  /* tslint:disable */\n  animate()             : any  { throw _notImplemented('animate'); }\n  attachViewAfter()     : void { throw _notImplemented('attachViewAfter'); }\n  detachView()          : void { throw _notImplemented('detachView'); }\n  destroyView()         : void { throw _notImplemented('destroyView'); }\n  createElement()       : any  { throw _notImplemented('createElement'); }\n  createViewRoot()      : any  { throw _notImplemented('createViewRoot'); }\n  createTemplateAnchor(): any  { throw _notImplemented('createTemplateAnchor'); }\n  createText()          : any  { throw _notImplemented('createText'); }\n  invokeElementMethod() : void { throw _notImplemented('invokeElementMethod'); }\n  projectNodes()        : void { throw _notImplemented('projectNodes'); }\n  selectRootElement()   : any  { throw _notImplemented('selectRootElement'); }\n  setBindingDebugInfo() : void { throw _notImplemented('setBindingDebugInfo'); }\n  setElementProperty()  : void { throw _notImplemented('setElementProperty'); }\n  setElementAttribute() : void { throw _notImplemented('setElementAttribute'); }\n  setText()             : void { throw _notImplemented('setText'); }\n  listen()              : Function { throw _notImplemented('listen');  }\n  listenGlobal()        : Function { throw _notImplemented('listenGlobal');  }\n  /* tslint:enable */\n}\n\nfunction _notImplemented(methodName: string) {\n  return new Error(`The method RendererAdapter::${methodName}() has not been implemented`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  Self,\n  OnInit,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\n\nimport {BaseFxDirective} from '../core/base';\nimport {BaseFxDirectiveAdapter} from '../core/base-adapter';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {RendererAdapter} from '../core/renderer-adapter';\n\n/** NgClass allowed inputs **/\nexport type NgClassType = string | string[] | Set<string> | {[klass: string]: any};\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n *\n */\n@Directive({\n  selector: `\n    [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n    [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n    [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n  `\n})\nexport class ClassDirective extends BaseFxDirective\n    implements DoCheck, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Intercept ngClass assignments so we cache the default classes\n   * which are merged with activated styles or used as fallbacks.\n   * Note: Base ngClass values are applied during ngDoCheck()\n   */\n  @Input('ngClass')\n  set ngClassBase(val: NgClassType) {\n    const key = 'ngClass';\n    this._base.cacheInput(key, val, true);\n    this._ngClassInstance.ngClass = this._base.queryInput(key);\n  }\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klazz(val: string) {\n    const key = 'class';\n    this._base.cacheInput(key, val);\n    this._ngClassInstance.klass = val;\n  }\n\n  /* tslint:disable */\n  @Input('ngClass.xs')    set ngClassXs(val:   NgClassType) { this._base.cacheInput('ngClassXs',   val, true); }\n  @Input('ngClass.sm')    set ngClassSm(val:   NgClassType) { this._base.cacheInput('ngClassSm',   val, true); }\n  @Input('ngClass.md')    set ngClassMd(val:   NgClassType) { this._base.cacheInput('ngClassMd',   val, true); }\n  @Input('ngClass.lg')    set ngClassLg(val:   NgClassType) { this._base.cacheInput('ngClassLg',   val, true); }\n  @Input('ngClass.xl')    set ngClassXl(val:   NgClassType) { this._base.cacheInput('ngClassXl',   val, true); }\n\n  @Input('ngClass.lt-sm') set ngClassLtSm(val: NgClassType) { this._base.cacheInput('ngClassLtSm', val, true); }\n  @Input('ngClass.lt-md') set ngClassLtMd(val: NgClassType) { this._base.cacheInput('ngClassLtMd', val, true); }\n  @Input('ngClass.lt-lg') set ngClassLtLg(val: NgClassType) { this._base.cacheInput('ngClassLtLg', val, true); }\n  @Input('ngClass.lt-xl') set ngClassLtXl(val: NgClassType) { this._base.cacheInput('ngClassLtXl', val, true); }\n\n  @Input('ngClass.gt-xs') set ngClassGtXs(val: NgClassType) { this._base.cacheInput('ngClassGtXs', val, true); }\n  @Input('ngClass.gt-sm') set ngClassGtSm(val: NgClassType) { this._base.cacheInput('ngClassGtSm', val, true); }\n  @Input('ngClass.gt-md') set ngClassGtMd(val: NgClassType) { this._base.cacheInput('ngClassGtMd', val, true); }\n  @Input('ngClass.gt-lg') set ngClassGtLg(val: NgClassType) { this._base.cacheInput('ngClassGtLg', val, true); }\n\n  /* tslint:enable */\n  constructor(protected monitor: MediaMonitor,\n              protected _iterableDiffers: IterableDiffers,\n              protected _keyValueDiffers: KeyValueDiffers,\n              protected _ngEl: ElementRef,\n              protected _renderer: Renderer2,\n              @Optional() @Self() private _ngClassInstance: NgClass,\n              @Inject(PLATFORM_ID) protected _platformId: Object) {\n    super(monitor, _ngEl, _renderer, _platformId);\n    this._configureAdapters();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._ngClassInstance.ngClass = this._base.mqActivation.activatedInput || '';\n    }\n  }\n\n  ngOnInit() {\n    this._configureMQListener();\n  }\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this._ngClassInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n    delete this._ngClassInstance;\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n   * Configure adapters (that delegate to an internal ngClass instance) if responsive\n   * keys have been defined.\n   */\n  protected _configureAdapters() {\n    this._base = new BaseFxDirectiveAdapter(\n        'ngClass', this.monitor, this._ngEl, this._renderer, this._platformId\n    );\n    if (!this._ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      let adapter = new RendererAdapter(this._renderer);\n      this._ngClassInstance = new NgClass(\n          this._iterableDiffers, this._keyValueDiffers, this._ngEl, <any> adapter\n      );\n    }\n  }\n\n  /**\n   * Build an mqActivation object that bridges mql change events to onMediaQueryChange handlers\n   * NOTE: We delegate subsequent activity to the NgClass logic\n   *       Identify the activated input value and update the ngClass iterables...\n   *       Use ngDoCheck() to actually apply the values to the element\n   */\n  protected _configureMQListener(baseKey = 'ngClass') {\n    const fallbackValue = this._base.queryInput(baseKey);\n    this._base.listenForMediaQueryChanges(baseKey, fallbackValue, (changes: MediaChange) => {\n      this._ngClassInstance.ngClass = changes.value || '';\n      this._ngClassInstance.ngDoCheck();\n    });\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors and capture mediaQuery changes\n   * Delegate value changes to the internal `_ngClassInstance` for processing\n   */\n  protected _base: BaseFxDirectiveAdapter;   // used for `ngClass.xxx` selectors\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/**\n * NgStyle allowed inputs\n */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\n/**\n * Transform Operators for @angular/flex-layout NgStyle Directive\n */\nexport const ngStyleUtils = {\n  getType,\n  buildRawList,\n  buildMapFromList,\n  buildMapFromSet\n};\n\nfunction getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set ) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/**\n * Convert array of key:value strings to a iterable map object\n */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {});\n}\n\n/**\n * Convert Set<string> or raw Object to an iterable NgStyleMap\n */\nfunction buildMapFromSet(source: any, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list = new Array<string>();\n  if (getType(source) == 'set') {\n    source.forEach(entry => list.push(entry));\n  } else {                                // simple hashmap\n    Object.keys(source).forEach(key => {\n      list.push(`${key}:${source[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/**\n * Convert 'key:value' -> [key, value]\n */\nfunction stringToKeyValue(it: string): NgStyleKeyValue|null {\n  let [key, val] = it.split(':');\n  return val ? new NgStyleKeyValue(key, val) : null;\n}\n\n/**\n * Convert [ [key,value] ] -> { key : value }\n */\nfunction keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  KeyValueDiffers,\n  OnDestroy,\n  OnChanges,\n  Optional,\n  Renderer2,\n  SecurityContext,\n  Self,\n  SimpleChanges,\n  OnInit,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {NgStyle} from '@angular/common';\n\nimport {BaseFxDirective} from '../core/base';\nimport {BaseFxDirectiveAdapter} from '../core/base-adapter';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  ngStyleUtils as _\n} from '../../utils/style-transforms';\nimport {RendererAdapter} from '../core/renderer-adapter';\n\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({\n  selector: `\n    [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n    [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n    [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n  `\n})\nexport class StyleDirective extends BaseFxDirective\n    implements DoCheck, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Intercept ngStyle assignments so we cache the default styles\n   * which are merged with activated styles or used as fallbacks.\n   */\n  @Input('ngStyle')\n  set ngStyleBase(val: NgStyleType) {\n    const key = 'ngStyle';\n    this._base.cacheInput(key, val, true);  // convert val to hashmap\n    this._ngStyleInstance.ngStyle = this._base.queryInput(key);\n  }\n\n  /* tslint:disable */\n  @Input('ngStyle.xs')    set ngStyleXs(val: NgStyleType) { this._base.cacheInput('ngStyleXs', val, true); }\n  @Input('ngStyle.sm')    set ngStyleSm(val: NgStyleType) { this._base.cacheInput('ngStyleSm', val, true); };\n  @Input('ngStyle.md')    set ngStyleMd(val: NgStyleType) { this._base.cacheInput('ngStyleMd', val, true); };\n  @Input('ngStyle.lg')    set ngStyleLg(val: NgStyleType) { this._base.cacheInput('ngStyleLg', val, true); };\n  @Input('ngStyle.xl')    set ngStyleXl(val: NgStyleType) { this._base.cacheInput('ngStyleXl', val, true); };\n\n  @Input('ngStyle.lt-sm') set ngStyleLtSm(val: NgStyleType) { this._base.cacheInput('ngStyleLtSm', val, true); };\n  @Input('ngStyle.lt-md') set ngStyleLtMd(val: NgStyleType) { this._base.cacheInput('ngStyleLtMd', val, true); };\n  @Input('ngStyle.lt-lg') set ngStyleLtLg(val: NgStyleType) { this._base.cacheInput('ngStyleLtLg', val, true); };\n  @Input('ngStyle.lt-xl') set ngStyleLtXl(val: NgStyleType) { this._base.cacheInput('ngStyleLtXl', val, true); };\n\n  @Input('ngStyle.gt-xs') set ngStyleGtXs(val: NgStyleType) { this._base.cacheInput('ngStyleGtXs', val, true); };\n  @Input('ngStyle.gt-sm') set ngStyleGtSm(val: NgStyleType) { this._base.cacheInput('ngStyleGtSm', val, true); } ;\n  @Input('ngStyle.gt-md') set ngStyleGtMd(val: NgStyleType) { this._base.cacheInput('ngStyleGtMd', val, true); };\n  @Input('ngStyle.gt-lg') set ngStyleGtLg(val: NgStyleType) { this._base.cacheInput('ngStyleGtLg', val, true); };\n  /* tslint:enable */\n\n  /**\n   *  Constructor for the ngStyle subclass; which adds selectors and\n   *  a MediaQuery Activation Adapter\n   */\n  constructor(private monitor: MediaMonitor,\n              protected _sanitizer: DomSanitizer,\n              protected _ngEl: ElementRef,\n              protected _renderer: Renderer2,\n              protected _differs: KeyValueDiffers,\n              @Optional() @Self() private _ngStyleInstance: NgStyle,\n              @Inject(PLATFORM_ID) protected _platformId: Object) {\n\n    super(monitor, _ngEl, _renderer, _platformId);\n    this._configureAdapters();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._ngStyleInstance.ngStyle = this._base.mqActivation.activatedInput || '';\n    }\n  }\n\n\n  ngOnInit() {\n    this._configureMQListener();\n  }\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this._ngStyleInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n    delete this._ngStyleInstance;\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n     * Configure adapters (that delegate to an internal ngClass instance) if responsive\n     * keys have been defined.\n     */\n    protected _configureAdapters() {\n        this._base = new BaseFxDirectiveAdapter(\n            'ngStyle', this.monitor, this._ngEl, this._renderer, this._platformId\n        );\n        if ( !this._ngStyleInstance ) {\n          // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n          // defined on the same host element; since the responsive variations may be defined...\n          let adapter = new RendererAdapter(this._renderer);\n          this._ngStyleInstance = new NgStyle(this._differs, this._ngEl, <any> adapter);\n        }\n\n        this._buildCacheInterceptor();\n        this._fallbackToStyle();\n    }\n\n    /**\n     * Build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    protected _configureMQListener(baseKey = 'ngStyle') {\n      const fallbackValue = this._base.queryInput(baseKey);\n      this._base.listenForMediaQueryChanges(baseKey, fallbackValue, (changes: MediaChange) => {\n        this._ngStyleInstance.ngStyle = changes.value || '';\n        this._ngStyleInstance.ngDoCheck();\n      });\n    }\n\n  // ************************************************************************\n  // Private Internal Methods\n  // ************************************************************************\n\n  /**\n   * Build intercept to convert raw strings to ngStyleMap\n   */\n  protected _buildCacheInterceptor() {\n    let cacheInput = this._base.cacheInput.bind(this._base);\n    this._base.cacheInput = (key?: string, source?: any, cacheRaw = false, merge = true) => {\n      let styles = this._buildStyleMap(source);\n      if (merge) {\n        styles = extendObject({}, this._base.inputMap['ngStyle'], styles);\n      }\n      cacheInput(key, styles, cacheRaw);\n    };\n  }\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected _buildStyleMap(styles: NgStyleType) {\n    let sanitizer: NgStyleSanitizer = (val: any) => {\n      // Always safe-guard (aka sanitize) style property values\n      return this._sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    };\n    if (styles) {\n      switch ( _.getType(styles) ) {\n        case 'string':  return _.buildMapFromList(_.buildRawList(styles), sanitizer);\n        case 'array' :  return _.buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return _.buildMapFromSet(styles, sanitizer);\n        default      :  return _.buildMapFromSet(styles, sanitizer);\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * Initial lookup of raw 'class' value (if any)\n   */\n  protected _fallbackToStyle() {\n    if (!this._base.queryInput('ngStyle')) {\n      this.ngStyleBase = this._getAttributeValue('style') || '';\n    }\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the StyleDirective\n   */\n  protected _base: BaseFxDirectiveAdapter;\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Renderer2} from '@angular/core';\nimport {applyCssPrefixes} from './auto-prefixer';\nimport {isPlatformBrowser} from '@angular/common';\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5}).\n */\nexport type StyleDefinition = string | { [property: string]: string | number | null };\n\n\n/**\n * Applies styles given via string pair or object map to the directive element.\n */\nexport function applyStyleToElement(renderer: Renderer2,\n                                    element: any,\n                                    style: StyleDefinition,\n                                    value?: string | number) {\n  let styles = {};\n  if (typeof style === 'string') {\n    styles[style] = value;\n    style = styles;\n  }\n\n  styles = applyCssPrefixes(style);\n  applyMultiValueStyleToElement(styles, element, renderer);\n}\n\n\n/**\n * Applies styles given via string pair or object map to the directive's element.\n */\nexport function applyStyleToElements(renderer: Renderer2,\n                              style: StyleDefinition,\n                              elements: HTMLElement[ ]) {\n  let styles = applyCssPrefixes(style);\n\n  elements.forEach(el => {\n    applyMultiValueStyleToElement(styles, el, renderer);\n  });\n}\n\n/**\n * Applies the styles to the element. The styles object map may contain an array of values.\n * Each value will be added as element style.\n * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones.\n */\nexport function applyMultiValueStyleToElement(styles: {}, element: any, renderer: Renderer2) {\n  Object.keys(styles).sort().forEach(key => {\n    const values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n    values.sort();\n    for (let value of values) {\n      renderer.setStyle(element, key, value);\n    }\n  });\n}\n\n/**\n * Find the DOM element's raw attribute value (if any)\n */\nexport function lookupAttributeValue(element: HTMLElement, attribute: string): string {\n  return element.getAttribute(attribute) || '';\n}\n/**\n * Find the DOM element's inline style value (if any)\n */\nexport function lookupInlineStyle(element: HTMLElement, styleName: string): string {\n  return element.style[styleName] || element.style.getPropertyValue(styleName);\n}\n\n/**\n * Determine the inline or inherited CSS style\n * @TODO(CaerusKaru): platform-server has no implementation for getComputedStyle\n */\nexport function lookupStyle(_platformId: Object,\n                            element: HTMLElement,\n                            styleName: string,\n                            inlineOnly = false): string {\n  let value = '';\n  if (element) {\n    let immediateValue = value = lookupInlineStyle(element, styleName);\n    if (!inlineOnly) {\n      value = immediateValue || (isPlatformBrowser(_platformId) &&\n        getComputedStyle(element).getPropertyValue(styleName)) || '';\n    }\n  }\n\n  // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n  //       in which case getComputedStyle() should determine a valid value.\n  return value ? value.trim() : 'block';\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  Injectable,\n  NgZone,\n  PLATFORM_ID,\n  RendererFactory2,\n  RendererType2,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operators/filter';\n\nimport {MediaChange} from './media-change';\n\n/**\n * EventHandler callback with the mediaQuery [range] activates or deactivates\n */\nexport interface MediaQueryListListener {\n  // Function with Window's MediaQueryList argument\n  (mql: MediaQueryList): void;\n}\n\n/**\n * EventDispatcher for a specific mediaQuery [range]\n */\nexport interface MediaQueryList {\n  readonly matches: boolean;\n  readonly media: string;\n\n  addListener(listener: MediaQueryListListener): void;\n\n  removeListener(listener: MediaQueryListListener): void;\n}\n\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable()\nexport class MatchMedia {\n  protected _registry: Map<string, MediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              protected _rendererFactory: RendererFactory2,\n              @Inject(DOCUMENT) protected _document: any,\n              @Inject(PLATFORM_ID) protected _platformId: Object) {\n    this._registry = new Map<string, MediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    let mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    if (mediaQuery) {\n      this.registerQuery(mediaQuery);\n    }\n\n    return this._observable$.pipe(\n      filter((change: MediaChange) => {\n        return mediaQuery ? (change.mediaQuery === mediaQuery) : true;\n      })\n    );\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    let list = normalizeQuery(mediaQuery);\n\n    if (list.length > 0) {\n      this._prepareQueryCSS(list, this._document);\n\n      list.forEach(query => {\n        let mql = this._registry.get(query);\n        let onMQLEvent = (e: MediaQueryList) => {\n          this._zone.run(() => {\n            let change = new MediaChange(e.matches, query);\n            this._source.next(change);\n          });\n        };\n\n        if (!mql) {\n          mql = this._buildMQL(query);\n          mql.addListener(onMQLEvent);\n          this._registry.set(query, mql);\n        }\n\n        if (mql.matches) {\n          onMQLEvent(mql);  // Announce activate range for initial subscribers\n        }\n      });\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    let canListen = isPlatformBrowser(this._platformId) &&\n      !!(<any>window).matchMedia('all').addListener;\n\n    return canListen ? (<any>window).matchMedia(query) : <MediaQueryList>{\n      matches: query === 'all' || query === '',\n      media: query,\n      addListener: () => {\n      },\n      removeListener: () => {\n      }\n    };\n  }\n\n  /**\n   * For Webkit engines that only trigger the MediaQueryList Listener\n   * when there is at least one CSS selector for the respective media query.\n   *\n   * @param query string The mediaQuery used to create a faux CSS selector\n   *\n   */\n  protected _prepareQueryCSS(mediaQueries: string[], _document: any) {\n    let list = mediaQueries.filter(it => !ALL_STYLES[it]);\n    if (list.length > 0) {\n      let query = list.join(', ');\n\n      try {\n        const renderer = this._rendererFactory.createRenderer(_document, RENDERER_TYPE);\n        let styleEl = renderer.createElement('style');\n\n        renderer.setAttribute(styleEl, 'type', 'text/css');\n        if (!styleEl['styleSheet']) {\n          let cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n` ;\n          renderer.appendChild(styleEl, renderer.createText(cssText));\n        }\n\n        renderer.appendChild(_document.head, styleEl);\n\n        // Store in private global registry\n        list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n}\n\n/**\n * Since `getDom()` is no longer supported,\n * we will use a RendererFactory build and instance\n * of a renderer for an element. Then the renderer will\n * build the stylesheet(s)\n */\nconst RENDERER_TYPE: RendererType2 = {\n  id: '-1',\n  styles: [ ],\n  data: { },\n  encapsulation: ViewEncapsulation.None\n};\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n\n/**\n * Always convert to unique list of queries; for iteration in ::registerQuery()\n */\nfunction normalizeQuery(mediaQuery: string | string[]): string[] {\n  return (typeof mediaQuery === 'undefined') ? [] :\n      (typeof mediaQuery === 'string') ? [mediaQuery] : unique(mediaQuery as string[]);\n}\n\n/**\n * Filter duplicate mediaQueries in the list\n */\nfunction unique(list: string[]): string[] {\n  let seen = {};\n  return list.filter(item => {\n    return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n  });\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from '../media-query/media-change';\nimport {BreakPoint} from '../media-query/breakpoints/break-point';\nimport {extendObject} from './object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null) {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('2.0.0-beta.12-843a68d');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs/Subscription';\nimport {map} from 'rxjs/operators/map';\n\nimport {MediaChange, MediaQuerySubscriber} from '../../media-query/media-change';\nimport {BreakPoint} from '../../media-query/breakpoints/break-point';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {extendObject} from '../../utils/object-extend';\n\nexport declare type SubscriptionList = Subscription[ ];\n\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nexport class ResponsiveActivation {\n  private _subscribers: SubscriptionList = [];\n  private _activatedInputKey: string;\n  private _registryMap: BreakPointX[];\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n    this._registryMap = this._buildRegistryMap();\n    this._subscribers = this._configureChangeObservers();\n  }\n\n  /**\n   * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n   * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n   * important when several media queries are 'registered' and from which, the browser uses the\n   * first matching media query.\n   */\n  get registryFromLargest(): BreakPointX[] {\n    return [...this._registryMap].reverse();\n  }\n\n  /**\n   * Accessor to the DI'ed directive property\n   * Each directive instance has a reference to the MediaMonitor which is\n   * used HERE to subscribe to mediaQuery change notifications.\n   */\n  get mediaMonitor(): MediaMonitor {\n    return this._mediaMonitor;\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    let key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  hasKeyValue(key) {\n    let value = this._options.inputKeys[key];\n    return typeof value !== 'undefined';\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach((link: Subscription) => {\n      link.unsubscribe();\n    });\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): SubscriptionList {\n    let subscriptions: Subscription[] = [];\n\n    this._registryMap.forEach((bp: BreakPointX) => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        let buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n          this.mediaMonitor\n              .observe(bp.alias)\n              .pipe(map(buildChanges))\n              .subscribe(change => {\n                this._onMonitorEvents(change);\n              })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this.mediaMonitor.breakpoints\n        .map(bp => {\n          return <BreakPointX> extendObject({}, bp, {\n            baseKey: this._options.baseKey,             // e.g. layout, hide, self-align, flex-wrap\n            key: this._options.baseKey + bp.suffix  // e.g.  layoutGtSm, layoutMd, layoutGtLg\n          });\n        })\n        .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property == this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                     // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey == currentKey) ? '' : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey) {\n    let isMissingKey = (key) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      this.mediaMonitor.activeOverlaps.some(bp => {\n        let key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  SimpleChange,\n  Renderer2,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  lookupStyle,\n  lookupInlineStyle,\n  applyStyleToElement,\n  applyStyleToElements,\n  lookupAttributeValue,\n} from '../../utils/style-utils';\n\nimport {ResponsiveActivation, KeyOptions} from '../core/responsive-activation';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective implements OnDestroy, OnChanges {\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _renderer: Renderer2,\n              @Inject(PLATFORM_ID) protected _platformId: Object) {\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access to host element's parent DOM node\n   */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  protected get nativeElement(): any {\n    return this._elementRef.nativeElement;\n  }\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._display = this._getDisplayStyle();\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseFxDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    delete this._mediaMonitor;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows use to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source: HTMLElement = this.nativeElement): string {\n    return lookupStyle(this._platformId, source || this.nativeElement, 'display');\n  }\n\n  /**\n   * Quick accessor to raw attribute value on the target DOM element\n   */\n  protected _getAttributeValue(attribute: string,\n                               source: HTMLElement = this.nativeElement): string {\n    return lookupAttributeValue(source || this.nativeElement, attribute);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlowDirection(target: any, addIfMissing = false): string {\n    let value = 'row';\n\n    if (target) {\n      value = lookupStyle(this._platformId, target, 'flex-direction') || 'row';\n      let hasInlineValue = lookupInlineStyle(target, 'flex-direction');\n\n      if (!hasInlineValue && addIfMissing) {\n        applyStyleToElements(this._renderer, buildLayoutCSS(value), [target]);\n      }\n    }\n\n    return value.trim();\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 nativeElement: any = this.nativeElement) {\n    let element = nativeElement || this.nativeElement;\n    applyStyleToElement(this._renderer, element, style, value);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[ ]) {\n    applyStyleToElements(this._renderer, style, elements || []);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      if (!!key) {\n        this._inputMap[key] = source;\n      }\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(\n          keyOptions,\n          this._mediaMonitor,\n          (change) => onMediaQueryChange(change)\n      );\n    }\n    return this._mqActivation;\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /**\n   * Does this directive have 1 or more responsive keys defined\n   * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n   */\n  hasResponsiveAPI(baseKey: string) {\n    const totalKeys = Object.keys(this._inputMap).length;\n    const baseValue = this._inputMap[baseKey];\n    return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n  }\n\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** Original dom Elements CSS display style */\n  protected _display;\n\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, Inject, PLATFORM_ID, Renderer2} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {ResponsiveActivation} from './responsive-activation';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n\n/**\n * Adapter to the BaseFxDirective abstract class so it can be used via composition.\n * @see BaseFxDirective\n */\nexport class BaseFxDirectiveAdapter extends BaseFxDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseFxDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation;\n  }\n\n  /**\n   * BaseFxDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _renderer: Renderer2,\n              @Inject(PLATFORM_ID) protected _platformId: Object) {\n    super(_mediaMonitor, _elementRef, _renderer, _platformId);\n  }\n\n  /**\n    * Does this directive have 1 or more responsive keys defined\n    * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n    */\n  hasResponsiveAPI() {\n   return super.hasResponsiveAPI(this._baseKey);\n  }\n\n  /**\n   * @see BaseFxDirective._queryInput\n   */\n  queryInput(key) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error(\n        `Invalid class value '${key}' provided. Did you want to cache the raw value?`\n      );\n    }\n  }\n\n  /**\n   * @see BaseFxDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    if (key) {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source ? source.join(' ') : '';\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes: string[] = [];\n    if (source) {\n      for (let prop in source) {\n        if (!!source[prop]) {\n          classes.push(prop);\n        }\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// @TODO - remove after updating to TS v2.4\n// tslint:disable:no-unused-variable\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n    new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overriden from custom, application-specific ranges\n *\n */\n@Injectable()\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[ ] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint | null {\n    return this._registry.find(bp => bp.alias == alias) || null;\n  }\n\n  findByQuery(query: string): BreakPoint | null {\n    return this._registry.find(bp => bp.mediaQuery == query) || null;\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => !!it.suffix ? it.suffix : '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string;\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {BreakPoint} from './breakpoints/break-point';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\nimport {MatchMedia} from './match-media';\nimport {MediaChange} from './media-change';\n\nimport {mergeAlias} from '../utils/add-alias';\n\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operators/filter';\nimport {map} from 'rxjs/operators/map';\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n */\n@Injectable()\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    let items: BreakPoint[] = this._breakpoints.overlappings.reverse();\n    return items.filter((bp: BreakPoint) => {\n      return this._matchMedia.isActive(bp.mediaQuery);\n    });\n  }\n\n  get active(): BreakPoint | null {\n    let found: BreakPoint | null = null, items = this.breakpoints.reverse();\n    items.forEach(bp => {\n      if (bp.alias !== '') {\n        if (!found && this._matchMedia.isActive(bp.mediaQuery)) {\n          found = bp;\n        }\n      }\n    });\n\n    let first = this.breakpoints[0];\n    return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias?: string): Observable<MediaChange> {\n    let bp = this._breakpoints.findByAlias(alias || '') ||\n      this._breakpoints.findByQuery(alias || '');\n    let hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    let media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return media$.pipe(\n      map(change => mergeAlias(change, bp)),\n      filter(hasAlias)\n    );\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    let queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {ReplaySubject} from 'rxjs/ReplaySubject';\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive({selector: `\n  [fxLayout],\n  [fxLayout.xs], [fxLayout.sm], [fxLayout.md], [fxLayout.lg], [fxLayout.xl],\n  [fxLayout.lt-sm], [fxLayout.lt-md], [fxLayout.lt-lg], [fxLayout.lt-xl],\n  [fxLayout.gt-xs], [fxLayout.gt-sm], [fxLayout.gt-md], [fxLayout.gt-lg]\n`})\nexport class LayoutDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Create Observable for nested/child 'flex' directives. This allows\n   * child flex directives to subscribe/listen for flexbox direction changes.\n   */\n  protected _announcer: ReplaySubject<string>;\n\n  /**\n   * Publish observer to enabled nested, dependent directives to listen\n   * to parent 'layout' direction changes\n   */\n  layout$: Observable<string>;\n\n  /* tslint:disable */\n  @Input('fxLayout')       set layout(val)     { this._cacheInput('layout', val); };\n  @Input('fxLayout.xs')    set layoutXs(val)   { this._cacheInput('layoutXs', val); };\n  @Input('fxLayout.sm')    set layoutSm(val)   { this._cacheInput('layoutSm', val); };\n  @Input('fxLayout.md')    set layoutMd(val)   { this._cacheInput('layoutMd', val); };\n  @Input('fxLayout.lg')    set layoutLg(val)   { this._cacheInput('layoutLg', val); };\n  @Input('fxLayout.xl')    set layoutXl(val)   { this._cacheInput('layoutXl', val); };\n\n  @Input('fxLayout.gt-xs') set layoutGtXs(val) { this._cacheInput('layoutGtXs', val); };\n  @Input('fxLayout.gt-sm') set layoutGtSm(val) { this._cacheInput('layoutGtSm', val); };\n  @Input('fxLayout.gt-md') set layoutGtMd(val) { this._cacheInput('layoutGtMd', val); };\n  @Input('fxLayout.gt-lg') set layoutGtLg(val) { this._cacheInput('layoutGtLg', val); };\n\n  @Input('fxLayout.lt-sm') set layoutLtSm(val) { this._cacheInput('layoutLtSm', val); };\n  @Input('fxLayout.lt-md') set layoutLtMd(val) { this._cacheInput('layoutLtMd', val); };\n  @Input('fxLayout.lt-lg') set layoutLtLg(val) { this._cacheInput('layoutLtLg', val); };\n  @Input('fxLayout.lt-xl') set layoutLtXl(val) { this._cacheInput('layoutLtXl', val); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer2,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(monitor, elRef, renderer, platformId);\n    this._announcer = new ReplaySubject<string>(1);\n    this.layout$ = this._announcer.asObservable();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxLayout')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['layout'] != null || this._mqActivation) {\n      this._updateWithDirection();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('layout', 'row', (changes: MediaChange) => {\n      this._updateWithDirection(changes.value);\n    });\n    this._updateWithDirection();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Validate the direction value and then update the host's inline flexbox styles\n   */\n  protected _updateWithDirection(value?: string) {\n    value = value || this._queryInput('layout') || 'row';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Update styles and announce to subscribers the *new* direction\n    let css = buildLayoutCSS(!!value ? value : '');\n\n    this._applyStyleToElement(css);\n    this._announcer.next(css['flex-direction']);\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  Self,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {extendObject} from '../../utils/object-extend';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {LayoutDirective} from './layout';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n@Directive({selector: `\n  [fxLayoutAlign],\n  [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md], [fxLayoutAlign.lg],[fxLayoutAlign.xl],\n  [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md], [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl],\n  [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm], [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`})\nexport class LayoutAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxLayoutAlign')       set align(val)     { this._cacheInput('align', val); }\n  @Input('fxLayoutAlign.xs')    set alignXs(val)   { this._cacheInput('alignXs', val); }\n  @Input('fxLayoutAlign.sm')    set alignSm(val)   { this._cacheInput('alignSm', val); };\n  @Input('fxLayoutAlign.md')    set alignMd(val)   { this._cacheInput('alignMd', val); };\n  @Input('fxLayoutAlign.lg')    set alignLg(val)   { this._cacheInput('alignLg', val); };\n  @Input('fxLayoutAlign.xl')    set alignXl(val)   { this._cacheInput('alignXl', val); };\n\n  @Input('fxLayoutAlign.gt-xs') set alignGtXs(val) { this._cacheInput('alignGtXs', val); };\n  @Input('fxLayoutAlign.gt-sm') set alignGtSm(val) { this._cacheInput('alignGtSm', val); };\n  @Input('fxLayoutAlign.gt-md') set alignGtMd(val) { this._cacheInput('alignGtMd', val); };\n  @Input('fxLayoutAlign.gt-lg') set alignGtLg(val) { this._cacheInput('alignGtLg', val); };\n\n  @Input('fxLayoutAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxLayoutAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxLayoutAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxLayoutAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  /* tslint:enable */\n  constructor(\n      monitor: MediaMonitor,\n      elRef: ElementRef, renderer: Renderer2,\n      @Optional() @Self() container: LayoutDirective,\n      @Inject(PLATFORM_ID) platformId: Object) {\n    super(monitor, elRef, renderer, platformId);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('align', 'start stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if ( this._layoutWatcher ) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n    this._allowStretching(value, !this._layout ? 'row' : this._layout);\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n\n    let value = this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n    this._allowStretching(value, this._layout || 'row');\n  }\n\n  protected _buildCSS(align) {\n    let css = {}, [main_axis, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    // Main axis\n    switch (main_axis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (cross_axis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'baseline':\n        css['align-items'] = 'baseline';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : this._layout || 'row',\n      'box-sizing' : 'border-box'\n    });\n  }\n\n\n  /**\n   * Update container element to 'stretch' as needed...\n   * NOTE: this is only done if the crossAxis is explicitly set to 'stretch'\n   */\n  protected _allowStretching(align, layout) {\n    let [, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    if (cross_axis == 'stretch') {\n      // Use `null` values to remove style\n      this._applyStyleToElement({\n        'box-sizing': 'border-box',\n        'max-width': !isFlowHorizontal(layout) ? '100%' : null,\n        'max-height': isFlowHorizontal(layout) ? '100%' : null\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n  Self,\n  AfterContentInit,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from '../core/base';\nimport {LayoutDirective} from './layout';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n@Directive({\n  selector: `\n  [fxLayoutGap],\n  [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md], [fxLayoutGap.lg], [fxLayoutGap.xl],\n  [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md], [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl],\n  [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm], [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`\n})\nexport class LayoutGapDirective extends BaseFxDirective implements AfterContentInit, OnChanges,\n    OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n  protected _observer: MutationObserver;\n\n  /* tslint:disable */\n @Input('fxLayoutGap')       set gap(val) { this._cacheInput('gap', val); }\n @Input('fxLayoutGap.xs')    set gapXs(val) { this._cacheInput('gapXs', val); }\n @Input('fxLayoutGap.sm')    set gapSm(val) { this._cacheInput('gapSm', val); };\n @Input('fxLayoutGap.md')    set gapMd(val) { this._cacheInput('gapMd', val); };\n @Input('fxLayoutGap.lg')    set gapLg(val) { this._cacheInput('gapLg', val); };\n @Input('fxLayoutGap.xl')    set gapXl(val) { this._cacheInput('gapXl', val); };\n\n @Input('fxLayoutGap.gt-xs') set gapGtXs(val) { this._cacheInput('gapGtXs', val); };\n @Input('fxLayoutGap.gt-sm') set gapGtSm(val) { this._cacheInput('gapGtSm', val); };\n @Input('fxLayoutGap.gt-md') set gapGtMd(val) { this._cacheInput('gapGtMd', val); };\n @Input('fxLayoutGap.gt-lg') set gapGtLg(val) { this._cacheInput('gapGtLg', val); };\n\n @Input('fxLayoutGap.lt-sm') set gapLtSm(val) { this._cacheInput('gapLtSm', val); };\n @Input('fxLayoutGap.lt-md') set gapLtMd(val) { this._cacheInput('gapLtMd', val); };\n @Input('fxLayoutGap.lt-lg') set gapLtLg(val) { this._cacheInput('gapLtLg', val); };\n @Input('fxLayoutGap.lt-xl') set gapLtXl(val) { this._cacheInput('gapLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer2,\n              @Optional() @Self() container: LayoutDirective,\n              private _zone: NgZone,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(monitor, elRef, renderer, platformId);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['gap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngAfterContentInit() {\n    this._watchContentChanges();\n    this._listenForMediaQueryChanges('gap', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Watch for child nodes to be added... and apply the layout gap styles to each.\n   * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n   */\n  protected _watchContentChanges() {\n    this._zone.runOutsideAngular(() => {\n\n      if (typeof MutationObserver !== 'undefined') {\n        this._observer = new MutationObserver((mutations: MutationRecord[]) => {\n          let validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n                (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this._updateWithValue();\n          }\n        });\n        this._observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n    this._updateWithValue();\n  }\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('gap') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Gather all non-hidden Element nodes\n    let items = this.childrenNodes\n        .filter(el => el.nodeType === 1 && this._getDisplayStyle(el) != 'none');\n    let numItems = items.length;\n\n    if (numItems > 0) {\n      let lastItem = items[numItems - 1];\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      items = items.filter((_, j) => j < numItems - 1);\n      this._applyStyleToElements(this._buildCSS(value), items);\n\n      // Clear all gaps for all visible elements\n      this._applyStyleToElements(this._buildCSS(), [lastItem]);\n    }\n  }\n\n  /**\n   * Prepare margin CSS, remove any previous explicitly\n   * assigned margin assignments\n   */\n  private _buildCSS(value: any = null) {\n    let key, margins = {\n      'margin-left': null,\n      'margin-right': null,\n      'margin-top': null,\n      'margin-bottom': null\n    };\n\n    switch (this._layout) {\n      case 'column':\n      case 'column-reverse':\n        key = 'margin-bottom';\n        break;\n      case 'row' :\n      case 'row-reverse':\n      default :\n        key = 'margin-right';\n        break;\n    }\n    margins[key] = value;\n\n    return margins;\n  }\n\n}\n"],"names":["val","this","_cacheInput","negativeOf","Object","defineProperty","ShowHideDirective","prototype","_getDisplayStyle","_layout","_super","call","ngOnChanges","changes","hasInitialized","_mqActivation","_updateWithValue","ngOnInit","_this","value","_getDefaultVal","_listenForMediaQueryChanges","ngOnDestroy","_layoutWatcher","unsubscribe","activatedInput","shouldShow","_validateTruthy","_applyStyleToElement","_buildCSS","show","display","_display","FALSY","indexOf","type","Directive","args","selector","MediaMonitor","LayoutDirective","decorators","Optional","Self","ElementRef","Renderer2","Inject","PLATFORM_ID","Input","showXs","showSm","showMd","showLg","showXl","showLtSm","showLtMd","showLtLg","showLtXl","showGtXs","showGtSm","showGtMd","showGtLg","hide","hideXs","hideSm","hideMd","hideLg","hideXl","hideLtSm","hideLtMd","hideLtLg","hideLtXl","hideGtXs","hideGtSm","hideGtMd","hideGtLg","BaseFxDirective","ImgSrcDirective","elRef","renderer","monitor","platformId","nativeElement","getAttribute","tslib_1.__extends","cacheDefaultSrc","hasResponsiveKeys","defaultSrc","_updateSrcFor","url","activatedValue","_renderer","setAttribute","String","_queryInput","keys","_inputMap","length","srcBase","srcXs","srcSm","srcMd","srcLg","srcXl","srcLtSm","srcLtMd","srcLtLg","srcLtXl","srcGtXs","srcGtSm","srcGtMd","srcGtLg","RESPONSIVE_ALIASES","DEFAULT_BREAKPOINTS","alias","mediaQuery","overlapping","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","ObservableMedia","MediaService","breakpoints","mediaWatcher","filterOverlaps","_registerBreakPoints","observable$","_buildObservable","isActive","query","_toMediaQuery","subscribe","next","error","complete","asObservable","queries","sortedItems","map","bp","registerQuery","self","media$","observe","activationsOnly","change","matches","addAliasInformation","mergeAlias","_findByQuery","excludeOverlaps","findByQuery","pipe","filter","_findByAlias","findByAlias","Injectable","BreakPointRegistry","MatchMedia","ALIAS_DELIMITERS","DEFAULT_BREAKPOINTS_PROVIDER","provide","BREAKPOINTS","useFactory","DEFAULT_BREAKPOINTS_PROVIDER_FACTORY","OBSERVABLE_MEDIA_PROVIDER","deps","SkipSelf","OBSERVABLE_MEDIA_PROVIDER_FACTORY","MEDIA_MONITOR_PROVIDER","MEDIA_MONITOR_PROVIDER_FACTORY","NgModule","providers","MediaQueriesModule","ALL_DIRECTIVES","LayoutGapDirective","LayoutAlignDirective","FlexDirective","FlexOrderDirective","FlexOffsetDirective","FlexFillDirective","FlexAlignDirective","ClassDirective","StyleDirective","FlexLayoutModule","provideBreakPoints","options","ngModule","CUSTOM_BREAKPOINTS_PROVIDER_FACTORY","orientations","imports","exports","concat","declarations","slice","_updateStyle","_onLayoutChange","direction","flexBasis","basis","replace","parts","validateBasis","_validateValue","apply","grow","shrink","css","isValue","layout","_getFlowDirection","parentElement","clearStyles","max-width","max-height","min-width","min-height","extendObject","flex","hasCalc","isPercent","isNaN","flex-grow","flex-shrink","flex-basis","max","isFlowHorizontal","min","usingCalc","isPx","isFixed","box-sizing","flexXs","flexSm","flexMd","flexLg","flexXl","flexGtXs","flexGtSm","flexGtMd","flexGtLg","flexLtSm","flexLtMd","flexLtLg","flexLtXl","align","alignXs","alignSm","alignMd","alignLg","alignXl","alignLtSm","alignLtMd","alignLtLg","alignLtXl","alignGtXs","alignGtSm","alignGtMd","alignGtLg","FLEX_FILL_CSS","margin","width","height","_container","watchParentFlow","layout$","offset","margin-left","margin-top","offsetXs","offsetSm","offsetMd","offsetLg","offsetXl","offsetLtSm","offsetLtMd","offsetLtLg","offsetLtXl","offsetGtXs","offsetGtSm","offsetGtMd","offsetGtLg","parseInt","order","orderXs","orderSm","orderMd","orderLg","orderXl","orderGtXs","orderGtSm","orderGtMd","orderGtLg","orderLtSm","orderLtMd","orderLtLg","orderLtXl","RendererAdapter","setElementClass","el","className","isAdd","addClass","removeClass","setElementStyle","styleName","styleValue","setStyle","removeStyle","name","style","flags","animate","_notImplemented","attachViewAfter","detachView","destroyView","createElement","createViewRoot","createTemplateAnchor","createText","invokeElementMethod","projectNodes","selectRootElement","setBindingDebugInfo","setElementProperty","setElementAttribute","setText","listen","listenGlobal","_iterableDiffers","_keyValueDiffers","_ngEl","_ngClassInstance","_platformId","_configureAdapters","_base","cacheInput","ngClass","queryInput","klass","activeKey","mqActivation","_configureMQListener","ngDoCheck","BaseFxDirectiveAdapter","adapter","NgClass","baseKey","fallbackValue","listenForMediaQueryChanges","IterableDiffers","KeyValueDiffers","ngClassBase","klazz","ngClassXs","ngClassSm","ngClassMd","ngClassLg","ngClassXl","ngClassLtSm","ngClassLtMd","ngClassLtLg","ngClassLtXl","ngClassGtXs","ngClassGtSm","ngClassGtMd","ngClassGtLg","NgStyleKeyValue","key","noQuotes","trim","ngStyleUtils","getType","buildRawList","buildMapFromList","buildMapFromSet","_sanitizer","_differs","_ngStyleInstance","ngStyle","NgStyle","_buildCacheInterceptor","_fallbackToStyle","bind","source","cacheRaw","merge","styles","_buildStyleMap","inputMap","sanitizer","sanitize","SecurityContext","STYLE","_","ngStyleBase","_getAttributeValue","DomSanitizer","ngStyleXs","ngStyleSm","ngStyleMd","ngStyleLg","ngStyleXl","ngStyleLtSm","ngStyleLtMd","ngStyleLtLg","ngStyleLtXl","ngStyleGtXs","ngStyleGtSm","ngStyleGtMd","ngStyleGtLg","__extends","d","b","__","constructor","extendStatics","create","buildLayoutCSS","_a","validateValue","buildCSS","toLowerCase","split","wrap","inline","LAYOUT_VALUES","find","x","INLINE","validateWrapValue","flex-direction","flex-wrap","applyCssPrefixes","target","applyStyleToElement","element","applyMultiValueStyleToElement","applyStyleToElements","elements","forEach","sort","values","Array","isArray","_i","values_1","lookupAttributeValue","attribute","lookupInlineStyle","getPropertyValue","lookupStyle","inlineOnly","immediateValue","isPlatformBrowser","getComputedStyle","dest","sources","arguments","TypeError","sources_1","hasOwnProperty","normalizeQuery","unique","list","seen","item","mqAlias","suffix","j","_validateCalcValue","substring","substr","calc","methodName","Error","what","Set","delimiter","sanitizeValue","it","stringToKeyValue","entry","reduce","keyValuesToMap","push","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","join","validateSuffixes","mergeByAlias","defaults","custom","merged","result","buildMergedBreakPoints","_custom","orientation","parentService","matchMedia","parentMonitor","setPrototypeOf","__proto__","p","VERSION","Version","KeyOptions","defaultValue","inputKeys","ResponsiveActivation","_options","_mediaMonitor","_onMediaChanges","_subscribers","_registryMap","_buildRegistryMap","_configureChangeObservers","reverse","_activatedInputKey","activatedInputKey","hasKeyValue","_lookupKeyValue","destroy","link","subscriptions","_keyInUse","buildChanges","clone","property","mediaMonitor","_onMonitorEvents","_calculateActivatedValue","undefined","current","currentKey","newKey","_validateInputKey","inputKey","isMissingKey","activeOverlaps","some","_elementRef","_hasInitialized","previousVal","SimpleChange","parentNode","fallbackVal","addIfMissing","_applyStyleToElements","prop","onMediaQueryChange","keyOptions","obj","children","buffer","i","hasResponsiveAPI","_baseKey","mqa","_cacheInputRaw","_cacheInputArray","_cacheInputObject","_cacheInputString","classes","InjectionToken","_registry","overlaps","nonOverlaps","MediaChange","_zone","_rendererFactory","_document","Map","_source","BehaviorSubject","_observable$","mql","get","_prepareQueryCSS","onMQLEvent","e","run","_buildMQL","addListener","set","media","removeListener","mediaQueries","ALL_STYLES","createRenderer","RENDERER_TYPE","styleEl_1","cssText","appendChild","head","mq","console","NgZone","RendererFactory2","DOCUMENT","ɵ0","id","data","encapsulation","ViewEncapsulation","None","_breakpoints","_matchMedia","_registerBreakpoints","items","overlappings","found","hasAlias","_announcer","ReplaySubject","_updateWithDirection","layoutXs","layoutSm","layoutMd","layoutLg","layoutXl","layoutGtXs","layoutGtSm","layoutGtMd","layoutGtLg","layoutLtSm","layoutLtMd","layoutLtLg","layoutLtXl","container","_allowStretching","main_axis","cross_axis","ngAfterContentInit","_watchContentChanges","_observer","disconnect","runOutsideAngular","MutationObserver","mutations","validatedChanges","addedNodes","removedNodes","childList","childrenNodes","nodeType","numItems","lastItem","margins","margin-right","margin-bottom","gap","gapXs","gapSm","gapMd","gapLg","gapXl","gapGtXs","gapGtSm","gapGtMd","gapGtLg","gapLtSm","gapLtMd","gapLtLg","gapLtXl"],"mappings":"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"}