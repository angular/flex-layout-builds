{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/server/server-provider.ts","../../src/lib/server/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/add-alias.ts","../../src/lib/core/observable-media/observable-media-provider.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/breakpoints/break-points-provider.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/core/media-monitor/media-monitor-provider.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/utils/basis-validator.ts","../../src/lib/core/media-change.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/media-monitor/media-monitor.ts","../../src/lib/core/observable-media/observable-media.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/module.ts","../../src/lib/core/media-queries-module.ts","../../src/lib/core/stylesheet-map.ts","../../src/lib/core/server-token.ts","../../src/lib/core/responsive-activation/responsive-activation.ts","../../src/lib/core/base/base.ts","../../src/lib/core/base/base-adapter.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/match-media/server-match-media.ts","../../src/lib/core/style-utils/style-utils.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  Inject,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseFxDirective,\n  MediaMonitor,\n  SERVER_TOKEN,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({\n  selector: `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`\n})\nexport class ImgSrcDirective extends BaseFxDirective implements OnInit, OnChanges {\n\n  /* tslint:disable */\n  @Input('src')        set srcBase(val) { this.cacheDefaultSrc(val);           }\n\n  @Input('src.xs')     set srcXs(val)   { this._cacheInput('srcXs', val);  }\n  @Input('src.sm')     set srcSm(val)   { this._cacheInput('srcSm', val);  }\n  @Input('src.md')     set srcMd(val)   { this._cacheInput('srcMd', val);  }\n  @Input('src.lg')     set srcLg(val)   { this._cacheInput('srcLg', val);  }\n  @Input('src.xl')     set srcXl(val)   { this._cacheInput('srcXl', val);  }\n\n  @Input('src.lt-sm')  set srcLtSm(val) { this._cacheInput('srcLtSm', val);  }\n  @Input('src.lt-md')  set srcLtMd(val) { this._cacheInput('srcLtMd', val);  }\n  @Input('src.lt-lg')  set srcLtLg(val) { this._cacheInput('srcLtLg', val);  }\n  @Input('src.lt-xl')  set srcLtXl(val) { this._cacheInput('srcLtXl', val);  }\n\n  @Input('src.gt-xs')  set srcGtXs(val) { this._cacheInput('srcGtXs', val);  }\n  @Input('src.gt-sm')  set srcGtSm(val) { this._cacheInput('srcGtSm', val);  }\n  @Input('src.gt-md')  set srcGtMd(val) { this._cacheInput('srcGtMd', val);  }\n  @Input('src.gt-lg')  set srcGtLg(val) { this._cacheInput('srcGtLg', val);  }\n  /* tslint:enable */\n\n  constructor(protected _elRef: ElementRef,\n              protected _monitor: MediaMonitor,\n              protected _styler: StyleUtils,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected _serverModuleLoaded: boolean) {\n    super(_monitor, _elRef, _styler);\n    this._cacheInput('src', _elRef.nativeElement.getAttribute('src') || '');\n    if (isPlatformServer(this._platformId) && this._serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Listen for responsive changes to update the img.src attribute\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (this.hasResponsiveKeys) {\n      // Listen for responsive changes\n      this._listenForMediaQueryChanges('src', this.defaultSrc, () => {\n        this._updateSrcFor();\n      });\n    }\n    this._updateSrcFor();\n  }\n\n  /**\n   * Update the 'src' property of the host <img> element\n   */\n  ngOnChanges() {\n    if (this.hasInitialized) {\n      this._updateSrcFor();\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected _updateSrcFor() {\n    if (this.hasResponsiveKeys) {\n      let url = this.activatedValue || this.defaultSrc;\n      if (isPlatformServer(this._platformId) && this._serverModuleLoaded) {\n        this._styler.applyStyleToElement(this.nativeElement, {'content': url ? `url(${url})` : ''});\n      } else {\n        this.nativeElement.setAttribute('src', String(url));\n      }\n    }\n  }\n\n  /**\n   * Cache initial value of 'src', this will be used as fallback when breakpoint\n   * activations change.\n   * NOTE: The default 'src' property is not bound using @Input(), so perform\n   * a post-ngOnInit() lookup of the default src value (if any).\n   */\n  protected cacheDefaultSrc(value?: string) {\n    this._cacheInput('src', value || '');\n  }\n\n  /**\n   * Empty values are maintained, undefined values are exposed as ''\n   */\n  protected get defaultSrc(): string {\n    return this._queryInput('src') || '';\n  }\n\n  /**\n   * Does the <img> have 1 or more src.<xxx> responsive inputs\n   * defined... these will be mapped to activated breakpoints.\n   */\n  protected get hasResponsiveKeys() {\n    return Object.keys(this._inputMap).length > 1;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  Self,\n  OnInit,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {\n  BaseFxDirective,\n  BaseFxDirectiveAdapter,\n  MediaChange,\n  MediaMonitor,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n\n/** NgClass allowed inputs **/\nexport type NgClassType = string | string[] | Set<string> | {[klass: string]: any};\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({\n  selector: `\n    [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n    [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n    [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n  `\n})\nexport class ClassDirective extends BaseFxDirective\n    implements DoCheck, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Intercept ngClass assignments so we cache the default classes\n   * which are merged with activated styles or used as fallbacks.\n   * Note: Base ngClass values are applied during ngDoCheck()\n   */\n  @Input('ngClass')\n  set ngClassBase(val: NgClassType) {\n    const key = 'ngClass';\n    this._base.cacheInput(key, val, true);\n    this._ngClassInstance.ngClass = this._base.queryInput(key);\n  }\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klazz(val: string) {\n    const key = 'class';\n    this._base.cacheInput(key, val);\n    this._ngClassInstance.klass = val;\n  }\n\n  /* tslint:disable */\n  @Input('ngClass.xs')    set ngClassXs(val:   NgClassType) { this._base.cacheInput('ngClassXs',   val, true); }\n  @Input('ngClass.sm')    set ngClassSm(val:   NgClassType) { this._base.cacheInput('ngClassSm',   val, true); }\n  @Input('ngClass.md')    set ngClassMd(val:   NgClassType) { this._base.cacheInput('ngClassMd',   val, true); }\n  @Input('ngClass.lg')    set ngClassLg(val:   NgClassType) { this._base.cacheInput('ngClassLg',   val, true); }\n  @Input('ngClass.xl')    set ngClassXl(val:   NgClassType) { this._base.cacheInput('ngClassXl',   val, true); }\n\n  @Input('ngClass.lt-sm') set ngClassLtSm(val: NgClassType) { this._base.cacheInput('ngClassLtSm', val, true); }\n  @Input('ngClass.lt-md') set ngClassLtMd(val: NgClassType) { this._base.cacheInput('ngClassLtMd', val, true); }\n  @Input('ngClass.lt-lg') set ngClassLtLg(val: NgClassType) { this._base.cacheInput('ngClassLtLg', val, true); }\n  @Input('ngClass.lt-xl') set ngClassLtXl(val: NgClassType) { this._base.cacheInput('ngClassLtXl', val, true); }\n\n  @Input('ngClass.gt-xs') set ngClassGtXs(val: NgClassType) { this._base.cacheInput('ngClassGtXs', val, true); }\n  @Input('ngClass.gt-sm') set ngClassGtSm(val: NgClassType) { this._base.cacheInput('ngClassGtSm', val, true); }\n  @Input('ngClass.gt-md') set ngClassGtMd(val: NgClassType) { this._base.cacheInput('ngClassGtMd', val, true); }\n  @Input('ngClass.gt-lg') set ngClassGtLg(val: NgClassType) { this._base.cacheInput('ngClassGtLg', val, true); }\n\n  /* tslint:enable */\n  constructor(protected monitor: MediaMonitor,\n              protected _iterableDiffers: IterableDiffers,\n              protected _keyValueDiffers: KeyValueDiffers,\n              protected _ngEl: ElementRef,\n              protected _renderer: Renderer2,\n              @Optional() @Self() private _ngClassInstance: NgClass,\n              protected _styler: StyleUtils) {\n    super(monitor, _ngEl, _styler);\n    this._configureAdapters();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._ngClassInstance.ngClass = this._base.mqActivation.activatedInput || '';\n    }\n  }\n\n  ngOnInit() {\n    this._configureMQListener();\n  }\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this._ngClassInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n    delete this._ngClassInstance;\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n   * Configure adapters (that delegate to an internal ngClass instance) if responsive\n   * keys have been defined.\n   */\n  protected _configureAdapters() {\n    this._base = new BaseFxDirectiveAdapter(\n      'ngClass',\n      this.monitor,\n      this._ngEl,\n      this._styler\n    );\n    if (!this._ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this._ngClassInstance = new NgClass(\n          this._iterableDiffers, this._keyValueDiffers, this._ngEl, this._renderer\n      );\n    }\n  }\n\n  /**\n   * Build an mqActivation object that bridges mql change events to onMediaQueryChange handlers\n   * NOTE: We delegate subsequent activity to the NgClass logic\n   *       Identify the activated input value and update the ngClass iterables...\n   *       Use ngDoCheck() to actually apply the values to the element\n   */\n  protected _configureMQListener(baseKey = 'ngClass') {\n    const fallbackValue = this._base.queryInput(baseKey);\n    this._base.listenForMediaQueryChanges(baseKey, fallbackValue, (changes: MediaChange) => {\n      this._ngClassInstance.ngClass = changes.value || '';\n      this._ngClassInstance.ngDoCheck();\n    });\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors and capture mediaQuery changes\n   * Delegate value changes to the internal `_ngClassInstance` for processing\n   */\n  protected _base: BaseFxDirectiveAdapter;   // used for `ngClass.xxx` selectors\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Self,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {Subscription} from 'rxjs/Subscription';\nimport {\n  BaseFxDirective,\n  MediaChange,\n  MediaMonitor,\n  SERVER_TOKEN,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nimport {LayoutDirective} from '@angular/flex-layout/flex';\n\nconst FALSY = ['false', false, 0];\n\n/**\n * For fxHide selectors, we invert the 'value'\n * and assign to the equivalent fxShow selector cache\n *  - When 'hide' === '' === true, do NOT show the element\n *  - When 'hide' === false or 0... we WILL show the element\n */\nexport function negativeOf(hide: any) {\n  return (hide === '') ? false :\n         ((hide === 'false') || (hide === 0)) ? true : !hide;\n}\n\n/**\n * 'show' Layout API directive\n *\n */\n@Directive({\n  selector: `\n  [fxShow],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`\n})\nexport class ShowHideDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShow')       set show(val) {  this._cacheInput('show', val);  }\n  @Input('fxShow.xs')    set showXs(val) {this._cacheInput('showXs', val);}\n  @Input('fxShow.sm')    set showSm(val) {this._cacheInput('showSm', val); };\n  @Input('fxShow.md')    set showMd(val) {this._cacheInput('showMd', val); };\n  @Input('fxShow.lg')    set showLg(val) {this._cacheInput('showLg', val); };\n  @Input('fxShow.xl')    set showXl(val) {this._cacheInput('showXl', val); };\n\n  @Input('fxShow.lt-sm') set showLtSm(val) { this._cacheInput('showLtSm', val); };\n  @Input('fxShow.lt-md') set showLtMd(val) { this._cacheInput('showLtMd', val); };\n  @Input('fxShow.lt-lg') set showLtLg(val) { this._cacheInput('showLtLg', val); };\n  @Input('fxShow.lt-xl') set showLtXl(val) { this._cacheInput('showLtXl', val); };\n\n  @Input('fxShow.gt-xs') set showGtXs(val) {this._cacheInput('showGtXs', val); };\n  @Input('fxShow.gt-sm') set showGtSm(val) {this._cacheInput('showGtSm', val); };\n  @Input('fxShow.gt-md') set showGtMd(val) {this._cacheInput('showGtMd', val); };\n  @Input('fxShow.gt-lg') set showGtLg(val) {this._cacheInput('showGtLg', val); };\n\n  @Input('fxHide')       set hide(val) {this._cacheInput('show', negativeOf(val));}\n  @Input('fxHide.xs')    set hideXs(val) {this._cacheInput('showXs', negativeOf(val));}\n  @Input('fxHide.sm')    set hideSm(val) {this._cacheInput('showSm', negativeOf(val)); };\n  @Input('fxHide.md')    set hideMd(val) {this._cacheInput('showMd', negativeOf(val)); };\n  @Input('fxHide.lg')    set hideLg(val) {this._cacheInput('showLg', negativeOf(val)); };\n  @Input('fxHide.xl')    set hideXl(val) {this._cacheInput('showXl', negativeOf(val)); };\n\n  @Input('fxHide.lt-sm') set hideLtSm(val) { this._cacheInput('showLtSm', negativeOf(val)); };\n  @Input('fxHide.lt-md') set hideLtMd(val) { this._cacheInput('showLtMd', negativeOf(val)); };\n  @Input('fxHide.lt-lg') set hideLtLg(val) { this._cacheInput('showLtLg', negativeOf(val)); };\n  @Input('fxHide.lt-xl') set hideLtXl(val) { this._cacheInput('showLtXl', negativeOf(val)); };\n\n  @Input('fxHide.gt-xs') set hideGtXs(val) {this._cacheInput('showGtXs', negativeOf(val)); };\n  @Input('fxHide.gt-sm') set hideGtSm(val) {this._cacheInput('showGtSm', negativeOf(val)); };\n  @Input('fxHide.gt-md') set hideGtMd(val) {this._cacheInput('showGtMd', negativeOf(val)); };\n  @Input('fxHide.gt-lg') set hideGtLg(val) {this._cacheInput('showGtLg', negativeOf(val)); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n              @Optional() @Self() protected layout: LayoutDirective,\n              protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n\n    super(monitor, elRef, styleUtils);\n\n    if (layout) {\n      /**\n       * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.\n       * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS\n       */\n      this._layoutWatcher = layout.layout$.subscribe(() => this._updateWithValue());\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected _getDisplayStyle(): string {\n    return this.layout ? 'flex' : super._getDisplayStyle();\n  }\n\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.hasInitialized && (changes['show'] != null || this._mqActivation)) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    let value = this._getDefaultVal('show', true);\n    // Build _mqActivation controller\n    this._listenForMediaQueryChanges('show', value, (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected _updateWithValue(value?: string|number|boolean) {\n    value = value || this._getDefaultVal('show', true);\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    let shouldShow = this._validateTruthy(value);\n    this._applyStyleToElement(this._buildCSS(shouldShow));\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n  }\n\n\n  /** Build the CSS that should be assigned to the element instance */\n  protected _buildCSS(show) {\n    return {'display': show ? this._display : 'none'};\n  }\n\n  /**  Validate the to be not FALSY */\n  _validateTruthy(show) {\n    return (FALSY.indexOf(show) == -1);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/**\n * NgStyle allowed inputs\n */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\n/**\n * Transform Operators for @angular/flex-layout NgStyle Directive\n */\nexport const ngStyleUtils = {\n  getType,\n  buildRawList,\n  buildMapFromList,\n  buildMapFromSet\n};\n\nfunction getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set ) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/**\n * Convert array of key:value strings to a iterable map object\n */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {});\n}\n\n/**\n * Convert Set<string> or raw Object to an iterable NgStyleMap\n */\nfunction buildMapFromSet(source: any, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list = new Array<string>();\n  if (getType(source) == 'set') {\n    source.forEach(entry => list.push(entry));\n  } else {                                // simple hashmap\n    Object.keys(source).forEach(key => {\n      list.push(`${key}:${source[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/**\n * Convert 'key:value' -> [key, value]\n */\nfunction stringToKeyValue(it: string): NgStyleKeyValue|null {\n  let [key, val] = it.split(':');\n  return val ? new NgStyleKeyValue(key, val) : null;\n}\n\n/**\n * Convert [ [key,value] ] -> { key : value }\n */\nfunction keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  KeyValueDiffers,\n  OnDestroy,\n  OnChanges,\n  Optional,\n  Renderer2,\n  SecurityContext,\n  Self,\n  SimpleChanges,\n  OnInit,\n} from '@angular/core';\nimport {NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseFxDirective,\n  BaseFxDirectiveAdapter,\n  MediaChange,\n  MediaMonitor,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  ngStyleUtils as _\n} from './style-transforms';\n\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({\n  selector: `\n    [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n    [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n    [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n  `\n})\nexport class StyleDirective extends BaseFxDirective\n    implements DoCheck, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Intercept ngStyle assignments so we cache the default styles\n   * which are merged with activated styles or used as fallbacks.\n   */\n  @Input('ngStyle')\n  set ngStyleBase(val: NgStyleType) {\n    const key = 'ngStyle';\n    this._base.cacheInput(key, val, true);  // convert val to hashmap\n    this._ngStyleInstance.ngStyle = this._base.queryInput(key);\n  }\n\n  /* tslint:disable */\n  @Input('ngStyle.xs')    set ngStyleXs(val: NgStyleType) { this._base.cacheInput('ngStyleXs', val, true); }\n  @Input('ngStyle.sm')    set ngStyleSm(val: NgStyleType) { this._base.cacheInput('ngStyleSm', val, true); };\n  @Input('ngStyle.md')    set ngStyleMd(val: NgStyleType) { this._base.cacheInput('ngStyleMd', val, true); };\n  @Input('ngStyle.lg')    set ngStyleLg(val: NgStyleType) { this._base.cacheInput('ngStyleLg', val, true); };\n  @Input('ngStyle.xl')    set ngStyleXl(val: NgStyleType) { this._base.cacheInput('ngStyleXl', val, true); };\n\n  @Input('ngStyle.lt-sm') set ngStyleLtSm(val: NgStyleType) { this._base.cacheInput('ngStyleLtSm', val, true); };\n  @Input('ngStyle.lt-md') set ngStyleLtMd(val: NgStyleType) { this._base.cacheInput('ngStyleLtMd', val, true); };\n  @Input('ngStyle.lt-lg') set ngStyleLtLg(val: NgStyleType) { this._base.cacheInput('ngStyleLtLg', val, true); };\n  @Input('ngStyle.lt-xl') set ngStyleLtXl(val: NgStyleType) { this._base.cacheInput('ngStyleLtXl', val, true); };\n\n  @Input('ngStyle.gt-xs') set ngStyleGtXs(val: NgStyleType) { this._base.cacheInput('ngStyleGtXs', val, true); };\n  @Input('ngStyle.gt-sm') set ngStyleGtSm(val: NgStyleType) { this._base.cacheInput('ngStyleGtSm', val, true); } ;\n  @Input('ngStyle.gt-md') set ngStyleGtMd(val: NgStyleType) { this._base.cacheInput('ngStyleGtMd', val, true); };\n  @Input('ngStyle.gt-lg') set ngStyleGtLg(val: NgStyleType) { this._base.cacheInput('ngStyleGtLg', val, true); };\n  /* tslint:enable */\n\n  /**\n   *  Constructor for the ngStyle subclass; which adds selectors and\n   *  a MediaQuery Activation Adapter\n   */\n  constructor(private monitor: MediaMonitor,\n              protected _sanitizer: DomSanitizer,\n              protected _ngEl: ElementRef,\n              protected _renderer: Renderer2,\n              protected _differs: KeyValueDiffers,\n              @Optional() @Self() private _ngStyleInstance: NgStyle,\n              protected _styler: StyleUtils) {\n\n    super(monitor, _ngEl, _styler);\n    this._configureAdapters();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._ngStyleInstance.ngStyle = this._base.mqActivation.activatedInput || '';\n    }\n  }\n\n\n  ngOnInit() {\n    this._configureMQListener();\n  }\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this._ngStyleInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n    delete this._ngStyleInstance;\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n     * Configure adapters (that delegate to an internal ngClass instance) if responsive\n     * keys have been defined.\n     */\n    protected _configureAdapters() {\n        this._base = new BaseFxDirectiveAdapter(\n          'ngStyle',\n          this.monitor,\n          this._ngEl,\n          this._styler\n        );\n        if (!this._ngStyleInstance) {\n          // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n          // defined on the same host element; since the responsive variations may be defined...\n          this._ngStyleInstance = new NgStyle(this._differs, this._ngEl, this._renderer);\n        }\n\n        this._buildCacheInterceptor();\n        this._fallbackToStyle();\n    }\n\n    /**\n     * Build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    protected _configureMQListener(baseKey = 'ngStyle') {\n      const fallbackValue = this._base.queryInput(baseKey);\n      this._base.listenForMediaQueryChanges(baseKey, fallbackValue, (changes: MediaChange) => {\n        this._ngStyleInstance.ngStyle = changes.value || '';\n        this._ngStyleInstance.ngDoCheck();\n      });\n    }\n\n  // ************************************************************************\n  // Private Internal Methods\n  // ************************************************************************\n\n  /**\n   * Build intercept to convert raw strings to ngStyleMap\n   */\n  protected _buildCacheInterceptor() {\n    let cacheInput = this._base.cacheInput.bind(this._base);\n    this._base.cacheInput = (key?: string, source?: any, cacheRaw = false, merge = true) => {\n      let styles = this._buildStyleMap(source);\n      if (merge) {\n        styles = extendObject({}, this._base.inputMap['ngStyle'], styles);\n      }\n      cacheInput(key, styles, cacheRaw);\n    };\n  }\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected _buildStyleMap(styles: NgStyleType) {\n    let sanitizer: NgStyleSanitizer = (val: any) => {\n      // Always safe-guard (aka sanitize) style property values\n      return this._sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    };\n    if (styles) {\n      switch ( _.getType(styles) ) {\n        case 'string':  return _.buildMapFromList(_.buildRawList(styles), sanitizer);\n        case 'array' :  return _.buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return _.buildMapFromSet(styles, sanitizer);\n        default      :  return _.buildMapFromSet(styles, sanitizer);\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * Initial lookup of raw 'class' value (if any)\n   */\n  protected _fallbackToStyle() {\n    if (!this._base.queryInput('ngStyle')) {\n      this.ngStyleBase = this._getAttributeValue('style') || '';\n    }\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the StyleDirective\n   */\n  protected _base: BaseFxDirectiveAdapter;\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {\n  BROWSER_PROVIDER,\n  CoreModule,\n  StylesheetMap,\n  StyleUtils\n} from '@angular/flex-layout/core';\n\nimport {ImgSrcDirective} from './img-src/img-src';\nimport {ClassDirective} from './class/class';\nimport {ShowHideDirective} from './show-hide/show-hide';\nimport {StyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  ShowHideDirective,\n  ClassDirective,\n  StyleDirective,\n  ImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES],\n  providers: [\n    StylesheetMap,\n    StyleUtils,\n    BROWSER_PROVIDER,\n  ]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {BEFORE_APP_SERIALIZED} from '@angular/platform-server';\nimport {\n  BREAKPOINTS,\n  CLASS_NAME,\n  SERVER_TOKEN,\n  BreakPoint,\n  MatchMedia,\n  StylesheetMap,\n  ServerMatchMedia\n} from '@angular/flex-layout/core';\n\n\n/**\n * Activate all of the registered breakpoints in sequence, and then\n * retrieve the associated stylings from the virtual stylesheet\n * @param serverSheet the virtual stylesheet that stores styles for each\n *        element\n * @param matchMedia the service to activate/deactive breakpoints\n * @param breakpoints the registered breakpoints to activate/deactivate\n */\nexport function generateStaticFlexLayoutStyles(serverSheet: StylesheetMap,\n                                               matchMedia: MatchMedia,\n                                               breakpoints: BreakPoint[]) {\n  // Store the custom classes in the following map, that way only\n  // one class gets allocated per HTMLElement, and each class can\n  // be referenced in the static media queries\n  const classMap = new Map<HTMLElement, string>();\n\n  // Get the initial stylings for all of the directives, and initialize\n  // the fallback block of stylings, then reverse the breakpoints list\n  // to traverse in the proper order\n  const defaultStyles = new Map(serverSheet.stylesheet);\n  let styleText = generateCss(defaultStyles, 'all', classMap);\n\n  breakpoints.reverse();\n  breakpoints.forEach((bp, i) => {\n    serverSheet.clearStyles();\n    (matchMedia as ServerMatchMedia).activateBreakpoint(bp);\n    const stylesheet = new Map(serverSheet.stylesheet);\n    if (stylesheet.size > 0) {\n      styleText += generateCss(stylesheet, bp.mediaQuery, classMap);\n    }\n    (matchMedia as ServerMatchMedia).deactivateBreakpoint(breakpoints[i]);\n  });\n\n  return styleText;\n}\n\n/**\n * Create a style tag populated with the dynamic stylings from Flex\n * components and attach it to the head of the DOM\n */\nexport function FLEX_SSR_SERIALIZER_FACTORY(serverSheet: StylesheetMap,\n                                            matchMedia: MatchMedia,\n                                            _document: Document,\n                                            breakpoints: BreakPoint[]) {\n  return () => {\n    // This is the style tag that gets inserted into the head of the DOM,\n    // populated with the manual media queries\n    const styleTag = _document.createElement('style');\n    const styleText = generateStaticFlexLayoutStyles(serverSheet, matchMedia, breakpoints);\n    styleTag.classList.add(`${CLASS_NAME}ssr`);\n    styleTag.textContent = styleText;\n    _document.head.appendChild(styleTag);\n  };\n}\n\n/**\n *  Provider to set static styles on the server\n */\nexport const SERVER_PROVIDERS = [\n  {\n    provide: <InjectionToken<() => void>>BEFORE_APP_SERIALIZED,\n    useFactory: FLEX_SSR_SERIALIZER_FACTORY,\n    deps: [\n      StylesheetMap,\n      MatchMedia,\n      DOCUMENT,\n      BREAKPOINTS,\n    ],\n    multi: true\n  },\n  {\n    provide: SERVER_TOKEN,\n    useValue: true\n  },\n  {\n    provide: MatchMedia,\n    useClass: ServerMatchMedia\n  }\n];\n\n\nlet nextId = 0;\nconst IS_DEBUG_MODE = false;\n\nexport type StyleSheet = Map<HTMLElement, Map<string, string|number>>;\nexport type ClassMap = Map<HTMLElement, string>;\n\n/**\n * create @media queries based on a virtual stylesheet\n * * Adds a unique class to each element and stores it\n *   in a shared classMap for later reuse\n * @param stylesheet the virtual stylesheet that stores styles for each\n *        element\n * @param mediaQuery the given @media CSS selector for the current breakpoint\n * @param classMap the map of HTML elements to class names to avoid duplications\n */\nfunction generateCss(stylesheet: StyleSheet, mediaQuery: string, classMap: ClassMap) {\n  let css = '';\n  stylesheet.forEach((styles, el) => {\n    let keyVals = '', className = getClassName(el, classMap);\n\n    styles.forEach((v, k) => {\n      keyVals += v ? format(`${k}:${v};`) : '';\n    });\n\n    // Build list of CSS styles; each with a className\n    css += format(`.${className} {`, keyVals, '}');\n  });\n\n  // Group 1 or more styles (each with className) in a specific mediaQuery\n  return format(`@media ${mediaQuery} {`, css, '}');\n}\n\n/**\n * For debugging purposes, prefix css segment with linefeed(s) for easy\n  * debugging purposes.\n */\nfunction format(...list: string[]): string {\n  let result = '';\n  list.forEach((css, i) => {\n    result += IS_DEBUG_MODE ? formatSegment(css, i != 0) : css;\n  });\n  return result;\n}\n\nfunction formatSegment(css: string, asPrefix: boolean = true): string {\n  return asPrefix ? '\\n' + css : css + '\\n';\n}\n\n/**\n * Get className associated with CSS styling\n * If not found, generate global className and set\n * association.\n */\nfunction  getClassName(stylesheet, classMap) {\n  let className = classMap.get(stylesheet);\n   if (!className) {\n     className = `${CLASS_NAME}${nextId++}`;\n     classMap.set(stylesheet, className);\n   }\n   stylesheet.classList.add(className);\n\n   return className;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {SERVER_PROVIDERS} from './server-provider';\n\n@NgModule({\n  providers: [SERVER_PROVIDERS]\n})\nexport class FlexLayoutServerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('5.0.0-beta.13-95a6e83');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, ModuleWithProviders, NgModule, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BreakPoint,\n  BreakPointProviderOptions,\n  CUSTOM_BREAKPOINTS_PROVIDER_FACTORY,\n  CoreModule,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\n\n\n/**\n * Since the equivalent results are easily achieved with a css class attached to each\n * layout child, these have been deprecated and removed from the API.\n *\n *  import {LayoutPaddingDirective} from './api/flexbox/layout-padding';\n *  import {LayoutMarginDirective} from './api/flexbox/layout-margin';\n */\n\n/**\n *\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, CoreModule],\n  exports: [FlexModule, ExtendedModule, CoreModule]\n})\nexport class FlexLayoutModule {\n\n  constructor (\n    @Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n\n  /**\n   * External uses can easily add custom breakpoints AND include internal orientations\n   * breakpoints; which are not available by default.\n   *\n   * !! Selector aliases are not auto-configured. Developers must subclass\n   * the API directives to support extra selectors for the orientations breakpoints !!\n   */\n  static provideBreakPoints(breakpoints: BreakPoint[],\n                            options?: BreakPointProviderOptions): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: [\n        CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(breakpoints, options || {orientations: false})\n      ]\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\nimport {Observable} from 'rxjs/Observable';\nimport {ReplaySubject} from 'rxjs/ReplaySubject';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive({selector: `\n  [fxLayout],\n  [fxLayout.xs], [fxLayout.sm], [fxLayout.md], [fxLayout.lg], [fxLayout.xl],\n  [fxLayout.lt-sm], [fxLayout.lt-md], [fxLayout.lt-lg], [fxLayout.lt-xl],\n  [fxLayout.gt-xs], [fxLayout.gt-sm], [fxLayout.gt-md], [fxLayout.gt-lg]\n`})\nexport class LayoutDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Create Observable for nested/child 'flex' directives. This allows\n   * child flex directives to subscribe/listen for flexbox direction changes.\n   */\n  protected _announcer: ReplaySubject<string>;\n\n  /**\n   * Publish observer to enabled nested, dependent directives to listen\n   * to parent 'layout' direction changes\n   */\n  layout$: Observable<string>;\n\n  /* tslint:disable */\n  @Input('fxLayout')       set layout(val)     { this._cacheInput('layout', val); };\n  @Input('fxLayout.xs')    set layoutXs(val)   { this._cacheInput('layoutXs', val); };\n  @Input('fxLayout.sm')    set layoutSm(val)   { this._cacheInput('layoutSm', val); };\n  @Input('fxLayout.md')    set layoutMd(val)   { this._cacheInput('layoutMd', val); };\n  @Input('fxLayout.lg')    set layoutLg(val)   { this._cacheInput('layoutLg', val); };\n  @Input('fxLayout.xl')    set layoutXl(val)   { this._cacheInput('layoutXl', val); };\n\n  @Input('fxLayout.gt-xs') set layoutGtXs(val) { this._cacheInput('layoutGtXs', val); };\n  @Input('fxLayout.gt-sm') set layoutGtSm(val) { this._cacheInput('layoutGtSm', val); };\n  @Input('fxLayout.gt-md') set layoutGtMd(val) { this._cacheInput('layoutGtMd', val); };\n  @Input('fxLayout.gt-lg') set layoutGtLg(val) { this._cacheInput('layoutGtLg', val); };\n\n  @Input('fxLayout.lt-sm') set layoutLtSm(val) { this._cacheInput('layoutLtSm', val); };\n  @Input('fxLayout.lt-md') set layoutLtMd(val) { this._cacheInput('layoutLtMd', val); };\n  @Input('fxLayout.lt-lg') set layoutLtLg(val) { this._cacheInput('layoutLtLg', val); };\n  @Input('fxLayout.lt-xl') set layoutLtXl(val) { this._cacheInput('layoutLtXl', val); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n    this._announcer = new ReplaySubject<string>(1);\n    this.layout$ = this._announcer.asObservable();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxLayout')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['layout'] != null || this._mqActivation) {\n      this._updateWithDirection();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('layout', 'row', (changes: MediaChange) => {\n      this._updateWithDirection(changes.value);\n    });\n    this._updateWithDirection();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Validate the direction value and then update the host's inline flexbox styles\n   */\n  protected _updateWithDirection(value?: string) {\n    value = value || this._queryInput('layout') || 'row';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Update styles and announce to subscribers the *new* direction\n    let css = buildLayoutCSS(!!value ? value : '');\n\n    this._applyStyleToElement(css);\n    this._announcer.next(css['flex-direction']);\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  Self,\n  AfterContentInit,\n  Optional,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {LayoutDirective} from '../layout/layout';\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n@Directive({\n  selector: `\n  [fxLayoutGap],\n  [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md], [fxLayoutGap.lg], [fxLayoutGap.xl],\n  [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md], [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl],\n  [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm], [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`\n})\nexport class LayoutGapDirective extends BaseFxDirective\n  implements AfterContentInit, OnChanges, OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n  protected _observer: MutationObserver;\n  private _directionWatcher: Subscription;\n\n  /* tslint:disable */\n @Input('fxLayoutGap')       set gap(val) { this._cacheInput('gap', val); }\n @Input('fxLayoutGap.xs')    set gapXs(val) { this._cacheInput('gapXs', val); }\n @Input('fxLayoutGap.sm')    set gapSm(val) { this._cacheInput('gapSm', val); };\n @Input('fxLayoutGap.md')    set gapMd(val) { this._cacheInput('gapMd', val); };\n @Input('fxLayoutGap.lg')    set gapLg(val) { this._cacheInput('gapLg', val); };\n @Input('fxLayoutGap.xl')    set gapXl(val) { this._cacheInput('gapXl', val); };\n\n @Input('fxLayoutGap.gt-xs') set gapGtXs(val) { this._cacheInput('gapGtXs', val); };\n @Input('fxLayoutGap.gt-sm') set gapGtSm(val) { this._cacheInput('gapGtSm', val); };\n @Input('fxLayoutGap.gt-md') set gapGtMd(val) { this._cacheInput('gapGtMd', val); };\n @Input('fxLayoutGap.gt-lg') set gapGtLg(val) { this._cacheInput('gapGtLg', val); };\n\n @Input('fxLayoutGap.lt-sm') set gapLtSm(val) { this._cacheInput('gapLtSm', val); };\n @Input('fxLayoutGap.lt-md') set gapLtMd(val) { this._cacheInput('gapLtMd', val); };\n @Input('fxLayoutGap.lt-lg') set gapLtLg(val) { this._cacheInput('gapLtLg', val); };\n @Input('fxLayoutGap.lt-xl') set gapLtXl(val) { this._cacheInput('gapLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              @Optional() @Self() container: LayoutDirective,\n              private _zone: NgZone,\n              private _directionality: Directionality,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n    this._directionWatcher =\n        this._directionality.change.subscribe(this._updateWithValue.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['gap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngAfterContentInit() {\n    this._watchContentChanges();\n    this._listenForMediaQueryChanges('gap', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n    if (this._directionWatcher) {\n      this._directionWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Watch for child nodes to be added... and apply the layout gap styles to each.\n   * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n   */\n  protected _watchContentChanges() {\n    this._zone.runOutsideAngular(() => {\n\n      if (typeof MutationObserver !== 'undefined') {\n        this._observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n                (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this._updateWithValue();\n          }\n        });\n        this._observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n    this._updateWithValue();\n  }\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('gap') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this._getDisplayStyle(el) != 'none')\n      .sort((a, b) => {\n        const orderA = +this._styler.lookupStyle(a, 'order');\n        const orderB = +this._styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const lastItem = items.pop();\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      this._applyStyleToElements(this._buildCSS(value), items);\n\n      // Clear all gaps for all visible elements\n      this._applyStyleToElements(this._buildCSS(), [lastItem]);\n    }\n  }\n\n  /**\n   * Prepare margin CSS, remove any previous explicitly\n   * assigned margin assignments\n   */\n  private _buildCSS(value: any = null) {\n    let key, margins = {\n      'margin-left': null,\n      'margin-right': null,\n      'margin-top': null,\n      'margin-bottom': null\n    };\n\n    switch (this._layout) {\n      case 'column':\n      case 'column-reverse':\n        key = 'margin-bottom';\n        break;\n      case 'row' :\n      case 'row-reverse':\n      default :\n        key = this._directionality.value === 'rtl' ? 'margin-left' : 'margin-right';\n        break;\n    }\n    margins[key] = value;\n\n    return margins;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LayoutDirective} from '../layout/layout';\nimport {validateBasis} from '../../utils/basis-validator';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\n\n/** Built-in aliases for different flex-basis values. */\nexport type FlexBasisAlias = 'grow' | 'initial' | 'auto' | 'none' | 'nogrow' | 'noshrink';\n\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive({selector: `\n  [fxFlex],\n  [fxFlex.xs], [fxFlex.sm], [fxFlex.md], [fxFlex.lg], [fxFlex.xl],\n  [fxFlex.lt-sm], [fxFlex.lt-md], [fxFlex.lt-lg], [fxFlex.lt-xl],\n  [fxFlex.gt-xs], [fxFlex.gt-sm], [fxFlex.gt-md], [fxFlex.gt-lg],\n`\n})\nexport class FlexDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /** The flex-direction of this element's flex container. Defaults to 'row'. */\n  protected _layout: string;\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShrink')     set shrink(val)    { this._cacheInput('shrink', val); };\n  @Input('fxGrow')       set grow(val)      { this._cacheInput('grow', val); };\n\n  @Input('fxFlex')       set flex(val)      { this._cacheInput('flex', val); };\n  @Input('fxFlex.xs')    set flexXs(val)    { this._cacheInput('flexXs', val); };\n  @Input('fxFlex.sm')    set flexSm(val)    { this._cacheInput('flexSm', val); };\n  @Input('fxFlex.md')    set flexMd(val)    { this._cacheInput('flexMd', val); };\n  @Input('fxFlex.lg')    set flexLg(val)    { this._cacheInput('flexLg', val); };\n  @Input('fxFlex.xl')    set flexXl(val)    { this._cacheInput('flexXl', val); };\n\n  @Input('fxFlex.gt-xs') set flexGtXs(val)  { this._cacheInput('flexGtXs', val); };\n  @Input('fxFlex.gt-sm') set flexGtSm(val)  { this._cacheInput('flexGtSm', val); };\n  @Input('fxFlex.gt-md') set flexGtMd(val)  { this._cacheInput('flexGtMd', val); };\n  @Input('fxFlex.gt-lg') set flexGtLg(val)  { this._cacheInput('flexGtLg', val); };\n\n  @Input('fxFlex.lt-sm') set flexLtSm(val) { this._cacheInput('flexLtSm', val); };\n  @Input('fxFlex.lt-md') set flexLtMd(val) { this._cacheInput('flexLtMd', val); };\n  @Input('fxFlex.lt-lg') set flexLtLg(val) { this._cacheInput('flexLtLg', val); };\n  @Input('fxFlex.lt-xl') set flexLtXl(val) { this._cacheInput('flexLtXl', val); };\n  /* tslint:enable */\n\n  // Note: Explicitly @SkipSelf on LayoutDirective because we are looking\n  //       for the parent flex container for this flex item.\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              protected styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    this._cacheInput('flex', '');\n    this._cacheInput('shrink', 1);\n    this._cacheInput('grow', 1);\n\n    if (_container) {\n      // If this flex item is inside of a flex container marked with\n      // Subscribe to layout immediate parent direction changes\n      this._layoutWatcher = _container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['flex'] != null || this._mqActivation) {\n      this._updateStyle();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('flex', '', (changes: MediaChange) => {\n      this._updateStyle(changes.value);\n    });\n    this._updateStyle();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateStyle();\n  }\n\n  protected _updateStyle(value?: string|number) {\n    let flexBasis = value || this._queryInput('flex') || '';\n    if (this._mqActivation) {\n      flexBasis = this._mqActivation.activatedInput;\n    }\n\n    let basis = String(flexBasis).replace(';', '');\n    let parts = validateBasis(basis, this._queryInput('grow'), this._queryInput('shrink'));\n    this._applyStyleToElement(this._validateValue.apply(this, parts));\n  }\n\n  /**\n   * Validate the value to be one of the acceptable value options\n   * Use default fallback of 'row'\n   */\n  protected _validateValue(grow: number|string,\n                           shrink: number|string,\n                           basis: string|number|FlexBasisAlias) {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    let layout = this._getFlowDirection(this.parentElement, true);\n    let direction = (layout.indexOf('column') > -1) ? 'column' : 'row';\n    let css, isValue;\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    let clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        css = extendObject(clearStyles, {'flex': `${grow} ${shrink} 0.000000001px`});\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        css = extendObject(clearStyles, {'flex': '0 1 auto'});\n        break;\n      case 'grow':\n        css = extendObject(clearStyles, {'flex': '1 1 100%'});\n        break;\n      case 'noshrink':\n        shrink = 0;\n        css = extendObject(clearStyles, {'flex': '1 0 auto'});\n        break;\n      case 'auto':\n        css = extendObject(clearStyles, {'flex': `${grow} ${shrink} auto`});\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        css = extendObject(clearStyles, {'flex': '0 0 auto'});\n        break;\n      default:\n        let hasCalc = String(basis).indexOf('calc') > -1;\n        let isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n\n        isValue = hasCalc ||\n            String(basis).indexOf('px') > -1 ||\n            String(basis).indexOf('em') > -1 ||\n            String(basis).indexOf('vw') > -1 ||\n            String(basis).indexOf('vh') > -1;\n\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        css = extendObject(clearStyles, { // fix issue #5345\n          'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n        });\n        break;\n    }\n\n    let max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    let min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    let usingCalc = (String(basis).indexOf('calc') > -1) || (basis == 'auto');\n    let isPx = String(basis).indexOf('px') > -1 || usingCalc;\n\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    let isFixed = !grow && !shrink;\n    css[min] = (basis == '0%') ? 0 : isFixed || (isPx && grow) ? basis : null;\n    css[max] = (basis == '0%') ? 0 : isFixed || (!usingCalc && shrink) ? basis : null;\n\n    return extendObject(css, {'box-sizing': 'border-box'});\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\n\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n@Directive({selector: `\n  [fxFlexOrder],\n  [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md], [fxFlexOrder.lg], [fxFlexOrder.xl],\n  [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md], [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl],\n  [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm], [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`})\nexport class FlexOrderDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOrder')       set order(val)     { this._cacheInput('order', val); }\n  @Input('fxFlexOrder.xs')    set orderXs(val)   { this._cacheInput('orderXs', val); }\n  @Input('fxFlexOrder.sm')    set orderSm(val)   { this._cacheInput('orderSm', val); };\n  @Input('fxFlexOrder.md')    set orderMd(val)   { this._cacheInput('orderMd', val); };\n  @Input('fxFlexOrder.lg')    set orderLg(val)   { this._cacheInput('orderLg', val); };\n  @Input('fxFlexOrder.xl')    set orderXl(val)   { this._cacheInput('orderXl', val); };\n\n  @Input('fxFlexOrder.gt-xs') set orderGtXs(val) { this._cacheInput('orderGtXs', val); };\n  @Input('fxFlexOrder.gt-sm') set orderGtSm(val) { this._cacheInput('orderGtSm', val); };\n  @Input('fxFlexOrder.gt-md') set orderGtMd(val) { this._cacheInput('orderGtMd', val); };\n  @Input('fxFlexOrder.gt-lg') set orderGtLg(val) { this._cacheInput('orderGtLg', val); };\n\n  @Input('fxFlexOrder.lt-sm') set orderLtSm(val) { this._cacheInput('orderLtSm', val); };\n  @Input('fxFlexOrder.lt-md') set orderLtMd(val) { this._cacheInput('orderLtMd', val); };\n  @Input('fxFlexOrder.lt-lg') set orderLtLg(val) { this._cacheInput('orderLtLg', val); };\n  @Input('fxFlexOrder.lt-xl') set orderLtXl(val) { this._cacheInput('orderLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['order'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('order', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('order') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n\n  protected _buildCSS(value) {\n    value = parseInt(value, 10);\n    return {order: isNaN(value) ? 0 : value};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseFxDirective,\n  MediaChange,\n  MediaMonitor,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {LayoutDirective} from '../layout/layout';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive({selector: `\n  [fxFlexOffset],\n  [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md], [fxFlexOffset.lg], [fxFlexOffset.xl],\n  [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md], [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl],\n  [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm], [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`})\nexport class FlexOffsetDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n  private _directionWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxFlexOffset')       set offset(val)     { this._cacheInput('offset', val); }\n  @Input('fxFlexOffset.xs')    set offsetXs(val)   { this._cacheInput('offsetXs', val); }\n  @Input('fxFlexOffset.sm')    set offsetSm(val)   { this._cacheInput('offsetSm', val); };\n  @Input('fxFlexOffset.md')    set offsetMd(val)   { this._cacheInput('offsetMd', val); };\n  @Input('fxFlexOffset.lg')    set offsetLg(val)   { this._cacheInput('offsetLg', val); };\n  @Input('fxFlexOffset.xl')    set offsetXl(val)   { this._cacheInput('offsetXl', val); };\n\n  @Input('fxFlexOffset.lt-sm') set offsetLtSm(val) { this._cacheInput('offsetLtSm', val); };\n  @Input('fxFlexOffset.lt-md') set offsetLtMd(val) { this._cacheInput('offsetLtMd', val); };\n  @Input('fxFlexOffset.lt-lg') set offsetLtLg(val) { this._cacheInput('offsetLtLg', val); };\n  @Input('fxFlexOffset.lt-xl') set offsetLtXl(val) { this._cacheInput('offsetLtXl', val); };\n\n  @Input('fxFlexOffset.gt-xs') set offsetGtXs(val) { this._cacheInput('offsetGtXs', val); };\n  @Input('fxFlexOffset.gt-sm') set offsetGtSm(val) { this._cacheInput('offsetGtSm', val); };\n  @Input('fxFlexOffset.gt-md') set offsetGtMd(val) { this._cacheInput('offsetGtMd', val); };\n  @Input('fxFlexOffset.gt-lg') set offsetGtLg(val) { this._cacheInput('offsetGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              private _directionality: Directionality,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    this._directionWatcher =\n        this._directionality.change.subscribe(this._updateWithValue.bind(this));\n\n    this.watchParentFlow();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['offset'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * Cleanup\n   */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._directionWatcher) {\n      this._directionWatcher.unsubscribe();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('offset', 0 , (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** The flex-direction of this element's host container. Defaults to 'row'. */\n  protected _layout = 'row';\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /**\n   * If parent flow-direction changes, then update the margin property\n   * used to offset\n   */\n  protected watchParentFlow() {\n    if (this._container) {\n      // Subscribe to layout immediate parent direction changes (if any)\n      this._layoutWatcher = this._container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateWithValue();\n  }\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('offset') || 0;\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(offset): StyleDefinition {\n    let isPercent = String(offset).indexOf('%') > -1;\n    let isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(offset)) {\n      offset = offset + '%';\n    }\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const isRtl = this._directionality.value === 'rtl';\n    const layout = this._getFlowDirection(this.parentElement, true);\n    const horizontalLayoutKey = isRtl ? 'margin-right' : 'margin-left';\n\n    return isFlowHorizontal(layout) ? {[horizontalLayoutKey]: `${offset}`} :\n                                      {'margin-top': `${offset}`};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\n\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n@Directive({\n  selector: `\n  [fxFlexAlign],\n  [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md], [fxFlexAlign.lg], [fxFlexAlign.xl],\n  [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md], [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl],\n  [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm], [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`\n})\nexport class FlexAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexAlign')       set align(val)  { this._cacheInput('align', val);  };\n  @Input('fxFlexAlign.xs')    set alignXs(val)  { this._cacheInput('alignXs', val);  };\n  @Input('fxFlexAlign.sm')    set alignSm(val)  { this._cacheInput('alignSm', val); };\n  @Input('fxFlexAlign.md')    set alignMd(val)  { this._cacheInput('alignMd', val); };\n  @Input('fxFlexAlign.lg')    set alignLg(val)  { this._cacheInput('alignLg', val); };\n  @Input('fxFlexAlign.xl')    set alignXl(val)  { this._cacheInput('alignXl', val); };\n\n  @Input('fxFlexAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxFlexAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxFlexAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxFlexAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  @Input('fxFlexAlign.gt-xs') set alignGtXs(val)  { this._cacheInput('alignGtXs', val); };\n  @Input('fxFlexAlign.gt-sm') set alignGtSm(val)  { this._cacheInput('alignGtSm', val); };\n  @Input('fxFlexAlign.gt-md') set alignGtMd(val)  { this._cacheInput('alignGtMd', val); };\n  @Input('fxFlexAlign.gt-lg') set alignGtLg(val)  { this._cacheInput('alignGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('align', 'stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('align') || 'stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(align) {\n    let css = {};\n\n    // Cross-axis\n    switch (align) {\n      case 'start':\n        css['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        css['align-self'] = 'flex-end';\n        break;\n      default:\n        css['align-self'] = align;\n        break;\n    }\n\n    return css;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef} from '@angular/core';\nimport {BaseFxDirective, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\n\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `\n  [fxFill],\n  [fxFlexFill]\n`})\nexport class FlexFillDirective extends BaseFxDirective {\n  constructor(monitor: MediaMonitor,\n              public elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n    this._applyStyleToElement(FLEX_FILL_CSS);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  Self,\n} from '@angular/core';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LayoutDirective} from '../layout/layout';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n@Directive({selector: `\n  [fxLayoutAlign],\n  [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md], [fxLayoutAlign.lg],[fxLayoutAlign.xl],\n  [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md], [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl],\n  [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm], [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`})\nexport class LayoutAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxLayoutAlign')       set align(val)     { this._cacheInput('align', val); }\n  @Input('fxLayoutAlign.xs')    set alignXs(val)   { this._cacheInput('alignXs', val); }\n  @Input('fxLayoutAlign.sm')    set alignSm(val)   { this._cacheInput('alignSm', val); };\n  @Input('fxLayoutAlign.md')    set alignMd(val)   { this._cacheInput('alignMd', val); };\n  @Input('fxLayoutAlign.lg')    set alignLg(val)   { this._cacheInput('alignLg', val); };\n  @Input('fxLayoutAlign.xl')    set alignXl(val)   { this._cacheInput('alignXl', val); };\n\n  @Input('fxLayoutAlign.gt-xs') set alignGtXs(val) { this._cacheInput('alignGtXs', val); };\n  @Input('fxLayoutAlign.gt-sm') set alignGtSm(val) { this._cacheInput('alignGtSm', val); };\n  @Input('fxLayoutAlign.gt-md') set alignGtMd(val) { this._cacheInput('alignGtMd', val); };\n  @Input('fxLayoutAlign.gt-lg') set alignGtLg(val) { this._cacheInput('alignGtLg', val); };\n\n  @Input('fxLayoutAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxLayoutAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxLayoutAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxLayoutAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  /* tslint:enable */\n  constructor(\n      monitor: MediaMonitor,\n      elRef: ElementRef,\n      @Optional() @Self() container: LayoutDirective,\n      styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('align', 'start stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if ( this._layoutWatcher ) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n    this._allowStretching(value, !this._layout ? 'row' : this._layout);\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n\n    let value = this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n    this._allowStretching(value, this._layout || 'row');\n  }\n\n  protected _buildCSS(align) {\n    let css = {}, [main_axis, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    // Main axis\n    switch (main_axis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (cross_axis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'baseline':\n        css['align-items'] = 'baseline';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : this._layout || 'row',\n      'box-sizing' : 'border-box'\n    });\n  }\n\n\n  /**\n   * Update container element to 'stretch' as needed...\n   * NOTE: this is only done if the crossAxis is explicitly set to 'stretch'\n   */\n  protected _allowStretching(align, layout) {\n    let [, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    if (cross_axis == 'stretch') {\n      // Use `null` values to remove style\n      this._applyStyleToElement({\n        'box-sizing': 'border-box',\n        'max-width': !isFlowHorizontal(layout) ? '100%' : null,\n        'max-height': isFlowHorizontal(layout) ? '100%' : null\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {\n  BROWSER_PROVIDER,\n  CoreModule,\n  StylesheetMap,\n  StyleUtils\n} from '@angular/flex-layout/core';\n\nimport {LayoutDirective} from './layout/layout';\nimport {LayoutGapDirective} from './layout-gap/layout-gap';\nimport {FlexDirective} from './flex/flex';\nimport {FlexOrderDirective} from './flex-order/flex-order';\nimport {FlexOffsetDirective} from './flex-offset/flex-offset';\nimport {FlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {LayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  LayoutDirective,\n  LayoutGapDirective,\n  LayoutAlignDirective,\n  FlexDirective,\n  FlexOrderDirective,\n  FlexOffsetDirective,\n  FlexFillDirective,\n  FlexAlignDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES],\n  providers: [\n    StylesheetMap,\n    StyleUtils,\n    BROWSER_PROVIDER,\n  ]\n})\nexport class FlexModule {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n      const classRegex = new RegExp(/\\bflex-layout-.+?\\b/, 'g');\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operators/filter';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable()\nexport class MatchMedia {\n  protected _registry: Map<string, MediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    this._registry = new Map<string, MediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    let mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    if (mediaQuery) {\n      this.registerQuery(mediaQuery);\n    }\n\n    return this._observable$.pipe(\n      filter((change: MediaChange) => {\n        return mediaQuery ? (change.mediaQuery === mediaQuery) : true;\n      })\n    );\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    let list = normalizeQuery(mediaQuery);\n\n    if (list.length > 0) {\n      this._prepareQueryCSS(list, this._document);\n\n      list.forEach(query => {\n        let mql = this._registry.get(query);\n        let onMQLEvent = (e: MediaQueryList) => {\n          this._zone.run(() => {\n            let change = new MediaChange(e.matches, query);\n            this._source.next(change);\n          });\n        };\n\n        if (!mql) {\n          mql = this._buildMQL(query);\n          mql.addListener(onMQLEvent);\n          this._registry.set(query, mql);\n        }\n\n        if (mql.matches) {\n          onMQLEvent(mql);  // Announce activate range for initial subscribers\n        }\n      });\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    let canListen = isPlatformBrowser(this._platformId) &&\n      !!(<any>window).matchMedia('all').addListener;\n\n    return canListen ? (<any>window).matchMedia(query) : <MediaQueryList>{\n      matches: query === 'all' || query === '',\n      media: query,\n      addListener: () => {\n      },\n      removeListener: () => {\n      }\n    };\n  }\n\n  /**\n   * For Webkit engines that only trigger the MediaQueryList Listener\n   * when there is at least one CSS selector for the respective media query.\n   *\n   * @param query string The mediaQuery used to create a faux CSS selector\n   *\n   */\n  protected _prepareQueryCSS(mediaQueries: string[], _document: Document) {\n    let list = mediaQueries.filter(it => !ALL_STYLES[it]);\n    if (list.length > 0) {\n      let query = list.join(', ');\n\n      try {\n        let styleEl = _document.createElement('style');\n\n        styleEl.setAttribute('type', 'text/css');\n        if (!styleEl['styleSheet']) {\n          let cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n` ;\n          styleEl.appendChild(_document.createTextNode(cssText));\n        }\n\n        _document.head.appendChild(styleEl);\n\n        // Store in private global registry\n        list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n\n/**\n * Always convert to unique list of queries; for iteration in ::registerQuery()\n */\nfunction normalizeQuery(mediaQuery: string | string[]): string[] {\n  return (typeof mediaQuery === 'undefined') ? [] :\n      (typeof mediaQuery === 'string') ? [mediaQuery] : unique(mediaQuery as string[]);\n}\n\n/**\n * Filter duplicate mediaQueries in the list\n */\nfunction unique(list: string[]): string[] {\n  let seen = {};\n  return list.filter(item => {\n    return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n  });\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {extendObject} from '../utils/object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null) {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {ObservableMedia, MediaService} from './observable-media';\n\n/**\n * Ensure a single global ObservableMedia service provider\n */\nexport function OBSERVABLE_MEDIA_PROVIDER_FACTORY(parentService: ObservableMedia,\n                                                  matchMedia: MatchMedia,\n                                                  breakpoints: BreakPointRegistry) {\n  return parentService || new MediaService(breakpoints, matchMedia);\n}\n/**\n *  Provider to return global service for observable service for all MediaQuery activations\n */\nexport const OBSERVABLE_MEDIA_PROVIDER = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  deps: [\n    [ new Optional(), new SkipSelf(), ObservableMedia ],\n    MatchMedia,\n    BreakPointRegistry\n  ],\n  useFactory: OBSERVABLE_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix || bp.suffix === '') {\n      bp.suffix = camelCase(bp.alias);          // create Suffix value based on alias\n      bp.overlapping = bp.overlapping || false; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const merged = defaults.map((bp) => extendObject({}, bp));\n  const findByAlias = (alias) => merged.reduce((result, bp) => {\n    return result || (( bp.alias === alias) ? bp : null);\n  }, null);\n\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    let target = findByAlias(bp.alias);\n    if (target) {\n      extendObject(target, bp);\n    } else {\n      merged.push(bp);\n    }\n  });\n\n  return validateSuffixes(merged);\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {DEFAULT_BREAKPOINTS} from './data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from './data/orientation-break-points';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {mergeByAlias, validateSuffixes} from './breakpoint-tools';\n\n\n/**\n * Options to identify which breakpoint types to include as part of\n * a BreakPoint provider\n */\nexport interface BreakPointProviderOptions {\n  /**\n   * include pre-configured, internal default breakpoints.\n   * @default 'true'\n   */\n  defaults ?: boolean;\n  /**\n   * include pre-configured, internal orientations breakpoints.\n   * @default 'false'\n   */\n  orientations ?: boolean;\n}\n\n/**\n * Add new custom items to the default list or override existing default with custom overrides\n */\nexport function buildMergedBreakPoints(_custom?: BreakPoint[],\n                                       options?: BreakPointProviderOptions) {\n  options = extendObject({}, {\n        defaults: true,       // exclude pre-configured, internal default breakpoints\n        orientation: false      // exclude pre-configured, internal orientations breakpoints\n  }, options || {});\n\n  return () => {\n    // Order so the defaults are loaded last; so ObservableMedia will report these last!\n    let defaults = (options && options.orientations) ?\n      ORIENTATION_BREAKPOINTS.concat(DEFAULT_BREAKPOINTS) : DEFAULT_BREAKPOINTS;\n\n    return (options && options.defaults) ?\n      mergeByAlias(defaults, _custom || []) : mergeByAlias(_custom || []);\n  };\n}\n\n/**\n *  Ensure that only a single global BreakPoint list is instantiated...\n */\nexport function DEFAULT_BREAKPOINTS_PROVIDER_FACTORY() {\n  return validateSuffixes(DEFAULT_BREAKPOINTS);\n}\n/**\n * Default Provider that does not support external customization nor provide\n * the extra extended breakpoints:   \"handset\", \"tablet\", and \"web\"\n *\n *  NOTE: !! breakpoints are considered to have unique 'alias' properties,\n *        custom breakpoints matching existing breakpoints will override the properties\n *        of the existing (and not be added as an extra breakpoint entry).\n *        [xs, gt-xs, sm, gt-sm, md, gt-md, lg, gt-lg, xl]\n */\nexport const DEFAULT_BREAKPOINTS_PROVIDER = { // tslint:disable-line:variable-name\n  provide: BREAKPOINTS,\n  useFactory: DEFAULT_BREAKPOINTS_PROVIDER_FACTORY\n};\n/**\n * Use with FlexLayoutModule.CUSTOM_BREAKPOINTS_PROVIDER_FACTORY!\n */\nexport function CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(_custom?: BreakPoint[],\n                                                    options?: BreakPointProviderOptions) {\n  return {\n    provide: <InjectionToken<BreakPoint[]>>BREAKPOINTS,\n    useFactory: buildMergedBreakPoints(_custom, options)\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\n\n/**\n * Ensure a single global service provider\n */\nexport function MEDIA_MONITOR_PROVIDER_FACTORY(parentMonitor: MediaMonitor,\n                                               breakpoints: BreakPointRegistry,\n                                               matchMedia: MatchMedia) {\n  return parentMonitor || new MediaMonitor(breakpoints, matchMedia);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const MEDIA_MONITOR_PROVIDER = {\n  provide : MediaMonitor,\n  deps : [\n    [ new Optional(), new SkipSelf(), MediaMonitor ],\n    BreakPointRegistry,\n    MatchMedia,\n  ],\n  useFactory : MEDIA_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string;\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n    new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overriden from custom, application-specific ranges\n *\n */\n@Injectable()\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[ ] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint | null {\n    return this._registry.find(bp => bp.alias == alias) || null;\n  }\n\n  findByQuery(query: string): BreakPoint | null {\n    return this._registry.find(bp => bp.mediaQuery == query) || null;\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => !!it.suffix ? it.suffix : '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operators/filter';\nimport {map} from 'rxjs/operators/map';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\nimport {mergeAlias} from '../add-alias';\n\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n */\n@Injectable()\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    let items: BreakPoint[] = this._breakpoints.overlappings.reverse();\n    return items.filter((bp: BreakPoint) => {\n      return this._matchMedia.isActive(bp.mediaQuery);\n    });\n  }\n\n  get active(): BreakPoint | null {\n    let found: BreakPoint | null = null, items = this.breakpoints.reverse();\n    items.forEach(bp => {\n      if (bp.alias !== '') {\n        if (!found && this._matchMedia.isActive(bp.mediaQuery)) {\n          found = bp;\n        }\n      }\n    });\n\n    let first = this.breakpoints[0];\n    return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias?: string): Observable<MediaChange> {\n    let bp = this._breakpoints.findByAlias(alias || '') ||\n      this._breakpoints.findByQuery(alias || '');\n    let hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    let media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return media$.pipe(\n      map(change => mergeAlias(change, bp)),\n      filter(hasAlias)\n    );\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    let queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {Observable, Subscribable} from 'rxjs/Observable';\nimport {map} from 'rxjs/operators/map';\nimport {filter} from 'rxjs/operators/filter';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {mergeAlias} from '../add-alias';\nimport {BreakPoint} from '../breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import {filter} from 'rxjs/operators/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .pipe(\n *          filter((change:MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable()\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias): boolean {\n    let query = this._toMediaQuery(alias);\n    return this.mediaWatcher.isActive(query);\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(next?: (value: MediaChange) => void,\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    return this.observable$.subscribe(next, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    let queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const self = this;\n    const media$ = this.mediaWatcher.observe();\n    const activationsOnly = (change: MediaChange) => {\n      return change.matches === true;\n    };\n    const addAliasInformation = (change: MediaChange) => {\n      return mergeAlias(change, this._findByQuery(change.mediaQuery));\n    };\n    const excludeOverlaps = (change: MediaChange) => {\n      let bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(self.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return media$.pipe(\n      filter(activationsOnly),\n      filter(excludeOverlaps),\n      map(addAliasInformation)\n    );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query) {\n    let bp: BreakPoint | null = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private observable$: Observable<MediaChange>;\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(min-width: 0px) and (max-width: 599px)'\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)'\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)'\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)'\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)'\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)'\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)'\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)'\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)'\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)'\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1920px)'\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)'\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientations: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientations: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientations: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientations: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientations: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientations: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {MatchMedia} from './match-media/match-media';\nimport {MediaMonitor} from './media-monitor/media-monitor';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {OBSERVABLE_MEDIA_PROVIDER} from './observable-media/observable-media-provider';\nimport {DEFAULT_BREAKPOINTS_PROVIDER} from './breakpoints/break-points-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [\n    DEFAULT_BREAKPOINTS_PROVIDER,  // Supports developer overrides of list of known breakpoints\n    BreakPointRegistry,      // Registry of known/used BreakPoint(s)\n    MatchMedia,              // Low-level service to publish observables w/ window.matchMedia()\n    MediaMonitor,            // MediaQuery monitor service observes all known breakpoints\n    OBSERVABLE_MEDIA_PROVIDER  // easy subscription injectable `media$` matchMedia observable\n  ]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from './module';\n\n\n/**\n * @deprecated use Core Module instead\n * @deletion-target 5.0.0-beta.15\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n@NgModule({\n  imports: [CoreModule],\n  exports: [CoreModule],\n})\nexport class MediaQueriesModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable()\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string|number {\n    const styles = this.stylesheet.get(el);\n    return (styles && styles.get(styleName)) || '';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>('FlexLayoutServerLoaded');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs/Subscription';\nimport {map} from 'rxjs/operators/map';\n\nimport {MediaChange, MediaQuerySubscriber} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\n\nexport declare type SubscriptionList = Subscription[];\n\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nexport class ResponsiveActivation {\n  private _subscribers: SubscriptionList = [];\n  private _activatedInputKey: string;\n  private _registryMap: BreakPointX[];\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n    this._registryMap = this._buildRegistryMap();\n    this._subscribers = this._configureChangeObservers();\n  }\n\n  /**\n   * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n   * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n   * important when several media queries are 'registered' and from which, the browser uses the\n   * first matching media query.\n   */\n  get registryFromLargest(): BreakPointX[] {\n    return [...this._registryMap].reverse();\n  }\n\n  /**\n   * Accessor to the DI'ed directive property\n   * Each directive instance has a reference to the MediaMonitor which is\n   * used HERE to subscribe to mediaQuery change notifications.\n   */\n  get mediaMonitor(): MediaMonitor {\n    return this._mediaMonitor;\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    let key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  hasKeyValue(key) {\n    let value = this._options.inputKeys[key];\n    return typeof value !== 'undefined';\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach((link: Subscription) => {\n      link.unsubscribe();\n    });\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): SubscriptionList {\n    let subscriptions: Subscription[] = [];\n\n    this._registryMap.forEach((bp: BreakPointX) => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        let buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n          this.mediaMonitor\n              .observe(bp.alias)\n              .pipe(map(buildChanges))\n              .subscribe(change => {\n                this._onMonitorEvents(change);\n              })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this.mediaMonitor.breakpoints\n        .map(bp => {\n          return <BreakPointX> extendObject({}, bp, {\n            baseKey: this._options.baseKey,             // e.g. layout, hide, self-align, flex-wrap\n            key: this._options.baseKey + bp.suffix  // e.g.  layoutGtSm, layoutMd, layoutGtLg\n          });\n        })\n        .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property == this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                     // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey == currentKey) ? '' : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey) {\n    let isMissingKey = (key) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      this.mediaMonitor.activeOverlaps.some(bp => {\n        let key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  SimpleChange,\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  StyleUtils,\n} from '../style-utils/style-utils';\n\nimport {ResponsiveActivation, KeyOptions} from '../responsive-activation/responsive-activation';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {MediaQuerySubscriber} from '../media-change';\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective implements OnDestroy, OnChanges {\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access to host element's parent DOM node\n   */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  protected get nativeElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._display = this._getDisplayStyle();\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseFxDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    delete this._mediaMonitor;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows us to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source: HTMLElement = this.nativeElement): string {\n    const query = 'display';\n    return this._styler.lookupStyle(source, query);\n  }\n\n  /**\n   * Quick accessor to raw attribute value on the target DOM element\n   */\n  protected _getAttributeValue(attribute: string,\n                               source: HTMLElement = this.nativeElement): string {\n    return this._styler.lookupAttributeValue(source, attribute);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    let value = 'row';\n    let hasInlineValue = '';\n\n    if (target) {\n      [value, hasInlineValue] = this._styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this._styler.applyStyleToElements(style, elements);\n      }\n    }\n\n    return value.trim() || 'row';\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 element: HTMLElement = this.nativeElement) {\n    this._styler.applyStyleToElement(element, style, value);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[]) {\n    this._styler.applyStyleToElements(style, elements);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      if (!!key) {\n        this._inputMap[key] = source;\n      }\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(\n          keyOptions,\n          this._mediaMonitor,\n          (change) => onMediaQueryChange(change)\n      );\n    }\n    return this._mqActivation;\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /**\n   * Does this directive have 1 or more responsive keys defined\n   * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n   */\n  hasResponsiveAPI(baseKey: string) {\n    const totalKeys = Object.keys(this._inputMap).length;\n    const baseValue = this._inputMap[baseKey];\n    return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n  }\n\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** Original dom Elements CSS display style */\n  protected _display;\n\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {ResponsiveActivation} from '../responsive-activation/responsive-activation';\nimport {MediaQuerySubscriber} from '../media-change';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {StyleUtils} from '../style-utils/style-utils';\n\n\n/**\n * Adapter to the BaseFxDirective abstract class so it can be used via composition.\n * @see BaseFxDirective\n */\nexport class BaseFxDirectiveAdapter extends BaseFxDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseFxDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation;\n  }\n\n  /**\n   * BaseFxDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n    super(_mediaMonitor, _elementRef, _styler);\n  }\n\n  /**\n    * Does this directive have 1 or more responsive keys defined\n    * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n    */\n  hasResponsiveAPI() {\n   return super.hasResponsiveAPI(this._baseKey);\n  }\n\n  /**\n   * @see BaseFxDirective._queryInput\n   */\n  queryInput(key) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error(\n        `Invalid class value '${key}' provided. Did you want to cache the raw value?`\n      );\n    }\n  }\n\n  /**\n   * @see BaseFxDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    if (key) {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source ? source.join(' ') : '';\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes: string[] = [];\n    if (source) {\n      for (let prop in source) {\n        if (!!source[prop]) {\n          classes.push(prop);\n        }\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n    this._actives = [];\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList, _) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias) {\n    let bp = this._breakpoints.findByAlias(queryOrAlias);\n    if (bp) {\n      queryOrAlias = bp.mediaQuery;\n    }\n    return queryOrAlias;\n  }\n\n  /**\n   * Manually activate any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      let bp = this._breakpoints.findByQuery(mediaQuery);\n      let alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activate of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases) {\n    let activate = (alias) => {\n      let bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery) {\n    let mql = <MockMediaQueryList> this._registry.get(mediaQuery);\n    let alreadyAdded = this._actives.reduce((found, it) => {\n      return found || (mql && (it.media === mql.media));\n    }, false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current Mock MQLs */\n  private _deactivateAll() {\n    if (this._actives.length) {\n      // Deactivate all current MQLs and reset the buffer\n      for (const it of this._actives) {\n        it.deactivate();\n      }\n      this._actives = [];\n    }\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return (this._actives.length > 0);\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\nimport {MediaChange} from '../media-change';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n    this._registry = new Map<string, ServerMediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map';\nimport {SERVER_TOKEN} from '../server-token';\n\n@Injectable()\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement, style: StyleDefinition, value?: string | number) {\n    let styles = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    if (value === FALLBACK_STYLE) {\n      value = '';\n    }\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return element.style[styleName] || element.style.getPropertyValue(styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = `${this._serverStylesheet.getStyleForElement(element, styleName)}`;\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : FALLBACK_STYLE;\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: {}, element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n      values.sort();\n      for (let value of values) {\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          element.style.setProperty(key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n\nconst FALLBACK_STYLE = 'block';\n"],"names":["Object","keys","this","_inputMap","length","type","Directive","args","selector","ElementRef","MediaMonitor","StyleUtils","decorators","Inject","PLATFORM_ID","undefined","Optional","SERVER_TOKEN","srcBase","Input","srcXs","srcSm","srcMd","srcLg","srcXl","srcLtSm","srcLtMd","srcLtLg","srcLtXl","srcGtXs","srcGtSm","srcGtMd","srcGtLg","ImgSrcDirective","BaseFxDirective","ClassDirective","monitor","_iterableDiffers","_keyValueDiffers","_ngEl","_renderer","_ngClassInstance","_styler","_this","_super","call","_configureAdapters","tslib_1.__extends","defineProperty","prototype","val","_base","cacheInput","ngClass","queryInput","klass","ngOnChanges","changes","activeKey","mqActivation","activatedInput","ngOnInit","_configureMQListener","ngDoCheck","ngOnDestroy","BaseFxDirectiveAdapter","NgClass","baseKey","fallbackValue","listenForMediaQueryChanges","value","IterableDiffers","KeyValueDiffers","Renderer2","Self","ngClassBase","klazz","ngClassXs","ngClassSm","ngClassMd","ngClassLg","ngClassXl","ngClassLtSm","ngClassLtMd","ngClassLtLg","ngClassLtXl","ngClassGtXs","ngClassGtSm","ngClassGtMd","ngClassGtLg","FALSY","ShowHideDirective","layout","elRef","styleUtils","platformId","serverModuleLoaded","_layoutWatcher","layout$","subscribe","_updateWithValue","_cacheInput","negativeOf","_getDisplayStyle","hasInitialized","_mqActivation","_getDefaultVal","_listenForMediaQueryChanges","unsubscribe","shouldShow","_validateTruthy","_applyStyleToElement","_buildCSS","isPlatformServer","nativeElement","style","setProperty","show","display","_display","indexOf","LayoutDirective","showXs","showSm","showMd","showLg","showXl","showLtSm","showLtMd","showLtLg","showLtXl","showGtXs","showGtSm","showGtMd","showGtLg","hide","hideXs","hideSm","hideMd","hideLg","hideXl","hideLtSm","hideLtMd","hideLtLg","hideLtXl","hideGtXs","hideGtSm","hideGtMd","hideGtLg","NgStyleKeyValue","key","noQuotes","replace","trim","ngStyleUtils","getType","buildRawList","buildMapFromList","buildMapFromSet","StyleDirective","_sanitizer","_differs","_ngStyleInstance","ngStyle","NgStyle","_buildCacheInterceptor","_fallbackToStyle","bind","source","cacheRaw","merge","styles","_buildStyleMap","extendObject","inputMap","sanitizer","sanitize","SecurityContext","STYLE","_","ngStyleBase","_getAttributeValue","DomSanitizer","ngStyleXs","ngStyleSm","ngStyleMd","ngStyleLg","ngStyleXl","ngStyleLtSm","ngStyleLtMd","ngStyleLtLg","ngStyleLtXl","ngStyleGtXs","ngStyleGtSm","ngStyleGtMd","ngStyleGtLg","ALL_DIRECTIVES","NgModule","imports","CoreModule","declarations","slice","exports","providers","StylesheetMap","BROWSER_PROVIDER","ExtendedModule","SERVER_PROVIDERS","provide","BEFORE_APP_SERIALIZED","useFactory","FLEX_SSR_SERIALIZER_FACTORY","deps","MatchMedia","DOCUMENT","BREAKPOINTS","multi","useValue","useClass","ServerMatchMedia","nextId","IS_DEBUG_MODE","FlexLayoutServerModule","VERSION","Version","FlexLayoutModule","console","warn","provideBreakPoints","breakpoints","options","ngModule","CUSTOM_BREAKPOINTS_PROVIDER_FACTORY","orientations","FlexModule","layoutXs","layoutSm","layoutMd","layoutLg","layoutXl","layoutGtXs","layoutGtSm","layoutGtMd","layoutGtLg","layoutLtSm","layoutLtMd","layoutLtLg","layoutLtXl","LayoutGapDirective","container","_zone","_directionality","_layout","_onLayoutChange","_directionWatcher","change","ngAfterContentInit","_watchContentChanges","_observer","disconnect","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","observe","childList","direction","toLowerCase","LAYOUT_VALUES","find","x","_queryInput","items","childrenNodes","filter","el","nodeType","sort","a","b","orderA","lookupStyle","orderB","isNaN","lastItem","pop","_applyStyleToElements","margins","margin-left","margin-right","margin-top","margin-bottom","NgZone","Directionality","gap","gapXs","gapSm","gapMd","gapLg","gapXl","gapGtXs","gapGtSm","gapGtMd","gapGtLg","gapLtSm","gapLtMd","gapLtLg","gapLtXl","FlexDirective","_container","_updateStyle","flexBasis","basis","String","parts","validateBasis","_validateValue","apply","grow","shrink","css","isValue","_getFlowDirection","parentElement","clearStyles","max-width","max-height","min-width","min-height","flex","hasCalc","isPercent","max","isFlowHorizontal","min","usingCalc","isPx","isFixed","box-sizing","SkipSelf","flexXs","flexSm","flexMd","flexLg","flexXl","flexGtXs","flexGtSm","flexGtMd","flexGtLg","flexLtSm","flexLtMd","flexLtLg","flexLtXl","FlexOrderDirective","parseInt","order","orderXs","orderSm","orderMd","orderLg","orderXl","orderGtXs","orderGtSm","orderGtMd","orderGtLg","orderLtSm","orderLtMd","orderLtLg","orderLtXl","FlexOffsetDirective","watchParentFlow","offset","isRtl","horizontalLayoutKey","_a","offsetXs","offsetSm","offsetMd","offsetLg","offsetXl","offsetLtSm","offsetLtMd","offsetLtLg","offsetLtXl","offsetGtXs","offsetGtSm","offsetGtMd","offsetGtLg","FlexAlignDirective","align","alignXs","alignSm","alignMd","alignLg","alignXl","alignLtSm","alignLtMd","alignLtLg","alignLtXl","alignGtXs","alignGtSm","alignGtMd","alignGtLg","FLEX_FILL_CSS","margin","width","height","FlexFillDirective","LayoutAlignDirective","_allowStretching","split","main_axis","cross_axis","flex-direction","BidiModule","_elRef","_monitor","_platformId","_serverModuleLoaded","getAttribute","setAttribute","cacheDefaultSrc","hasResponsiveKeys","defaultSrc","_updateSrcFor","url","activatedValue","applyStyleToElement","content","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","elements","Array","from","querySelectorAll","CLASS_NAME","classRegex_1","RegExp","forEach","classList","contains","parentNode","removeChild","className","normalizeQuery","mediaQuery","unique","list","seen","item","hasOwnProperty","dest","sources","_i","arguments","TypeError","sources_1","mergeAlias","mqAlias","alias","suffix","OBSERVABLE_MEDIA_PROVIDER_FACTORY","parentService","matchMedia","MediaService","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","map","join","validateSuffixes","bp","overlapping","mergeByAlias","defaults","custom","merged","findByAlias","reduce","result","target","push","buildMergedBreakPoints","_custom","orientation","ORIENTATION_BREAKPOINTS","concat","DEFAULT_BREAKPOINTS","DEFAULT_BREAKPOINTS_PROVIDER_FACTORY","buildLayoutCSS","validateValue","buildCSS","wrap","inline","INLINE","validateWrapValue","flex-wrap","MEDIA_MONITOR_PROVIDER_FACTORY","parentMonitor","applyCssPrefixes","j","_validateCalcValue","substring","matches","substr","calc","what","Set","delimiter","sanitizeValue","stringToKeyValue","entry","keyValuesToMap","generateStaticFlexLayoutStyles","serverSheet","classMap","Map","defaultStyles","stylesheet","styleText","generateCss","reverse","i","activateBreakpoint","size","deactivateBreakpoint","styleTag","createElement","add","textContent","head","appendChild","keyVals","getClassName","v","k","format","formatSegment","asPrefix","get","set","setPrototypeOf","__proto__","p","APP_BOOTSTRAP_LISTENER","MediaChange","clone","_registry","_source","BehaviorSubject","_observable$","asObservable","isActive","mql","registerQuery","pipe","_prepareQueryCSS","query","onMQLEvent","e","run","next","_buildMQL","addListener","media","removeListener","mediaQueries","ALL_STYLES","styleEl_1","cssText","createTextNode","mq","error","Injectable","InjectionToken","BreakPointRegistry","overlaps","nonOverlaps","findByQuery","_breakpoints","_matchMedia","_registerBreakpoints","overlappings","found","hasAlias","queries","sortedItems","ObservableMedia","mediaWatcher","filterOverlaps","_registerBreakPoints","observable$","_buildObservable","_toMediaQuery","complete","self","media$","activationsOnly","addAliasInformation","_findByQuery","excludeOverlaps","_findByAlias","OBSERVABLE_MEDIA_PROVIDER","RESPONSIVE_ALIASES","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","DEFAULT_BREAKPOINTS_PROVIDER","MediaQueriesModule","addStyleToElement","element","clear","getStyleForElement","styleName","KeyOptions","defaultValue","inputKeys","ResponsiveActivation","_options","_mediaMonitor","_onMediaChanges","_subscribers","_registryMap","_buildRegistryMap","_configureChangeObservers","_activatedInputKey","activatedInputKey","hasKeyValue","_lookupKeyValue","destroy","link","subscriptions","_keyInUse","buildChanges","property","mediaMonitor","_onMonitorEvents","_calculateActivatedValue","current","currentKey","newKey","_validateInputKey","inputKey","isMissingKey","activeOverlaps","_elementRef","_hasInitialized","previousVal","SimpleChange","Error","fallbackVal","attribute","lookupAttributeValue","addIfMissing","hasInlineValue","getFlowDirection","applyStyleToElements","prop","onMediaQueryChange","keyOptions","obj","children","buffer","hasResponsiveAPI","_baseKey","mqa","_cacheInputRaw","isArray","_cacheInputArray","_cacheInputObject","_cacheInputString","classes","MockMatchMedia","autoRegisterQueries","useOverlaps","_actives","clearAll","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","deactivate","has","MockMediaQueryList","_mediaQuery","_isActive","_listeners","callback","listener","MockMatchMediaProvider","ServerMediaQueryList","lookupBreakpoint","MEDIA_MONITOR_PROVIDER","_serverStylesheet","_applyMultiValueStyleToElement","FALLBACK_STYLE","lookupInlineStyle","getPropertyValue","inlineOnly","getComputedStyle","values","values_1","_announcer","ReplaySubject","_updateWithDirection"],"mappings":"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"}