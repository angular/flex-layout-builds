{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../src/lib/grid/grid-align/grid-align.ts","../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/utils/sort.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/utils/array.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/media-trigger/media-trigger.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : parent.inline ? 'inline-flex' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n  protected inline = false;  // default inline value\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    const inline = this.inline;\n    if (layout === 'row' && inline) {\n      this.styleCache = layoutAlignHorizontalInlineCache;\n    } else if (layout === 'row' && !inline) {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse' && inline) {\n      this.styleCache = layoutAlignHorizontalRevInlineCache;\n    } else if (layout === 'row-reverse' && !inline) {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column' && inline) {\n      this.styleCache = layoutAlignVerticalInlineCache;\n    } else if (layout === 'column' && !inline) {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse' && inline) {\n      this.styleCache = layoutAlignVerticalRevInlineCache;\n    } else if (layout === 'column-reverse' && !inline) {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout, inline});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layoutKeys: string[] = matcher.value.split(' ');\n    this.layout = layoutKeys[0];\n    this.inline = matcher.value.includes('inline');\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevInlineCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('7.0.0-beta.24-9ce364a');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : '';\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, DoCheck, ElementRef, Input, Optional, Self} from '@angular/core';\nimport {NgClass, ɵNgClassImpl, ɵNgClassR2Impl} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected delegate: ɵNgClassImpl,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(this.delegate);\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n// tslint:disable-next-line:variable-name\nexport const LayoutNgClassImplProvider = {\n  provide: ɵNgClassImpl,\n  useClass: ɵNgClassR2Impl\n};\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs, providers: [LayoutNgClassImplProvider]})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  Optional,\n  PLATFORM_ID,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle, ɵNgStyleImpl, ɵNgStyleR2Impl} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected delegate: ɵNgStyleImpl,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.delegate);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n// tslint:disable-next-line:variable-name\nexport const LayoutNgStyleImplProvider = {\n  provide: ɵNgStyleImpl,\n  useClass: ɵNgStyleR2Impl\n};\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs, providers: [LayoutNgStyleImplProvider]})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** We need to override clearStyles because in most cases mru isn't populated */\n  protected clearStyles() {\n    const gridMode = Object.keys(this.mru).length > 0;\n    const childrenStyle = gridMode ? 'padding' :\n      getMarginType(this.directionality.value, this.layout);\n\n    // If there are styles on the parent remove them\n    if (gridMode) {\n      super.clearStyles();\n    }\n\n    // Then remove the children styles too\n    this.styleUtils.applyStyleToElements({[childrenStyle]: ''}, this.childrenNodes);\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction getMarginType(directionality: string, layout: string) {\n  switch (layout) {\n    case 'column':\n      return 'margin-bottom';\n    case 'column-reverse':\n      return 'margin-top';\n    case 'row':\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n    case 'row-reverse':\n      return directionality === 'rtl' ? 'margin-right' : 'margin-left';\n    default :\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n  }\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  const key = getMarginType(parent.directionality, parent.layout);\n  const margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n  margins[key] = gapValue;\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n      this.marshal.trackValue(this.nativeElement, 'layout-align')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerReflow.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue, this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n  readonly source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  registry = new Map<string, MediaQueryList>();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this.registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this.registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this.source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this.registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this.registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n\n  protected _observable$ = this.source.asObservable();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is not supported; so 'print' mediaQuery activations must be used.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else {\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Wraps the provided value in an array, unless the provided value is an array. */\nexport function coerceArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, OnDestroy} from '@angular/core';\nimport {Subject, asapScheduler, Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\n\nimport {sortDescendingPriority} from '../utils/sort';\nimport {coerceArray} from '../utils/array';\n\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver implements OnDestroy {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 7.0.0-beta.24-9ce364a\n   * @deletion-target v7.0.0-beta.25\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n  /**\n   * Completes the active subject, signalling to all complete for all\n   * MediaObserver subscribers\n   */\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if one or more media query/alias match\n   * the current viewport size.\n   * @param value One or more media queries (or aliases) to check.\n   * @returns Whether any of the media queries match.\n   */\n  isActive(value: string | string[]): boolean {\n    const aliases = splitQueries(coerceArray(value));\n    return aliases.some(alias => {\n      const query = toMediaQuery(alias, this.breakpoints);\n      return this.matchMedia.isActive(query);\n    });\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(0, asapScheduler),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges),\n            takeUntil(this.destroyed$)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n  private readonly destroyed$ = new Subject<void>();\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries: string[]): string[] {\n  return queries.map((query: string) => query.split(','))\n                .reduce((a1: string[], a2: string[]) => a1.concat(a2))\n                .map(query => query.trim());\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n  mediaTriggerAutoRestore?: boolean;\n  ssrObserveBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: [],\n  mediaTriggerAutoRestore: true,\n  ssrObserveBreakpoints: [],\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n    'Flex Layout token, config options for the library', {\n      providedIn: 'root',\n      factory: () => DEFAULT_CONFIG\n    });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.99px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.99px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.99px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.99px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.99px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599.99px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959.99px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279.99px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919.99px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599.99px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.99px)';\n\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.99px)';\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.99px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n\n  autoRegisterQueries = true;   // Used for testing BreakPoint registrations\n  useOverlaps = false;          // Allow fallback to overlapping mediaQueries\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this.registry.forEach((mql: MediaQueryList) => {\n      (mql as MockMediaQueryList).destroy();\n    });\n    this.registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql: MockMediaQueryList = this.registry.get(mediaQuery) as MockMediaQueryList;\n\n    if (mql && !this.isActive(mediaQuery)) {\n      this.registry.set(mediaQuery, mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this.registry.forEach((it: MediaQueryList) => {\n      (it as MockMediaQueryList).deactivate();\n    });\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this.activations.length > 0;\n  }\n\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\nimport {fromEvent, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n/**\n * Class\n */\n@Injectable({providedIn: 'root'})\nexport class MediaTrigger {\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected matchMedia: MatchMedia,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(PLATFORM_ID) protected _platformId: Object,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Manually activate range of breakpoints\n   * @param list array of mediaQuery or alias strings\n   */\n  activate(list: string[]) {\n    list = list.map(it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n\n    this.prepareAutoRestore();\n  }\n\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   */\n  restore() {\n    if (this.hasCachedRegistryMatches) {\n      const extractQuery = (change: MediaChange) => change.mediaQuery;\n      const list = this.originalActivations.map(extractQuery);\n      try {\n\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n\n      } finally {\n        this.originalActivations = [];\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   */\n  private prepareAutoRestore() {\n    const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n    const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n\n    if (enableAutoRestore) {\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   */\n  private deactivateAll() {\n    const list = this.currentActivations;\n\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   */\n  private saveActivations() {\n    if (!this.hasCachedRegistryMatches) {\n      const toMediaChange = (query: string) => new MediaChange(true, query);\n      const mergeMQAlias = (change: MediaChange) => {\n        const bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalActivations = this.currentActivations\n          .map(toMediaChange)\n          .map(mergeMQAlias)\n          .sort(sortDescendingPriority);\n\n      this.cacheRegistryMatches();\n    }\n  }\n\n  /**\n   * Force set manual activations for specified mediaQuery list\n   */\n  private setActivations(list: string[]) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n    this.simulateMediaChanges(list);\n  }\n\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   */\n  private simulateMediaChanges(queries: string[], matches = true) {\n    const toMediaQuery = (query: string) => {\n      const locator = this.breakpoints;\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    const emitChangeEvent = (query: string) => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   */\n  private forceRegistryMatches(queries: string[], matches: boolean) {\n    const registry = new Map<string, MediaQueryList>();\n    queries.forEach(query => {\n      registry.set(query, {matches: matches} as MediaQueryList);\n    });\n\n    this.matchMedia.registry = registry;\n  }\n\n  /**\n   * Save current MatchMedia::registry items.\n   */\n  private cacheRegistryMatches() {\n    const target = this.originalRegistry;\n\n    target.clear();\n    this.matchMedia.registry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n    this.hasCachedRegistryMatches = true;\n  }\n\n  /**\n   * Restore original, 'true' registry\n   */\n  private restoreRegistryMatches() {\n    const target = this.matchMedia.registry;\n\n    target.clear();\n    this.originalRegistry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n\n    this.originalRegistry.clear();\n    this.hasCachedRegistryMatches = false;\n  }\n\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   */\n  private emitChangeEvent(matches: boolean, query: string) {\n    this.matchMedia.source.next(new MediaChange(matches, query));\n  }\n\n  private get currentActivations() {\n    return this.matchMedia.activations;\n  }\n\n  private hasCachedRegistryMatches = false;\n  private originalActivations: MediaChange[] = [];\n  private originalRegistry: Map<string, MediaQueryList> = new Map<string, MediaQueryList>();\n\n  private resizeSubscription!: Subscription;\n}\n\n"],"names":["type","MediaMarshaller","LayoutAlignDirective","BaseDirective2","DefaultLayoutAlignDirective","_super","_this","inputs","tslib_1.__extends","Directive","args","selector","layoutAlignHorizontalCache","Map","layoutAlignVerticalCache","layoutAlignHorizontalRevCache","layoutAlignVerticalRevCache","layoutAlignHorizontalInlineCache","layoutAlignVerticalInlineCache","layoutAlignHorizontalRevInlineCache","layoutAlignVerticalRevInlineCache","ALL_DIRECTIVES","DefaultLayoutDirective","DefaultLayoutGapDirective","DefaultFlexOrderDirective","DefaultFlexOffsetDirective","FlexFillDirective","DefaultFlexAlignDirective","DefaultFlexDirective","NgModule","imports","CoreModule","BidiModule","declarations","slice","exports","FlexModule","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","prototype","buildStyles","input","buildCss","Injectable","providedIn","StyleBuilder","GridAlignDirective","elementRef","styleBuilder","styler","marshal","call","this","DIRECTIVE_KEY","styleCache","alignCache","init","ElementRef","decorators","Optional","StyleUtils","DefaultGridAlignDirective","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignColumnsStyleBuilder","parent","inline","GridAlignColumnsDirective","_inline","Object","defineProperty","val","coerceBooleanProperty","updateWithValue","value","alignColumnsInlineCache","alignColumnsCache","addStyles","Input","DefaultGridAlignColumnsDirective","GridAlignRowsStyleBuilder","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","split","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","tslib_1.__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","ExtendedModule","Boolean","Inject","PLATFORM_ID","shouldCache","sideEffect","_input","_styles","_parent","matchMedia","hook","activatedBreakpoints","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","Subject","observeActivations","alias","onMediaChange","mc","bp","findByQuery","mediaQuery","mergeAlias","matches","push","sort","sortDescendingPriority","updateStyles","splice","element","key","updateFn","clearFn","extraTriggers","initBuilderMap","buildElementKeyMap","watchExtraTriggers","getValue","bpMap","get","values","undefined","getActivatedValues","hasValue","setValue","set","updateElement","trackValue","asObservable","pipe","filter","forEach","el","keyMap","Set","valueMap","k","delete","clearElement","builders","next","releaseElement","s","unsubscribe","_","triggerUpdate","add","triggers","length","watchers","newSubscription","merge","apply","subscribe","currentValue","query","i","activatedBp","has","lastHope","target","queries","items","observe","withPrintQuery","tap","interceptEvents","blockPropagation","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","nativeElement","getAttribute","setAttribute","src","DefaultImgSrcDirective","ClassDirective","delegate","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","ɵNgClassImpl","Self","LayoutNgClassImplProvider","useClass","ɵNgClassR2Impl","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","DISPLAY_MAP","getDisplayStyle","defaultValue","ngOnChanges","changes","keys","inputKey","inputValue","shouldShow","takeUntil","destroySubject","addFlexToParent","lookupStyle","style","setProperty","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","ɵNgStyleImpl","DomSanitizer","LayoutNgStyleImplProvider","ɵNgStyleR2Impl","DefaultStyleDirective","INLINE","LAYOUT_VALUES","LayoutStyleBuilder","buildLayoutCSS","LayoutDirective","layoutCache","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapDirective","zone","layout","observerSubject","change","onLayoutChange","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","matcher","find","x","childrenNodes","nodeType","willDisplay","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","gridMode","mru","childrenStyle","getMarginType","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","FlexDirective","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","FlexOrderStyleBuilder","order","parseInt","FlexOrderDirective","flexOrderCache","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","flexFillCache","LayoutAlignStyleBuilder","align","mainAxis","crossAxis","flex-direction","layoutKeys","includes","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","dest","clone","MediaChange","mqAlias","suffix","priority","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","sources","_i","arguments","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","overlapping","mergeByAlias","defaults","custom","dict","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","window","addListener","media","removeListener","isPrintBreakPoint","PRINT","coerceArray","isArray","toMediaQuery","locator","findByAlias","splitQueries","reduce","a1","a2","concat","applyCssPrefixes","j","_validateCalcValue","substr","calc","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","keyValuesToMap","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","__assign","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","property","stylesheet","StylesheetMap","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","mediaTriggerAutoRestore","ssrObserveBreakpoints","InjectionToken","factory","activatedAlias","complete","builder","useCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","HANDSET_PORTRAIT","TABLET_PORTRAIT","TABLET_LANDSCAPE","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","findByMap","findWithPredicate","searchFn","response","_zone","_platformId","BehaviorSubject","registry","_observable$","results","mql","isActive","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","deactivate","MockMediaQueryList","activations","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","BREAKPOINT_PRINT","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","startPrinting","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","filterOverlaps","destroyed$","_media$","watchActivations","media$","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","asapScheduler","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","MediaTrigger","hasCachedRegistryMatches","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","resize$","fromEvent","take","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","cacheRegistryMatches","emitChangeEvent","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","Error","name_1","styleAttrValue"],"mappings":"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"}