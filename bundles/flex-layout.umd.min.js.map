{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/grid/grid-align/grid-align.ts","../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/utils/sort.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/media-trigger/media-trigger.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('7.0.0-beta.23-088af1e');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected iterableDiffers: IterableDiffers,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(\n        this.iterableDiffers, this.keyValueDiffers, this.elementRef, this.renderer\n      );\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  KeyValueDiffers,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.keyValueDiffers, this.elementRef, this.renderer);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  let key, margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n\n  switch (parent.layout) {\n    case 'column':\n      key = 'margin-bottom';\n      break;\n    case 'column-reverse':\n      key = 'margin-top';\n      break;\n    case 'row':\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n    case 'row-reverse':\n      key = parent.directionality === 'rtl' ? 'margin-right' : 'margin-left';\n      break;\n    default :\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n  }\n  margins[key] = gapValue;\n\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue, this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    if (layout === 'row') {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse') {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column') {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse') {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    this.layout = layout.split(' ')[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n  source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  registry = new Map<string, MediaQueryList>();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this.registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this.registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this.source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this.registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this.registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n\n  protected _observable$ = this.source.asObservable();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is not supported; so 'print' mediaQuery activations must be used.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else {\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 7.0.0-beta.24\n   * @deletion-target v7.0.0-beta.25\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    const query = toMediaQuery(alias, this.breakpoints);\n    return this.matchMedia.isActive(query);\n  }\n\n  /**\n   * Subscribers to activation list can use this function to easily exclude overlaps\n   */\n\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(10),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: []\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n  'Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 5000px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n\n  autoRegisterQueries = true;   // Used for testing BreakPoint registrations\n  useOverlaps = false;          // Allow fallback to overlapping mediaQueries\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this.registry.forEach((mql: MediaQueryList) => {\n      (mql as MockMediaQueryList).destroy();\n    });\n    this.registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql: MockMediaQueryList = this.registry.get(mediaQuery) as MockMediaQueryList;\n\n    if (mql && !this.isActive(mediaQuery)) {\n      this.registry.set(mediaQuery, mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this.registry.forEach((it: MediaQueryList) => {\n      (it as MockMediaQueryList).deactivate();\n    });\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this.activations.length > 0;\n  }\n\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\nimport {fromEvent, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * Class\n */\n@Injectable({providedIn: 'root'})\nexport class MediaTrigger {\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected matchMedia: MatchMedia,\n      @Inject(PLATFORM_ID) protected _platformId: Object,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Manually activate range of breakpoints\n   * @param list array of mediaQuery or alias strings\n   */\n  activate(list: string[]) {\n    list = list.map(it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n\n    this.prepareAutoRestore();\n  }\n\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   */\n  restore() {\n    if (this.hasCachedOriginals) {\n      const extractQuery = (change: MediaChange) => change.mediaQuery;\n      const list = this.originalActivations.map(extractQuery);\n\n      try {\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n\n      } finally {\n        this.hasCachedOriginals = false;\n        this.originalRegistry = null;\n        this.originalActivations = [];\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   */\n  private prepareAutoRestore() {\n    if (isPlatformBrowser(this._platformId) && this._document) {\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   */\n  private deactivateAll() {\n    const list = this.currentActivations;\n\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   */\n  private saveActivations() {\n    if (!this.hasCachedOriginals) {\n      const toMediaChange = (query: string) => new MediaChange(true, query);\n      const mergeMQAlias = (change: MediaChange) => {\n        let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalRegistry = this.matchMedia['registry'] as Map<string, MediaQueryList>;\n      this.originalActivations = this.currentActivations\n          .map(toMediaChange)\n          .map(mergeMQAlias)\n          .sort(sortDescendingPriority);\n\n      this.hasCachedOriginals = true;\n    }\n  }\n\n  /**\n   * Force set manual activations for specified mediaQuery list\n   */\n  private setActivations(list: string[]) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n    this.simulateMediaChanges(list);\n  }\n\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   */\n  private simulateMediaChanges(queries: string[], matches = true) {\n    const toMediaQuery = (query: string) => {\n      const locator = this.breakpoints;\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    const emitChangeEvent = (query: string) => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   */\n  private forceRegistryMatches(queries: string[], match: boolean) {\n    const registry = new Map<string, MediaQueryList>();\n    queries.forEach(query => {\n      registry.set(query, {matches: match} as MediaQueryList);\n    });\n\n    this.matchMedia.registry = registry;\n  }\n\n  /**\n   * Restore original, 'true' registry\n   */\n  private restoreRegistryMatches() {\n    this.matchMedia.registry = this.originalRegistry as Map<string, MediaQueryList>;\n    this.originalRegistry = null;\n  }\n\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   */\n  private emitChangeEvent(matches: boolean, query: string) {\n    this.matchMedia.source.next(new MediaChange(matches, query));\n  }\n\n  private get currentActivations() {\n    return this.matchMedia.activations;\n  }\n\n  private hasCachedOriginals = false;\n  private originalActivations: MediaChange[] = [];\n  private originalRegistry: Map<string, MediaQueryList> | null = null;\n\n  private resizeSubscription!: Subscription;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value.trim();\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n"],"names":["GridAlignDirective","BaseDirective2","alignCache","Map","inputs","_this","tslib_1.__extends","DefaultGridAlignDirective","_super","type","Directive","args","selector","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignColumnsStyleBuilder","prototype","buildStyles","input","parent","buildCss","inline","Injectable","providedIn","StyleBuilder","GridAlignColumnsDirective","elementRef","styleBuilder","styler","marshal","call","this","DIRECTIVE_KEY","_inline","init","Object","defineProperty","val","coerceBooleanProperty","updateWithValue","value","styleCache","alignColumnsInlineCache","alignColumnsCache","addStyles","ElementRef","decorators","Optional","StyleUtils","MediaMarshaller","Input","DefaultGridAlignColumnsDirective","GridAlignRowsStyleBuilder","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","split","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","ALL_DIRECTIVES","NgModule","imports","CoreModule","declarations","slice","exports","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","tslib_1.__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","FlexModule","ExtendedModule","Boolean","Inject","PLATFORM_ID","activatedBreakpoints","sort","sortDescendingPriority","updateStyles","element","key","updateFn","clearFn","extraTriggers","initBuilderMap","updateMap","clearMap","buildElementKeyMap","watchExtraTriggers","getValue","bp","bpMap","elementMap","get","values","undefined","getActivatedValues","hasValue","setValue","set","updateElement","trackValue","subject","asObservable","pipe","filter","forEach","el","keyMap","Set","elementKeyMap","valueMap","k","delete","clearElement","builders","next","releaseElement","watcherMap","s","unsubscribe","_","triggerUpdate","add","triggers","length","watchers","newSubscription","merge","apply","subscribe","currentValue","findByQuery","query","i","activatedBp","alias","has","lastHope","observeActivations","target","queries","items","mediaQuery","matchMedia","observe","hook","withPrintQuery","tap","interceptEvents","blockPropagation","onMediaChange","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","nativeElement","getAttribute","setAttribute","src","DefaultImgSrcDirective","ClassDirective","iterableDiffers","keyValueDiffers","renderer","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","IterableDiffers","KeyValueDiffers","Renderer2","Self","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","DISPLAY_MAP","getDisplayStyle","defaultValue","ngOnChanges","changes","keys","inputKey","inputValue","shouldShow","takeUntil","destroySubject","addFlexToParent","lookupStyle","style","setProperty","WeakMap","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","DomSanitizer","DefaultStyleDirective","INLINE","LAYOUT_VALUES","LayoutStyleBuilder","buildLayoutCSS","LayoutDirective","layoutCache","DefaultLayoutDirective","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","sideEffect","_styles","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapDirective","zone","layout","observerSubject","Subject","change","onLayoutChange","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","matcher","find","x","childrenNodes","nodeType","willDisplay","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","DefaultLayoutGapDirective","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","FlexDirective","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","DefaultFlexDirective","FlexOrderStyleBuilder","order","parseInt","FlexOrderDirective","flexOrderCache","DefaultFlexOrderDirective","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","DefaultFlexOffsetDirective","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","DefaultFlexAlignDirective","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","_input","FlexFillDirective","flexFillCache","LayoutAlignStyleBuilder","align","mainAxis","crossAxis","flex-direction","LayoutAlignDirective","layoutAlignHorizontalCache","layoutAlignHorizontalRevCache","layoutAlignVerticalCache","layoutAlignVerticalRevCache","DefaultLayoutAlignDirective","BidiModule","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","mergeAlias","dest","clone","MediaChange","mqAlias","suffix","priority","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","sources","_i","arguments","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","overlapping","mergeByAlias","defaults","custom","dict","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","matches","media","removeListener","isPrintBreakPoint","PRINT","toMediaQuery","locator","findByAlias","applyCssPrefixes","j","_validateCalcValue","substr","calc","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","reduce","keyValuesToMap","push","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","__assign","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","property","stylesheet","StylesheetMap","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","InjectionToken","factory","mru","activatedAlias","complete","builder","useCache","shouldCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","concat","isArray","findByMap","findWithPredicate","searchFn","response","_zone","_platformId","BehaviorSubject","registry","_observable$","results","mql","isActive","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","deactivate","MockMediaQueryList","activations","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","useClass","BREAKPOINT_PRINT","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","startPrinting","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","filterOverlaps","_media$","watchActivations","media$","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","MediaTrigger","hasCachedOriginals","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","resize$","fromEvent","window","take","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","emitChangeEvent","match","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","Error","name_1","styleAttrValue","_parent","mc","splice"],"mappings":"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"}