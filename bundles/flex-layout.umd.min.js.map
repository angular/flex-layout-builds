{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../src/lib/grid/grid-align/grid-align.ts","../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/utils/sort.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/utils/array.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/media-trigger/media-trigger.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : parent.inline ? 'inline-flex' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n@Directive({selector: 'layout-align-directive'})\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n  protected inline = false;  // default inline value\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    const inline = this.inline;\n    if (layout === 'row' && inline) {\n      this.styleCache = layoutAlignHorizontalInlineCache;\n    } else if (layout === 'row' && !inline) {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse' && inline) {\n      this.styleCache = layoutAlignHorizontalRevInlineCache;\n    } else if (layout === 'row-reverse' && !inline) {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column' && inline) {\n      this.styleCache = layoutAlignVerticalInlineCache;\n    } else if (layout === 'column' && !inline) {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse' && inline) {\n      this.styleCache = layoutAlignVerticalRevInlineCache;\n    } else if (layout === 'column-reverse' && !inline) {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout, inline});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layoutKeys: string[] = matcher.value.split(' ');\n    this.layout = layoutKeys[0];\n    this.inline = matcher.value.includes('inline');\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevInlineCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective, LayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective, LayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective, FlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective, FlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective, FlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective, FlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective, LayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n  FlexDirective,\n  FlexAlignDirective,\n  FlexOffsetDirective,\n  FlexOrderDirective,\n  LayoutDirective,\n  LayoutAlignDirective,\n  LayoutGapDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\n@Directive({selector: 'grid-align-directive'})\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive({selector: 'grid-align-columns-directive'})\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive({selector: 'grid-align-rows-directive'})\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive({selector: 'grid-area-directive'})\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\n@Directive({selector: 'grid-areas-directive'})\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\n@Directive({selector: `grid-auto-directive`})\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive({selector: 'grid-column-directive'})\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive({selector: 'grid-columns-directive'})\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\n@Directive({selector: 'grid-gap-directive'})\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive({selector: 'grid-row-directive'})\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive({selector: 'grid-rows-directive'})\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective, GridAlignDirective} from './grid-align/grid-align';\nimport {\n  DefaultGridAlignColumnsDirective,\n  GridAlignColumnsDirective,\n} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective, GridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective, GridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective, GridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective, GridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective, GridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective, GridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective, GridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective, GridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective, GridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n  GridAlignColumnsDirective,\n  GridAlignRowsDirective,\n  GridAreaDirective,\n  GridAreasDirective,\n  GridAutoDirective,\n  GridColumnDirective,\n  GridColumnsDirective,\n  GridGapDirective,\n  GridAlignDirective,\n  GridRowDirective,\n  GridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('8.0.0-beta.27-dd36781');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : '';\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\n@Directive({selector: 'img-src-directive'})\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, DoCheck, ElementRef, Input, Optional, Self} from '@angular/core';\nimport {NgClass, ɵNgClassImpl, ɵNgClassR2Impl} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\n@Directive({selector: 'class-directive'})\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected delegate: ɵNgClassImpl,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(this.delegate);\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n// tslint:disable-next-line:variable-name\nexport const LayoutNgClassImplProvider = {\n  provide: ɵNgClassImpl,\n  useClass: ɵNgClassR2Impl\n};\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs, providers: [LayoutNgClassImplProvider]})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\n@Directive({selector: 'show-hide-directive'})\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  Optional,\n  PLATFORM_ID,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle, ɵNgStyleImpl, ɵNgStyleR2Impl} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\n@Directive({selector: 'style-directive'})\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected delegate: ɵNgStyleImpl,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.delegate);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n// tslint:disable-next-line:variable-name\nexport const LayoutNgStyleImplProvider = {\n  provide: ɵNgStyleImpl,\n  useClass: ɵNgStyleR2Impl\n};\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs, providers: [LayoutNgStyleImplProvider]})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective, ImgSrcDirective} from './img-src/img-src';\nimport {ClassDirective, DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective, ShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective, StyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective,\n  ClassDirective,\n  ImgSrcDirective,\n  ShowHideDirective,\n  StyleDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive({selector: 'layout-directive'})\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n@Directive({selector: 'layout-gap-directive'})\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** We need to override clearStyles because in most cases mru isn't populated */\n  protected clearStyles() {\n    const gridMode = Object.keys(this.mru).length > 0;\n    const childrenStyle = gridMode ? 'padding' :\n      getMarginType(this.directionality.value, this.layout);\n\n    // If there are styles on the parent remove them\n    if (gridMode) {\n      super.clearStyles();\n    }\n\n    // Then remove the children styles too\n    this.styleUtils.applyStyleToElements({[childrenStyle]: ''}, this.childrenNodes);\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction getMarginType(directionality: string, layout: string) {\n  switch (layout) {\n    case 'column':\n      return 'margin-bottom';\n    case 'column-reverse':\n      return 'margin-top';\n    case 'row':\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n    case 'row-reverse':\n      return directionality === 'rtl' ? 'margin-right' : 'margin-left';\n    default :\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n  }\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  const key = getMarginType(parent.directionality, parent.layout);\n  const margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n  margins[key] = gapValue;\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive({selector: 'flex-directive'})\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n      this.marshal.trackValue(this.nativeElement, 'layout-align')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerReflow.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue + '', this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n@Directive({selector: 'flex-order-directive'})\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive({selector: 'flex-offset-directive'})\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n@Directive({selector: 'flex-align-directive'})\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n  readonly source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  registry = new Map<string, MediaQueryList>();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this.registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this.registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this.source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this.registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this.registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n\n  protected _observable$ = this.source.asObservable();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {DOCUMENT} from '@angular/common';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n\n  // registeredBeforeAfterPrintHooks tracks if we registered the `beforeprint`\n  //  and `afterprint` event listeners.\n  private registeredBeforeAfterPrintHooks: boolean = false;\n\n  // isPrintingBeforeAfterEvent is used to track if we are printing from within\n  // a `beforeprint` event handler. This prevents the typicall `stopPrinting`\n  // form `interceptEvents` so that printing is not stopped while the dialog\n  // is still open. This is an extension of the `isPrinting` property on\n  // browsers which support `beforeprint` and `afterprint` events.\n  private isPrintingBeforeAfterEvent: boolean = false;\n\n  // registerBeforeAfterPrintHooks registers a `beforeprint` event hook so we can\n  // trigger print styles synchronously and apply proper layout styles.\n  // It is a noop if the hooks have already been registered or if the document's\n  // `defaultView` is not available.\n  private registerBeforeAfterPrintHooks(target: HookTarget) {\n    // `defaultView` may be null when rendering on the server or in other contexts.\n    if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) {\n      return;\n    }\n\n    this.registeredBeforeAfterPrintHooks = true;\n\n    // Could we have teardown logic to remove if there are no print listeners being used?\n    this._document.defaultView.addEventListener('beforeprint', () => {\n      // If we aren't already printing, start printing and update the styles as\n      // if there was a regular print `MediaChange`(from matchMedia).\n      if (!this.isPrinting) {\n        this.isPrintingBeforeAfterEvent = true;\n        this.startPrinting(target, this.getEventBreakpoints(new MediaChange(true, PRINT)));\n        target.updateStyles();\n      }\n    });\n\n    this._document.defaultView.addEventListener('afterprint', () => {\n      // If we aren't already printing, start printing and update the styles as\n      // if there was a regular print `MediaChange`(from matchMedia).\n      this.isPrintingBeforeAfterEvent = false;\n      if (this.isPrinting) {\n        this.stopPrinting(target);\n        target.updateStyles();\n      }\n    });\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    this.registerBeforeAfterPrintHooks(target);\n\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting && !this.isPrintingBeforeAfterEvent) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is supported; so 'print' mediaQuery activations are used as a fallback\n   * in browsers without `beforeprint` support.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else if (!this.isPrintingBeforeAfterEvent) {\n        // Only clear deactivations if we aren't printing from a `beforeprint` event.\n        // Otherwise this will clear before `stopPrinting()` is called to restore\n        // the pre-Print Activations.\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Wraps the provided value in an array, unless the provided value is an array. */\nexport function coerceArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, OnDestroy} from '@angular/core';\nimport {Subject, asapScheduler, Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\n\nimport {sortDescendingPriority} from '../utils/sort';\nimport {coerceArray} from '../utils/array';\n\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver implements OnDestroy {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 8.0.0-beta.25\n   * @deletion-target v8.0.0-beta.26\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n  /**\n   * Completes the active subject, signalling to all complete for all\n   * MediaObserver subscribers\n   */\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if one or more media query/alias match\n   * the current viewport size.\n   * @param value One or more media queries (or aliases) to check.\n   * @returns Whether any of the media queries match.\n   */\n  isActive(value: string | string[]): boolean {\n    const aliases = splitQueries(coerceArray(value));\n    return aliases.some(alias => {\n      const query = toMediaQuery(alias, this.breakpoints);\n      return this.matchMedia.isActive(query);\n    });\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(0, asapScheduler),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges),\n            takeUntil(this.destroyed$)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n  private readonly destroyed$ = new Subject<void>();\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries: string[]): string[] {\n  return queries.map((query: string) => query.split(','))\n                .reduce((a1: string[], a2: string[]) => a1.concat(a2))\n                .map(query => query.trim());\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n  mediaTriggerAutoRestore?: boolean;\n  ssrObserveBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: [],\n  mediaTriggerAutoRestore: true,\n  ssrObserveBreakpoints: [],\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n    'Flex Layout token, config options for the library', {\n      providedIn: 'root',\n      factory: () => DEFAULT_CONFIG\n    });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.9px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.9px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.9px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.9px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.9px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599.9px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959.9px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279.9px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919.9px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599.9px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.9px)';\n\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.9px)';\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.9px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n\n  autoRegisterQueries = true;   // Used for testing BreakPoint registrations\n  useOverlaps = false;          // Allow fallback to overlapping mediaQueries\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this.registry.forEach((mql: MediaQueryList) => {\n      (mql as MockMediaQueryList).destroy();\n    });\n    this.registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql: MockMediaQueryList = this.registry.get(mediaQuery) as MockMediaQueryList;\n\n    if (mql && !this.isActive(mediaQuery)) {\n      this.registry.set(mediaQuery, mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this.registry.forEach((it: MediaQueryList) => {\n      (it as MockMediaQueryList).deactivate();\n    });\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this.activations.length > 0;\n  }\n\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\nimport {fromEvent, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n/**\n * Class\n */\n@Injectable({providedIn: 'root'})\nexport class MediaTrigger {\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected matchMedia: MatchMedia,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(PLATFORM_ID) protected _platformId: Object,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Manually activate range of breakpoints\n   * @param list array of mediaQuery or alias strings\n   */\n  activate(list: string[]) {\n    list = list.map(it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n\n    this.prepareAutoRestore();\n  }\n\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   */\n  restore() {\n    if (this.hasCachedRegistryMatches) {\n      const extractQuery = (change: MediaChange) => change.mediaQuery;\n      const list = this.originalActivations.map(extractQuery);\n      try {\n\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n\n      } finally {\n        this.originalActivations = [];\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   */\n  private prepareAutoRestore() {\n    const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n    const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n\n    if (enableAutoRestore) {\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   */\n  private deactivateAll() {\n    const list = this.currentActivations;\n\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   */\n  private saveActivations() {\n    if (!this.hasCachedRegistryMatches) {\n      const toMediaChange = (query: string) => new MediaChange(true, query);\n      const mergeMQAlias = (change: MediaChange) => {\n        const bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalActivations = this.currentActivations\n          .map(toMediaChange)\n          .map(mergeMQAlias)\n          .sort(sortDescendingPriority);\n\n      this.cacheRegistryMatches();\n    }\n  }\n\n  /**\n   * Force set manual activations for specified mediaQuery list\n   */\n  private setActivations(list: string[]) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n    this.simulateMediaChanges(list);\n  }\n\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   */\n  private simulateMediaChanges(queries: string[], matches = true) {\n    const toMediaQuery = (query: string) => {\n      const locator = this.breakpoints;\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    const emitChangeEvent = (query: string) => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   */\n  private forceRegistryMatches(queries: string[], matches: boolean) {\n    const registry = new Map<string, MediaQueryList>();\n    queries.forEach(query => {\n      registry.set(query, {matches: matches} as MediaQueryList);\n    });\n\n    this.matchMedia.registry = registry;\n  }\n\n  /**\n   * Save current MatchMedia::registry items.\n   */\n  private cacheRegistryMatches() {\n    const target = this.originalRegistry;\n\n    target.clear();\n    this.matchMedia.registry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n    this.hasCachedRegistryMatches = true;\n  }\n\n  /**\n   * Restore original, 'true' registry\n   */\n  private restoreRegistryMatches() {\n    const target = this.matchMedia.registry;\n\n    target.clear();\n    this.originalRegistry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n\n    this.originalRegistry.clear();\n    this.hasCachedRegistryMatches = false;\n  }\n\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   */\n  private emitChangeEvent(matches: boolean, query: string) {\n    this.matchMedia.source.next(new MediaChange(matches, query));\n  }\n\n  private get currentActivations() {\n    return this.matchMedia.activations;\n  }\n\n  private hasCachedRegistryMatches = false;\n  private originalActivations: MediaChange[] = [];\n  private originalRegistry: Map<string, MediaQueryList> = new Map<string, MediaQueryList>();\n\n  private resizeSubscription!: Subscription;\n}\n\n"],"names":["type","Injectable","args","providedIn","LayoutAlignStyleBuilder","StyleBuilder","inputs","LayoutAlignDirective","_super","elRef","styleUtils","styleBuilder","marshal","_this","call","this","DIRECTIVE_KEY","layout","inline","init","trackValue","nativeElement","pipe","takeUntil","destroySubject","subscribe","onLayoutChange","bind","tslib_1.__extends","prototype","updateWithValue","value","styleCache","layoutAlignHorizontalInlineCache","layoutAlignHorizontalRevInlineCache","layoutAlignVerticalInlineCache","layoutAlignVerticalRevInlineCache","layoutAlignVerticalRevCache","layoutAlignVerticalCache","layoutAlignHorizontalRevCache","layoutAlignHorizontalCache","addStyles","matcher","layoutKeys","split","includes","LAYOUT_VALUES","find","x","triggerUpdate","Directive","selector","ElementRef","StyleUtils","decorators","Optional","MediaMarshaller","BaseDirective2","DefaultLayoutAlignDirective","apply","arguments","Map","ALL_DIRECTIVES","DefaultLayoutDirective","DefaultLayoutGapDirective","DefaultFlexOrderDirective","DefaultFlexOffsetDirective","FlexFillDirective","DefaultFlexAlignDirective","DefaultFlexDirective","FlexDirective","FlexAlignDirective","FlexOffsetDirective","FlexOrderDirective","LayoutDirective","LayoutGapDirective","FlexModule","NgModule","imports","CoreModule","BidiModule","declarations","slice","exports","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","buildStyles","input","buildCss","GridAlignDirective","elementRef","styler","alignCache","DefaultGridAlignDirective","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignColumnsStyleBuilder","parent","GridAlignColumnsDirective","_inline","Object","defineProperty","val","coerceBooleanProperty","alignColumnsInlineCache","alignColumnsCache","Input","DefaultGridAlignColumnsDirective","GridAlignRowsStyleBuilder","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","tslib_1.__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","ExtendedModule","Boolean","Inject","PLATFORM_ID","style","styleList","i","length","colonIndex","Error","name_1","substr","styleMap","_writeStyleAttribute","element","styleAttrValue","key","setAttribute","StylesheetMap","undefined","shouldCache","sideEffect","_input","_styles","_parent","matchMedia","hook","activatedBreakpoints","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","Subject","observeActivations","alias","onMediaChange","mc","bp","findByQuery","mediaQuery","mergeAlias","matches","push","sort","sortDescendingPriority","updateStyles","splice","updateFn","clearFn","extraTriggers","initBuilderMap","buildElementKeyMap","watchExtraTriggers","getValue","bpMap","get","values","getActivatedValues","hasValue","setValue","set","updateElement","asObservable","filter","forEach","el","keyMap","Set","valueMap","k","delete","clearElement","builders","next","releaseElement","s","unsubscribe","_","add","triggers","watchers","newSubscription","merge","currentValue","query","activatedBp","has","lastHope","target","queries","items","observe","withPrintQuery","tap","interceptEvents","blockPropagation","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","getAttribute","src","DefaultImgSrcDirective","ClassDirective","delegate","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","ɵNgClassImpl","Self","LayoutNgClassImplProvider","useClass","ɵNgClassR2Impl","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","DISPLAY_MAP","getDisplayStyle","defaultValue","ngOnChanges","changes","keys","inputKey","inputValue","shouldShow","addFlexToParent","lookupStyle","setProperty","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","ɵNgStyleImpl","DomSanitizer","LayoutNgStyleImplProvider","ɵNgStyleR2Impl","DefaultStyleDirective","INLINE","LayoutStyleBuilder","buildLayoutCSS","layoutCache","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","zone","observerSubject","change","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","childrenNodes","nodeType","willDisplay","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","gridMode","mru","childrenStyle","getMarginType","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","FlexOrderStyleBuilder","order","parseInt","flexOrderCache","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","FlexAlignStyleBuilder","flexAlignCache","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","flexFillCache","align","mainAxis","crossAxis","flex-direction","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","dest","clone","MediaChange","mqAlias","suffix","priority","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","sources","_i","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","overlapping","mergeByAlias","defaults","custom","dict","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","media","removeListener","isPrintBreakPoint","PRINT","coerceArray","isArray","toMediaQuery","locator","findByAlias","splitQueries","reduce","a1","a2","concat","applyCssPrefixes","j","_validateCalcValue","calc","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","keyValuesToMap","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","__assign","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","property","stylesheet","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","mediaTriggerAutoRestore","ssrObserveBreakpoints","InjectionToken","factory","activatedAlias","complete","builder","useCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","TABLET_PORTRAIT","TABLET_LANDSCAPE","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","findByMap","findWithPredicate","searchFn","response","_zone","_platformId","BehaviorSubject","registry","_observable$","results","mql","isActive","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","deactivate","MockMediaQueryList","activations","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","BREAKPOINT_PRINT","registeredBeforeAfterPrintHooks","isPrintingBeforeAfterEvent","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","registerBeforeAfterPrintHooks","defaultView","startPrinting","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","filterOverlaps","destroyed$","_media$","watchActivations","media$","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","asapScheduler","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","MediaTrigger","hasCachedRegistryMatches","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","resize$","fromEvent","window","take","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","cacheRegistryMatches","emitChangeEvent","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","_setServerStyle","styleValue","_readStyleAttribute","styleAttribute"],"mappings":"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"}