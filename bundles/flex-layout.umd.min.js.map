{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../src/lib/grid/grid-align/grid-align.ts","../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/style-builder/style-builder.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/utils/sort.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/utils/array.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/media-trigger/media-trigger.ts","../../src/lib/core/style-utils/style-utils.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : parent.inline ? 'inline-flex' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n@Directive({selector: 'layout-align-directive'})\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n  protected inline = false;  // default inline value\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    const inline = this.inline;\n    if (layout === 'row' && inline) {\n      this.styleCache = layoutAlignHorizontalInlineCache;\n    } else if (layout === 'row' && !inline) {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse' && inline) {\n      this.styleCache = layoutAlignHorizontalRevInlineCache;\n    } else if (layout === 'row-reverse' && !inline) {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column' && inline) {\n      this.styleCache = layoutAlignVerticalInlineCache;\n    } else if (layout === 'column' && !inline) {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse' && inline) {\n      this.styleCache = layoutAlignVerticalRevInlineCache;\n    } else if (layout === 'column-reverse' && !inline) {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout, inline});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layoutKeys: string[] = matcher.value.split(' ');\n    this.layout = layoutKeys[0];\n    this.inline = matcher.value.includes('inline');\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevInlineCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective, LayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective, LayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective, FlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective, FlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective, FlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective, FlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective, LayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n  FlexDirective,\n  FlexAlignDirective,\n  FlexOffsetDirective,\n  FlexOrderDirective,\n  LayoutDirective,\n  LayoutAlignDirective,\n  LayoutGapDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\n@Directive({selector: 'grid-align-directive'})\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive({selector: 'grid-align-columns-directive'})\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive({selector: 'grid-align-rows-directive'})\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive({selector: 'grid-area-directive'})\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\n@Directive({selector: 'grid-areas-directive'})\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\n@Directive({selector: `grid-auto-directive`})\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive({selector: 'grid-column-directive'})\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive({selector: 'grid-columns-directive'})\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\n@Directive({selector: 'grid-gap-directive'})\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive({selector: 'grid-row-directive'})\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive({selector: 'grid-rows-directive'})\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective, GridAlignDirective} from './grid-align/grid-align';\nimport {\n  DefaultGridAlignColumnsDirective,\n  GridAlignColumnsDirective,\n} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective, GridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective, GridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective, GridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective, GridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective, GridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective, GridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective, GridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective, GridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective, GridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n  GridAlignColumnsDirective,\n  GridAlignRowsDirective,\n  GridAreaDirective,\n  GridAreasDirective,\n  GridAutoDirective,\n  GridColumnDirective,\n  GridColumnsDirective,\n  GridGapDirective,\n  GridAlignDirective,\n  GridRowDirective,\n  GridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('8.0.0-beta.27-7dcc14d');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\n@Directive({selector: 'img-src-directive'})\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, DoCheck, ElementRef, Input, Optional, Self} from '@angular/core';\nimport {NgClass, ɵNgClassImpl, ɵNgClassR2Impl} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\n@Directive({selector: 'class-directive'})\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected delegate: ɵNgClassImpl,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(this.delegate);\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n// tslint:disable-next-line:variable-name\nexport const LayoutNgClassImplProvider = {\n  provide: ɵNgClassImpl,\n  useClass: ɵNgClassR2Impl\n};\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs, providers: [LayoutNgClassImplProvider]})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\n@Directive({selector: 'show-hide-directive'})\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  Optional,\n  PLATFORM_ID,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle, ɵNgStyleImpl, ɵNgStyleR2Impl} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\n@Directive({selector: 'style-directive'})\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected delegate: ɵNgStyleImpl,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.delegate);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n// tslint:disable-next-line:variable-name\nexport const LayoutNgStyleImplProvider = {\n  provide: ɵNgStyleImpl,\n  useClass: ɵNgStyleR2Impl\n};\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs, providers: [LayoutNgStyleImplProvider]})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective, ImgSrcDirective} from './img-src/img-src';\nimport {ClassDirective, DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective, ShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective, StyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective,\n  ClassDirective,\n  ImgSrcDirective,\n  ShowHideDirective,\n  StyleDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive({selector: 'layout-directive'})\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n@Directive({selector: 'layout-gap-directive'})\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** We need to override clearStyles because in most cases mru isn't populated */\n  protected clearStyles() {\n    const gridMode = Object.keys(this.mru).length > 0;\n    const childrenStyle = gridMode ? 'padding' :\n      getMarginType(this.directionality.value, this.layout);\n\n    // If there are styles on the parent remove them\n    if (gridMode) {\n      super.clearStyles();\n    }\n\n    // Then remove the children styles too\n    this.styleUtils.applyStyleToElements({[childrenStyle]: ''}, this.childrenNodes);\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction getMarginType(directionality: string, layout: string) {\n  switch (layout) {\n    case 'column':\n      return 'margin-bottom';\n    case 'column-reverse':\n      return 'margin-top';\n    case 'row':\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n    case 'row-reverse':\n      return directionality === 'rtl' ? 'margin-right' : 'margin-left';\n    default :\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n  }\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  const key = getMarginType(parent.directionality, parent.layout);\n  const margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n  margins[key] = gapValue;\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive({selector: 'flex-directive'})\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n      this.marshal.trackValue(this.nativeElement, 'layout-align')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerReflow.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue + '', this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n@Directive({selector: 'flex-order-directive'})\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive({selector: 'flex-offset-directive'})\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n@Directive({selector: 'flex-align-directive'})\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n  readonly source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  registry = new Map<string, MediaQueryList>();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this.registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this.registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this.source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this.registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this.registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n\n  protected _observable$ = this.source.asObservable();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is not supported; so 'print' mediaQuery activations must be used.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else {\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Wraps the provided value in an array, unless the provided value is an array. */\nexport function coerceArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, OnDestroy} from '@angular/core';\nimport {Subject, asapScheduler, Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\n\nimport {sortDescendingPriority} from '../utils/sort';\nimport {coerceArray} from '../utils/array';\n\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver implements OnDestroy {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 8.0.0-beta.25\n   * @deletion-target v8.0.0-beta.26\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n  /**\n   * Completes the active subject, signalling to all complete for all\n   * MediaObserver subscribers\n   */\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if one or more media query/alias match\n   * the current viewport size.\n   * @param value One or more media queries (or aliases) to check.\n   * @returns Whether any of the media queries match.\n   */\n  isActive(value: string | string[]): boolean {\n    const aliases = splitQueries(coerceArray(value));\n    return aliases.some(alias => {\n      const query = toMediaQuery(alias, this.breakpoints);\n      return this.matchMedia.isActive(query);\n    });\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(0, asapScheduler),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges),\n            takeUntil(this.destroyed$)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n  private readonly destroyed$ = new Subject<void>();\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries: string[]): string[] {\n  return queries.map((query: string) => query.split(','))\n                .reduce((a1: string[], a2: string[]) => a1.concat(a2))\n                .map(query => query.trim());\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n  mediaTriggerAutoRestore?: boolean;\n  ssrObserveBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: [],\n  mediaTriggerAutoRestore: true,\n  ssrObserveBreakpoints: [],\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n    'Flex Layout token, config options for the library', {\n      providedIn: 'root',\n      factory: () => DEFAULT_CONFIG\n    });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.9px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.9px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.9px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.9px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.9px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599.9px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959.9px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279.9px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919.9px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599.9px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.9px)';\n\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.9px)';\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.9px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n\n  autoRegisterQueries = true;   // Used for testing BreakPoint registrations\n  useOverlaps = false;          // Allow fallback to overlapping mediaQueries\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this.registry.forEach((mql: MediaQueryList) => {\n      (mql as MockMediaQueryList).destroy();\n    });\n    this.registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql: MockMediaQueryList = this.registry.get(mediaQuery) as MockMediaQueryList;\n\n    if (mql && !this.isActive(mediaQuery)) {\n      this.registry.set(mediaQuery, mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this.registry.forEach((it: MediaQueryList) => {\n      (it as MockMediaQueryList).deactivate();\n    });\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this.activations.length > 0;\n  }\n\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\nimport {fromEvent, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n/**\n * Class\n */\n@Injectable({providedIn: 'root'})\nexport class MediaTrigger {\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected matchMedia: MatchMedia,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(PLATFORM_ID) protected _platformId: Object,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Manually activate range of breakpoints\n   * @param list array of mediaQuery or alias strings\n   */\n  activate(list: string[]) {\n    list = list.map(it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n\n    this.prepareAutoRestore();\n  }\n\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   */\n  restore() {\n    if (this.hasCachedRegistryMatches) {\n      const extractQuery = (change: MediaChange) => change.mediaQuery;\n      const list = this.originalActivations.map(extractQuery);\n      try {\n\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n\n      } finally {\n        this.originalActivations = [];\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   */\n  private prepareAutoRestore() {\n    const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n    const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n\n    if (enableAutoRestore) {\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   */\n  private deactivateAll() {\n    const list = this.currentActivations;\n\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   */\n  private saveActivations() {\n    if (!this.hasCachedRegistryMatches) {\n      const toMediaChange = (query: string) => new MediaChange(true, query);\n      const mergeMQAlias = (change: MediaChange) => {\n        const bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalActivations = this.currentActivations\n          .map(toMediaChange)\n          .map(mergeMQAlias)\n          .sort(sortDescendingPriority);\n\n      this.cacheRegistryMatches();\n    }\n  }\n\n  /**\n   * Force set manual activations for specified mediaQuery list\n   */\n  private setActivations(list: string[]) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n    this.simulateMediaChanges(list);\n  }\n\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   */\n  private simulateMediaChanges(queries: string[], matches = true) {\n    const toMediaQuery = (query: string) => {\n      const locator = this.breakpoints;\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    const emitChangeEvent = (query: string) => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   */\n  private forceRegistryMatches(queries: string[], matches: boolean) {\n    const registry = new Map<string, MediaQueryList>();\n    queries.forEach(query => {\n      registry.set(query, {matches: matches} as MediaQueryList);\n    });\n\n    this.matchMedia.registry = registry;\n  }\n\n  /**\n   * Save current MatchMedia::registry items.\n   */\n  private cacheRegistryMatches() {\n    const target = this.originalRegistry;\n\n    target.clear();\n    this.matchMedia.registry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n    this.hasCachedRegistryMatches = true;\n  }\n\n  /**\n   * Restore original, 'true' registry\n   */\n  private restoreRegistryMatches() {\n    const target = this.matchMedia.registry;\n\n    target.clear();\n    this.originalRegistry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n\n    this.originalRegistry.clear();\n    this.hasCachedRegistryMatches = false;\n  }\n\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   */\n  private emitChangeEvent(matches: boolean, query: string) {\n    this.matchMedia.source.next(new MediaChange(matches, query));\n  }\n\n  private get currentActivations() {\n    return this.matchMedia.activations;\n  }\n\n  private hasCachedRegistryMatches = false;\n  private originalActivations: MediaChange[] = [];\n  private originalRegistry: Map<string, MediaQueryList> = new Map<string, MediaQueryList>();\n\n  private resizeSubscription!: Subscription;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : '';\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n"],"names":["layout","this","inline","styleCache","layoutAlignHorizontalInlineCache","layoutAlignHorizontalRevInlineCache","layoutAlignVerticalInlineCache","layoutAlignVerticalRevInlineCache","layoutAlignVerticalRevCache","layoutAlignVerticalCache","layoutAlignHorizontalRevCache","layoutAlignHorizontalCache","addStyles","value","LayoutAlignDirective","prototype","onLayoutChange","matcher","_this","layoutKeys","split","includes","LAYOUT_VALUES","find","x","triggerUpdate","type","Directive","args","selector","ElementRef","StyleUtils","LayoutAlignStyleBuilder","decorators","Optional","MediaMarshaller","BaseDirective2","DefaultLayoutAlignDirective","_super","apply","arguments","inputs","tslib_1.__extends","Map","ALL_DIRECTIVES","DefaultLayoutDirective","DefaultLayoutGapDirective","DefaultFlexOrderDirective","DefaultFlexOffsetDirective","FlexFillDirective","DefaultFlexAlignDirective","DefaultFlexDirective","FlexDirective","FlexAlignDirective","FlexOffsetDirective","FlexOrderDirective","LayoutDirective","LayoutGapDirective","FlexModule","NgModule","imports","CoreModule","BidiModule","declarations","slice","exports","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","buildStyles","input","buildCss","Injectable","providedIn","StyleBuilder","GridAlignDirective","elementRef","styleBuilder","styler","marshal","call","DIRECTIVE_KEY","alignCache","init","DefaultGridAlignDirective","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignColumnsStyleBuilder","parent","GridAlignColumnsDirective","_inline","Object","defineProperty","val","coerceBooleanProperty","updateWithValue","alignColumnsInlineCache","alignColumnsCache","Input","DefaultGridAlignColumnsDirective","GridAlignRowsStyleBuilder","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","tslib_1.__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","ExtendedModule","Boolean","Inject","PLATFORM_ID","shouldCache","sideEffect","_input","_styles","_parent","matchMedia","hook","activatedBreakpoints","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","Subject","observeActivations","alias","onMediaChange","mc","bp","findByQuery","mediaQuery","mergeAlias","matches","push","sort","sortDescendingPriority","updateStyles","splice","element","key","updateFn","clearFn","extraTriggers","initBuilderMap","buildElementKeyMap","watchExtraTriggers","getValue","bpMap","get","values","undefined","getActivatedValues","hasValue","setValue","set","updateElement","trackValue","asObservable","pipe","filter","forEach","el","keyMap","Set","valueMap","k","delete","clearElement","builders","next","releaseElement","s","unsubscribe","_","add","triggers","length","watchers","newSubscription","merge","subscribe","currentValue","query","i","activatedBp","has","lastHope","target","queries","items","observe","withPrintQuery","tap","interceptEvents","blockPropagation","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","nativeElement","getAttribute","setAttribute","src","DefaultImgSrcDirective","ClassDirective","delegate","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","ɵNgClassImpl","Self","LayoutNgClassImplProvider","useClass","ɵNgClassR2Impl","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","DISPLAY_MAP","getDisplayStyle","defaultValue","ngOnChanges","changes","keys","inputKey","inputValue","shouldShow","takeUntil","destroySubject","addFlexToParent","lookupStyle","style","setProperty","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","ɵNgStyleImpl","DomSanitizer","LayoutNgStyleImplProvider","ɵNgStyleR2Impl","DefaultStyleDirective","INLINE","LayoutStyleBuilder","buildLayoutCSS","layoutCache","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","zone","observerSubject","change","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","childrenNodes","nodeType","willDisplay","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","gridMode","mru","childrenStyle","getMarginType","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","FlexOrderStyleBuilder","order","parseInt","flexOrderCache","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","FlexAlignStyleBuilder","flexAlignCache","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","flexFillCache","align","mainAxis","crossAxis","flex-direction","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","dest","clone","MediaChange","mqAlias","suffix","priority","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","sources","_i","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","overlapping","mergeByAlias","defaults","custom","dict","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","media","removeListener","isPrintBreakPoint","PRINT","coerceArray","isArray","toMediaQuery","locator","findByAlias","splitQueries","reduce","a1","a2","concat","applyCssPrefixes","j","_validateCalcValue","substr","calc","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","keyValuesToMap","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","__assign","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","property","StylesheetMap","stylesheet","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","mediaTriggerAutoRestore","ssrObserveBreakpoints","InjectionToken","factory","activatedAlias","complete","builder","useCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","TABLET_PORTRAIT","TABLET_LANDSCAPE","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","findByMap","findWithPredicate","searchFn","response","_zone","_platformId","BehaviorSubject","registry","_observable$","results","mql","isActive","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","deactivate","MockMediaQueryList","activations","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","BREAKPOINT_PRINT","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","startPrinting","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","filterOverlaps","destroyed$","_media$","watchActivations","media$","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","asapScheduler","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","MediaTrigger","hasCachedRegistryMatches","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","resize$","fromEvent","window","take","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","cacheRegistryMatches","emitChangeEvent","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","Error","name_1","styleAttrValue"],"mappings":"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"}