{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../src/lib/grid/grid-align/grid-align.ts","../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/style-builder/style-builder.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/utils/sort.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/utils/array.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/media-trigger/media-trigger.ts","../../src/lib/core/style-utils/style-utils.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : parent.inline ? 'inline-flex' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n  protected inline = false;  // default inline value\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    const inline = this.inline;\n    if (layout === 'row' && inline) {\n      this.styleCache = layoutAlignHorizontalInlineCache;\n    } else if (layout === 'row' && !inline) {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse' && inline) {\n      this.styleCache = layoutAlignHorizontalRevInlineCache;\n    } else if (layout === 'row-reverse' && !inline) {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column' && inline) {\n      this.styleCache = layoutAlignVerticalInlineCache;\n    } else if (layout === 'column' && !inline) {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse' && inline) {\n      this.styleCache = layoutAlignVerticalRevInlineCache;\n    } else if (layout === 'column-reverse' && !inline) {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout, inline});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layoutKeys: string[] = matcher.value.split(' ');\n    this.layout = layoutKeys[0];\n    this.inline = matcher.value.includes('inline');\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevInlineCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('7.0.0-beta.23-a6b3b1c');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected iterableDiffers: IterableDiffers,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(\n        this.iterableDiffers, this.keyValueDiffers, this.elementRef, this.renderer\n      );\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  KeyValueDiffers,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.keyValueDiffers, this.elementRef, this.renderer);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** We need to override clearStyles because in most cases mru isn't populated */\n  protected clearStyles() {\n    const gridMode = Object.keys(this.mru).length > 0;\n    const childrenStyle = gridMode ? 'padding' :\n      getMarginType(this.directionality.value, this.layout);\n\n    // If there are styles on the parent remove them\n    if (gridMode) {\n      super.clearStyles();\n    }\n\n    // Then remove the children styles too\n    this.styleUtils.applyStyleToElements({[childrenStyle]: ''}, this.childrenNodes);\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction getMarginType(directionality: string, layout: string) {\n  switch (layout) {\n    case 'column':\n      return 'margin-bottom';\n    case 'column-reverse':\n      return 'margin-top';\n    case 'row':\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n    case 'row-reverse':\n      return directionality === 'rtl' ? 'margin-right' : 'margin-left';\n    default :\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n  }\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  const key = getMarginType(parent.directionality, parent.layout);\n  const margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n  margins[key] = gapValue;\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue, this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n  readonly source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  registry = new Map<string, MediaQueryList>();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this.registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this.registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this.source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this.registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this.registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n\n  protected _observable$ = this.source.asObservable();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is not supported; so 'print' mediaQuery activations must be used.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else {\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Wraps the provided value in an array, unless the provided value is an array. */\nexport function coerceArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, OnDestroy} from '@angular/core';\nimport {Subject, asapScheduler, Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\n\nimport {sortDescendingPriority} from '../utils/sort';\nimport {coerceArray} from '../utils/array';\n\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver implements OnDestroy {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 7.0.0-beta.24\n   * @deletion-target v7.0.0-beta.25\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n  /**\n   * Completes the active subject, signalling to all complete for all\n   * MediaObserver subscribers\n   */\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if one or more media query/alias match\n   * the current viewport size.\n   * @param value One or more media queries (or aliases) to check.\n   * @returns Whether any of the media queries match.\n   */\n  isActive(value: string | string[]): boolean {\n    const aliases = splitQueries(coerceArray(value));\n    return aliases.some(alias => {\n      const query = toMediaQuery(alias, this.breakpoints);\n      return this.matchMedia.isActive(query);\n    });\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(0, asapScheduler),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges),\n            takeUntil(this.destroyed$)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n  private readonly destroyed$ = new Subject<void>();\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries: string[]): string[] {\n  return queries.map((query: string) => query.split(','))\n                .reduce((a1: string[], a2: string[]) => a1.concat(a2))\n                .map(query => query.trim());\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n  mediaTriggerAutoRestore?: boolean;\n  ssrObserveBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: [],\n  mediaTriggerAutoRestore: true,\n  ssrObserveBreakpoints: [],\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n    'Flex Layout token, config options for the library', {\n      providedIn: 'root',\n      factory: () => DEFAULT_CONFIG\n    });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.99px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.99px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.99px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.99px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.99px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599.99px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959.99px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279.99px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919.99px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599.99px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.99px)';\n\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.99px)';\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.99px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n\n  autoRegisterQueries = true;   // Used for testing BreakPoint registrations\n  useOverlaps = false;          // Allow fallback to overlapping mediaQueries\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this.registry.forEach((mql: MediaQueryList) => {\n      (mql as MockMediaQueryList).destroy();\n    });\n    this.registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql: MockMediaQueryList = this.registry.get(mediaQuery) as MockMediaQueryList;\n\n    if (mql && !this.isActive(mediaQuery)) {\n      this.registry.set(mediaQuery, mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this.registry.forEach((it: MediaQueryList) => {\n      (it as MockMediaQueryList).deactivate();\n    });\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this.activations.length > 0;\n  }\n\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\nimport {fromEvent, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n/**\n * Class\n */\n@Injectable({providedIn: 'root'})\nexport class MediaTrigger {\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected matchMedia: MatchMedia,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(PLATFORM_ID) protected _platformId: Object,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Manually activate range of breakpoints\n   * @param list array of mediaQuery or alias strings\n   */\n  activate(list: string[]) {\n    list = list.map(it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n\n    this.prepareAutoRestore();\n  }\n\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   */\n  restore() {\n    if (this.hasCachedRegistryMatches) {\n      const extractQuery = (change: MediaChange) => change.mediaQuery;\n      const list = this.originalActivations.map(extractQuery);\n      try {\n\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n\n      } finally {\n        this.originalActivations = [];\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   */\n  private prepareAutoRestore() {\n    const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n    const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n\n    if (enableAutoRestore) {\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   */\n  private deactivateAll() {\n    const list = this.currentActivations;\n\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   */\n  private saveActivations() {\n    if (!this.hasCachedRegistryMatches) {\n      const toMediaChange = (query: string) => new MediaChange(true, query);\n      const mergeMQAlias = (change: MediaChange) => {\n        const bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalActivations = this.currentActivations\n          .map(toMediaChange)\n          .map(mergeMQAlias)\n          .sort(sortDescendingPriority);\n\n      this.cacheRegistryMatches();\n    }\n  }\n\n  /**\n   * Force set manual activations for specified mediaQuery list\n   */\n  private setActivations(list: string[]) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n    this.simulateMediaChanges(list);\n  }\n\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   */\n  private simulateMediaChanges(queries: string[], matches = true) {\n    const toMediaQuery = (query: string) => {\n      const locator = this.breakpoints;\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    const emitChangeEvent = (query: string) => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   */\n  private forceRegistryMatches(queries: string[], matches: boolean) {\n    const registry = new Map<string, MediaQueryList>();\n    queries.forEach(query => {\n      registry.set(query, {matches: matches} as MediaQueryList);\n    });\n\n    this.matchMedia.registry = registry;\n  }\n\n  /**\n   * Save current MatchMedia::registry items.\n   */\n  private cacheRegistryMatches() {\n    const target = this.originalRegistry;\n\n    target.clear();\n    this.matchMedia.registry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n    this.hasCachedRegistryMatches = true;\n  }\n\n  /**\n   * Restore original, 'true' registry\n   */\n  private restoreRegistryMatches() {\n    const target = this.matchMedia.registry;\n\n    target.clear();\n    this.originalRegistry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n\n    this.originalRegistry.clear();\n    this.hasCachedRegistryMatches = false;\n  }\n\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   */\n  private emitChangeEvent(matches: boolean, query: string) {\n    this.matchMedia.source.next(new MediaChange(matches, query));\n  }\n\n  private get currentActivations() {\n    return this.matchMedia.activations;\n  }\n\n  private hasCachedRegistryMatches = false;\n  private originalActivations: MediaChange[] = [];\n  private originalRegistry: Map<string, MediaQueryList> = new Map<string, MediaQueryList>();\n\n  private resizeSubscription!: Subscription;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : '';\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n"],"names":["type","Directive","args","selector","inputs","DefaultLayoutAlignDirective","LayoutAlignDirective","layoutAlignHorizontalCache","Map","layoutAlignVerticalCache","layoutAlignHorizontalRevCache","layoutAlignVerticalRevCache","layoutAlignHorizontalInlineCache","layoutAlignVerticalInlineCache","layoutAlignHorizontalRevInlineCache","layoutAlignVerticalRevInlineCache","ALL_DIRECTIVES","DefaultLayoutDirective","DefaultLayoutGapDirective","DefaultFlexOrderDirective","DefaultFlexOffsetDirective","FlexFillDirective","DefaultFlexAlignDirective","DefaultFlexDirective","NgModule","imports","CoreModule","BidiModule","declarations","slice","exports","FlexModule","ROW_DEFAULT","COL_DEFAULT","tslib_1.__extends","GridAlignStyleBuilder","_super","prototype","buildStyles","input","buildCss","Injectable","providedIn","StyleBuilder","GridAlignDirective","elementRef","styleBuilder","styler","marshal","_this","call","this","DIRECTIVE_KEY","styleCache","alignCache","init","ElementRef","decorators","Optional","StyleUtils","MediaMarshaller","BaseDirective2","DefaultGridAlignDirective","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignColumnsStyleBuilder","parent","inline","GridAlignColumnsDirective","_inline","Object","defineProperty","val","coerceBooleanProperty","updateWithValue","value","alignColumnsInlineCache","alignColumnsCache","addStyles","Input","DefaultGridAlignColumnsDirective","GridAlignRowsStyleBuilder","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","split","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","tslib_1.__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","ExtendedModule","Boolean","Inject","PLATFORM_ID","matchMedia","hook","activatedBreakpoints","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","Subject","observeActivations","alias","onMediaChange","mc","bp","findByQuery","mediaQuery","mergeAlias","matches","push","sort","sortDescendingPriority","updateStyles","splice","element","key","updateFn","clearFn","extraTriggers","initBuilderMap","buildElementKeyMap","watchExtraTriggers","getValue","bpMap","get","values","undefined","getActivatedValues","hasValue","setValue","set","updateElement","trackValue","asObservable","pipe","filter","forEach","el","keyMap","Set","valueMap","k","delete","clearElement","builders","next","releaseElement","s","unsubscribe","_","triggerUpdate","add","triggers","length","watchers","newSubscription","merge","apply","subscribe","currentValue","query","i","activatedBp","has","lastHope","target","queries","items","observe","withPrintQuery","tap","interceptEvents","blockPropagation","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","nativeElement","getAttribute","setAttribute","src","DefaultImgSrcDirective","ClassDirective","iterableDiffers","keyValueDiffers","renderer","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","IterableDiffers","KeyValueDiffers","Renderer2","Self","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","DISPLAY_MAP","getDisplayStyle","defaultValue","ngOnChanges","changes","keys","inputKey","inputValue","shouldShow","takeUntil","destroySubject","addFlexToParent","lookupStyle","style","setProperty","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","DomSanitizer","DefaultStyleDirective","INLINE","LAYOUT_VALUES","LayoutStyleBuilder","buildLayoutCSS","LayoutDirective","layoutCache","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","sideEffect","_styles","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapDirective","zone","layout","observerSubject","change","onLayoutChange","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","matcher","find","x","childrenNodes","nodeType","willDisplay","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","gridMode","mru","childrenStyle","getMarginType","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","FlexDirective","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","FlexOrderStyleBuilder","order","parseInt","FlexOrderDirective","flexOrderCache","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","_input","flexFillCache","LayoutAlignStyleBuilder","align","mainAxis","crossAxis","flex-direction","layoutKeys","includes","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","dest","clone","MediaChange","mqAlias","suffix","priority","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","sources","_i","arguments","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","overlapping","mergeByAlias","defaults","custom","dict","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","media","removeListener","isPrintBreakPoint","PRINT","coerceArray","isArray","toMediaQuery","locator","findByAlias","splitQueries","reduce","a1","a2","concat","applyCssPrefixes","j","_validateCalcValue","substr","calc","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","keyValuesToMap","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","__assign","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","property","stylesheet","StylesheetMap","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","mediaTriggerAutoRestore","ssrObserveBreakpoints","InjectionToken","factory","activatedAlias","complete","builder","useCache","shouldCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","HANDSET_PORTRAIT","TABLET_PORTRAIT","TABLET_LANDSCAPE","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","findByMap","findWithPredicate","searchFn","response","_zone","_platformId","BehaviorSubject","registry","_observable$","results","mql","isActive","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","deactivate","MockMediaQueryList","activations","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","useClass","BREAKPOINT_PRINT","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","startPrinting","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","filterOverlaps","destroyed$","_media$","watchActivations","media$","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","asapScheduler","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","MediaTrigger","hasCachedRegistryMatches","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","resize$","fromEvent","window","take","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","cacheRegistryMatches","emitChangeEvent","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","Error","name_1","styleAttrValue","_parent"],"mappings":"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"}