{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../src/lib/grid/grid-align/grid-align.ts","../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/utils/sort.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/utils/array.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/media-trigger/media-trigger.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : parent.inline ? 'inline-flex' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n@Directive()\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n  protected inline = false;  // default inline value\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: LayoutAlignStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    const inline = this.inline;\n    if (layout === 'row' && inline) {\n      this.styleCache = layoutAlignHorizontalInlineCache;\n    } else if (layout === 'row' && !inline) {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse' && inline) {\n      this.styleCache = layoutAlignHorizontalRevInlineCache;\n    } else if (layout === 'row-reverse' && !inline) {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column' && inline) {\n      this.styleCache = layoutAlignVerticalInlineCache;\n    } else if (layout === 'column' && !inline) {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse' && inline) {\n      this.styleCache = layoutAlignVerticalRevInlineCache;\n    } else if (layout === 'column-reverse' && !inline) {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout, inline});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layoutKeys: string[] = matcher.value.split(' ');\n    this.layout = layoutKeys[0];\n    this.inline = matcher.value.includes('inline');\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevInlineCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\n@Directive()\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive()\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignColumnsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive()\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignRowsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridAreaStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\n@Directive()\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridAreasStyleBuiler,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\n@Directive()\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAutoStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridColumnStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive()\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridColumnsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\n@Directive()\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridGapStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridRowStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive()\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridRowsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('9.0.0-beta.28-f8e9d75');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, ModuleWithProviders, NgModule, PLATFORM_ID} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(private _serverStylesheet: StylesheetMap,\n              @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : '';\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\n@Directive()\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: ImgSrcStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\n@Directive()\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(elementRef: ElementRef,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              iterableDiffers: IterableDiffers,\n              keyValueDiffers: KeyValueDiffers,\n              renderer2: Renderer2,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(iterableDiffers, keyValueDiffers, elementRef, renderer2);\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\n@Directive()\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: ShowHideStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  KeyValueDiffers,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\n@Directive()\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(elementRef: ElementRef,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              protected sanitizer: DomSanitizer,\n              differs: KeyValueDiffers,\n              renderer2: Renderer2,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(elementRef, differs, renderer2);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive()\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: LayoutStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n@Directive()\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              styleBuilder: LayoutGapStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** We need to override clearStyles because in most cases mru isn't populated */\n  protected clearStyles() {\n    const gridMode = Object.keys(this.mru).length > 0;\n    const childrenStyle = gridMode ? 'padding' :\n      getMarginType(this.directionality.value, this.layout);\n\n    // If there are styles on the parent remove them\n    if (gridMode) {\n      super.clearStyles();\n    }\n\n    // Then remove the children styles too\n    this.styleUtils.applyStyleToElements({[childrenStyle]: ''}, this.childrenNodes);\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction getMarginType(directionality: string, layout: string) {\n  switch (layout) {\n    case 'column':\n      return 'margin-bottom';\n    case 'column-reverse':\n      return 'margin-top';\n    case 'row':\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n    case 'row-reverse':\n      return directionality === 'rtl' ? 'margin-right' : 'margin-left';\n    default :\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n  }\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  const key = getMarginType(parent.directionality, parent.layout);\n  const margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n  margins[key] = gapValue;\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive()\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              styleBuilder: FlexStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n      this.marshal.trackValue(this.nativeElement, 'layout-align')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerReflow.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue + '', this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n@Directive()\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: FlexOrderStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive()\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(elRef: ElementRef,\n              protected directionality: Directionality,\n              styleBuilder: FlexOffsetStyleBuilder,\n              marshal: MediaMarshaller,\n              styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n@Directive()\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: FlexAlignStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: FlexFillStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n  readonly source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  registry = new Map<string, MediaQueryList>();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this.registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this.registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this.source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this.registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this.registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n\n  protected _observable$ = this.source.asObservable();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {DOCUMENT} from '@angular/common';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n\n  // registeredBeforeAfterPrintHooks tracks if we registered the `beforeprint`\n  //  and `afterprint` event listeners.\n  private registeredBeforeAfterPrintHooks: boolean = false;\n\n  // isPrintingBeforeAfterEvent is used to track if we are printing from within\n  // a `beforeprint` event handler. This prevents the typicall `stopPrinting`\n  // form `interceptEvents` so that printing is not stopped while the dialog\n  // is still open. This is an extension of the `isPrinting` property on\n  // browsers which support `beforeprint` and `afterprint` events.\n  private isPrintingBeforeAfterEvent: boolean = false;\n\n  // registerBeforeAfterPrintHooks registers a `beforeprint` event hook so we can\n  // trigger print styles synchronously and apply proper layout styles.\n  // It is a noop if the hooks have already been registered or if the document's\n  // `defaultView` is not available.\n  private registerBeforeAfterPrintHooks(target: HookTarget) {\n    // `defaultView` may be null when rendering on the server or in other contexts.\n    if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) {\n      return;\n    }\n\n    this.registeredBeforeAfterPrintHooks = true;\n\n    // Could we have teardown logic to remove if there are no print listeners being used?\n    this._document.defaultView.addEventListener('beforeprint', () => {\n      // If we aren't already printing, start printing and update the styles as\n      // if there was a regular print `MediaChange`(from matchMedia).\n      if (!this.isPrinting) {\n        this.isPrintingBeforeAfterEvent = true;\n        this.startPrinting(target, this.getEventBreakpoints(new MediaChange(true, PRINT)));\n        target.updateStyles();\n      }\n    });\n\n    this._document.defaultView.addEventListener('afterprint', () => {\n      // If we aren't already printing, start printing and update the styles as\n      // if there was a regular print `MediaChange`(from matchMedia).\n      this.isPrintingBeforeAfterEvent = false;\n      if (this.isPrinting) {\n        this.stopPrinting(target);\n        target.updateStyles();\n      }\n    });\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    this.registerBeforeAfterPrintHooks(target);\n\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting && !this.isPrintingBeforeAfterEvent) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is supported; so 'print' mediaQuery activations are used as a fallback\n   * in browsers without `beforeprint` support.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else if (!this.isPrintingBeforeAfterEvent) {\n        // Only clear deactivations if we aren't printing from a `beforeprint` event.\n        // Otherwise this will clear before `stopPrinting()` is called to restore\n        // the pre-Print Activations.\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Wraps the provided value in an array, unless the provided value is an array. */\nexport function coerceArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, OnDestroy} from '@angular/core';\nimport {Subject, asapScheduler, Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\n\nimport {sortDescendingPriority} from '../utils/sort';\nimport {coerceArray} from '../utils/array';\n\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver implements OnDestroy {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 8.0.0-beta.25\n   * @deletion-target 10.0.0\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n  /**\n   * Completes the active subject, signalling to all complete for all\n   * MediaObserver subscribers\n   */\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if one or more media query/alias match\n   * the current viewport size.\n   * @param value One or more media queries (or aliases) to check.\n   * @returns Whether any of the media queries match.\n   */\n  isActive(value: string | string[]): boolean {\n    const aliases = splitQueries(coerceArray(value));\n    return aliases.some(alias => {\n      const query = toMediaQuery(alias, this.breakpoints);\n      return this.matchMedia.isActive(query);\n    });\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(0, asapScheduler),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges),\n            takeUntil(this.destroyed$)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n  private readonly destroyed$ = new Subject<void>();\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries: string[]): string[] {\n  return queries.map((query: string) => query.split(','))\n                .reduce((a1: string[], a2: string[]) => a1.concat(a2))\n                .map(query => query.trim());\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n\n/**\n * *****************************************************************\n * Define module for common Angular Layout utilities\n * *****************************************************************\n */\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n  mediaTriggerAutoRestore?: boolean;\n  ssrObserveBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: [],\n  mediaTriggerAutoRestore: true,\n  ssrObserveBreakpoints: [],\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n    'Flex Layout token, config options for the library', {\n      providedIn: 'root',\n      factory: () => DEFAULT_CONFIG\n    });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.9px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.9px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.9px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.9px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.9px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599.9px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959.9px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279.9px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919.9px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599.9px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.9px)';\n\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.9px)';\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.9px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n\n  autoRegisterQueries = true;   // Used for testing BreakPoint registrations\n  useOverlaps = false;          // Allow fallback to overlapping mediaQueries\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this.registry.forEach((mql: MediaQueryList) => {\n      (mql as MockMediaQueryList).destroy();\n    });\n    this.registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql: MockMediaQueryList = this.registry.get(mediaQuery) as MockMediaQueryList;\n\n    if (mql && !this.isActive(mediaQuery)) {\n      this.registry.set(mediaQuery, mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this.registry.forEach((it: MediaQueryList) => {\n      (it as MockMediaQueryList).deactivate();\n    });\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this.activations.length > 0;\n  }\n\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\nimport {fromEvent, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n/**\n * Class\n */\n@Injectable({providedIn: 'root'})\nexport class MediaTrigger {\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected matchMedia: MatchMedia,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(PLATFORM_ID) protected _platformId: Object,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Manually activate range of breakpoints\n   * @param list array of mediaQuery or alias strings\n   */\n  activate(list: string[]) {\n    list = list.map(it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n\n    this.prepareAutoRestore();\n  }\n\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   */\n  restore() {\n    if (this.hasCachedRegistryMatches) {\n      const extractQuery = (change: MediaChange) => change.mediaQuery;\n      const list = this.originalActivations.map(extractQuery);\n      try {\n\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n\n      } finally {\n        this.originalActivations = [];\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   */\n  private prepareAutoRestore() {\n    const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n    const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n\n    if (enableAutoRestore) {\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   */\n  private deactivateAll() {\n    const list = this.currentActivations;\n\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   */\n  private saveActivations() {\n    if (!this.hasCachedRegistryMatches) {\n      const toMediaChange = (query: string) => new MediaChange(true, query);\n      const mergeMQAlias = (change: MediaChange) => {\n        const bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalActivations = this.currentActivations\n          .map(toMediaChange)\n          .map(mergeMQAlias)\n          .sort(sortDescendingPriority);\n\n      this.cacheRegistryMatches();\n    }\n  }\n\n  /**\n   * Force set manual activations for specified mediaQuery list\n   */\n  private setActivations(list: string[]) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n    this.simulateMediaChanges(list);\n  }\n\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   */\n  private simulateMediaChanges(queries: string[], matches = true) {\n    const toMediaQuery = (query: string) => {\n      const locator = this.breakpoints;\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    const emitChangeEvent = (query: string) => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   */\n  private forceRegistryMatches(queries: string[], matches: boolean) {\n    const registry = new Map<string, MediaQueryList>();\n    queries.forEach(query => {\n      registry.set(query, {matches: matches} as MediaQueryList);\n    });\n\n    this.matchMedia.registry = registry;\n  }\n\n  /**\n   * Save current MatchMedia::registry items.\n   */\n  private cacheRegistryMatches() {\n    const target = this.originalRegistry;\n\n    target.clear();\n    this.matchMedia.registry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n    this.hasCachedRegistryMatches = true;\n  }\n\n  /**\n   * Restore original, 'true' registry\n   */\n  private restoreRegistryMatches() {\n    const target = this.matchMedia.registry;\n\n    target.clear();\n    this.originalRegistry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n\n    this.originalRegistry.clear();\n    this.hasCachedRegistryMatches = false;\n  }\n\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   */\n  private emitChangeEvent(matches: boolean, query: string) {\n    this.matchMedia.source.next(new MediaChange(matches, query));\n  }\n\n  private get currentActivations() {\n    return this.matchMedia.activations;\n  }\n\n  private hasCachedRegistryMatches = false;\n  private originalActivations: MediaChange[] = [];\n  private originalRegistry: Map<string, MediaQueryList> = new Map<string, MediaQueryList>();\n\n  private resizeSubscription!: Subscription;\n}\n\n"],"names":["this","layout","layoutKeys","inline","matcher","value","includes","LAYOUT_VALUES","find","x","_this","triggerUpdate","type","Directive","ElementRef","StyleUtils","LayoutAlignStyleBuilder","MediaMarshaller","LayoutAlignDirective","BaseDirective2","DefaultLayoutAlignDirective","_super","apply","arguments","inputs","__extends","args","selector","layoutAlignHorizontalCache","Map","layoutAlignVerticalCache","layoutAlignHorizontalRevCache","layoutAlignVerticalRevCache","layoutAlignHorizontalInlineCache","layoutAlignVerticalInlineCache","layoutAlignHorizontalRevInlineCache","layoutAlignVerticalRevInlineCache","ALL_DIRECTIVES","DefaultLayoutDirective","DefaultLayoutGapDirective","DefaultFlexOrderDirective","DefaultFlexOffsetDirective","FlexFillDirective","DefaultFlexAlignDirective","DefaultFlexDirective","FlexModule","NgModule","imports","CoreModule","BidiModule","declarations","__spreadArrays","exports","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","prototype","buildStyles","input","buildCss","Injectable","providedIn","StyleBuilder","GridAlignDirective","elementRef","styleBuilder","styler","marshal","call","DIRECTIVE_KEY","styleCache","alignCache","init","DefaultGridAlignDirective","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignColumnsStyleBuilder","parent","GridAlignColumnsDirective","_inline","Object","defineProperty","val","coerceBooleanProperty","updateWithValue","alignColumnsInlineCache","alignColumnsCache","addStyles","Input","DefaultGridAlignColumnsDirective","GridAlignRowsStyleBuilder","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","split","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","ExtendedModule","Boolean","decorators","Inject","PLATFORM_ID","_readStyleAttribute","element","styleMap","styleAttribute","getAttribute","styleList","i","length","style","colonIndex","Error","name_1","substr","_writeStyleAttribute","styleAttrValue","key","setAttribute","StylesheetMap","undefined","shouldCache","sideEffect","_input","_styles","_parent","matchMedia","hook","activatedBreakpoints","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","Subject","observeActivations","alias","onMediaChange","mc","bp","findByQuery","mediaQuery","mergeAlias","matches","push","sort","sortDescendingPriority","updateStyles","splice","updateFn","clearFn","extraTriggers","initBuilderMap","buildElementKeyMap","watchExtraTriggers","getValue","bpMap","get","values","getActivatedValues","hasValue","setValue","set","updateElement","trackValue","asObservable","pipe","filter","forEach","el","keyMap","Set","valueMap","k","delete","clearElement","builders","next","releaseElement","s","unsubscribe","_","add","triggers","watchers","newSubscription","merge","subscribe","currentValue","query","activatedBp","has","lastHope","target","queries","items","observe","withPrintQuery","tap","interceptEvents","blockPropagation","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","nativeElement","src","DefaultImgSrcDirective","ClassDirective","iterableDiffers","keyValueDiffers","renderer2","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","IterableDiffers","KeyValueDiffers","Renderer2","Optional","Self","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","DISPLAY_MAP","getDisplayStyle","defaultValue","ngOnChanges","changes","keys","inputKey","slice","inputValue","shouldShow","takeUntil","destroySubject","addFlexToParent","lookupStyle","setProperty","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","differs","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","DomSanitizer","DefaultStyleDirective","INLINE","LayoutStyleBuilder","buildLayoutCSS","LayoutDirective","layoutCache","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapDirective","zone","observerSubject","change","onLayoutChange","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","childrenNodes","nodeType","willDisplay","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","gridMode","mru","childrenStyle","getMarginType","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","FlexDirective","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","FlexOrderStyleBuilder","order","parseInt","FlexOrderDirective","flexOrderCache","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","flexFillCache","align","mainAxis","crossAxis","flex-direction","d","__","constructor","extendStatics","create","il","r","j","jl","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","dest","clone","MediaChange","mqAlias","suffix","priority","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","sources","_i","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","overlapping","mergeByAlias","defaults","custom","dict","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","media","removeListener","isPrintBreakPoint","PRINT","coerceArray","isArray","toMediaQuery","locator","findByAlias","splitQueries","reduce","a1","a2","concat","applyCssPrefixes","_validateCalcValue","calc","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","keyValuesToMap","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","property","stylesheet","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","mediaTriggerAutoRestore","ssrObserveBreakpoints","InjectionToken","factory","activatedAlias","complete","builder","useCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","TABLET_PORTRAIT","TABLET_LANDSCAPE","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","findByMap","findWithPredicate","searchFn","response","_zone","_platformId","BehaviorSubject","registry","_observable$","results","mql","isActive","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","deactivate","MockMediaQueryList","activations","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","useClass","BREAKPOINT_PRINT","registeredBeforeAfterPrintHooks","isPrintingBeforeAfterEvent","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","registerBeforeAfterPrintHooks","defaultView","startPrinting","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","filterOverlaps","destroyed$","_media$","watchActivations","media$","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","asapScheduler","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","MediaTrigger","hasCachedRegistryMatches","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","resize$","fromEvent","window","take","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","cacheRegistryMatches","emitChangeEvent","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","_setServerStyle","styleValue"],"mappings":"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"}