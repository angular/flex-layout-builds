{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../src/lib/grid/grid-align/grid-align.ts","../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/style-builder/style-builder.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/utils/sort.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/utils/array.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/media-trigger/media-trigger.ts","../../src/lib/core/style-utils/style-utils.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : parent.inline ? 'inline-flex' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n  protected inline = false;  // default inline value\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    const inline = this.inline;\n    if (layout === 'row' && inline) {\n      this.styleCache = layoutAlignHorizontalInlineCache;\n    } else if (layout === 'row' && !inline) {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse' && inline) {\n      this.styleCache = layoutAlignHorizontalRevInlineCache;\n    } else if (layout === 'row-reverse' && !inline) {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column' && inline) {\n      this.styleCache = layoutAlignVerticalInlineCache;\n    } else if (layout === 'column' && !inline) {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse' && inline) {\n      this.styleCache = layoutAlignVerticalRevInlineCache;\n    } else if (layout === 'column-reverse' && !inline) {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout, inline});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layoutKeys: string[] = matcher.value.split(' ');\n    this.layout = layoutKeys[0];\n    this.inline = matcher.value.includes('inline');\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevInlineCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('7.0.0-beta.23-c23621c');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected iterableDiffers: IterableDiffers,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(\n        this.iterableDiffers, this.keyValueDiffers, this.elementRef, this.renderer\n      );\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  KeyValueDiffers,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.keyValueDiffers, this.elementRef, this.renderer);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  let key, margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n\n  switch (parent.layout) {\n    case 'column':\n      key = 'margin-bottom';\n      break;\n    case 'column-reverse':\n      key = 'margin-top';\n      break;\n    case 'row':\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n    case 'row-reverse':\n      key = parent.directionality === 'rtl' ? 'margin-right' : 'margin-left';\n      break;\n    default :\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n  }\n  margins[key] = gapValue;\n\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue, this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n  readonly source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  registry = new Map<string, MediaQueryList>();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this.registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this.registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this.source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this.registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this.registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n\n  protected _observable$ = this.source.asObservable();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is not supported; so 'print' mediaQuery activations must be used.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else {\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Wraps the provided value in an array, unless the provided value is an array. */\nexport function coerceArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, OnDestroy} from '@angular/core';\nimport {Subject, asapScheduler, Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\n\nimport {sortDescendingPriority} from '../utils/sort';\nimport {coerceArray} from '../utils/array';\n\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver implements OnDestroy {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 7.0.0-beta.24\n   * @deletion-target v7.0.0-beta.25\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n  /**\n   * Completes the active subject, signalling to all complete for all\n   * MediaObserver subscribers\n   */\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if one or more media query/alias match\n   * the current viewport size.\n   * @param value One or more media queries (or aliases) to check.\n   * @returns Whether any of the media queries match.\n   */\n  isActive(value: string | string[]): boolean {\n    const aliases = splitQueries(coerceArray(value));\n    return aliases.some(alias => {\n      const query = toMediaQuery(alias, this.breakpoints);\n      return this.matchMedia.isActive(query);\n    });\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(0, asapScheduler),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges),\n            takeUntil(this.destroyed$)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n  private readonly destroyed$ = new Subject<void>();\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries: string[]): string[] {\n  return queries.map((query: string) => query.split(','))\n                .reduce((a1: string[], a2: string[]) => a1.concat(a2))\n                .map(query => query.trim());\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n  mediaTriggerAutoRestore?: boolean;\n  ssrObserveBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: [],\n  mediaTriggerAutoRestore: true,\n  ssrObserveBreakpoints: [],\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n    'Flex Layout token, config options for the library', {\n      providedIn: 'root',\n      factory: () => DEFAULT_CONFIG\n    });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.99px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.99px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.99px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.99px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.99px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599.99px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959.99px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279.99px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919.99px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599.99px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.99px)';\n\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.99px)';\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.99px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n\n  autoRegisterQueries = true;   // Used for testing BreakPoint registrations\n  useOverlaps = false;          // Allow fallback to overlapping mediaQueries\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this.registry.forEach((mql: MediaQueryList) => {\n      (mql as MockMediaQueryList).destroy();\n    });\n    this.registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql: MockMediaQueryList = this.registry.get(mediaQuery) as MockMediaQueryList;\n\n    if (mql && !this.isActive(mediaQuery)) {\n      this.registry.set(mediaQuery, mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this.registry.forEach((it: MediaQueryList) => {\n      (it as MockMediaQueryList).deactivate();\n    });\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this.activations.length > 0;\n  }\n\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\nimport {fromEvent, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n/**\n * Class\n */\n@Injectable({providedIn: 'root'})\nexport class MediaTrigger {\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected matchMedia: MatchMedia,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(PLATFORM_ID) protected _platformId: Object,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Manually activate range of breakpoints\n   * @param list array of mediaQuery or alias strings\n   */\n  activate(list: string[]) {\n    list = list.map(it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n\n    this.prepareAutoRestore();\n  }\n\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   */\n  restore() {\n    if (this.hasCachedRegistryMatches) {\n      const extractQuery = (change: MediaChange) => change.mediaQuery;\n      const list = this.originalActivations.map(extractQuery);\n      try {\n\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n\n      } finally {\n        this.originalActivations = [];\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   */\n  private prepareAutoRestore() {\n    const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n    const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n\n    if (enableAutoRestore) {\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   */\n  private deactivateAll() {\n    const list = this.currentActivations;\n\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   */\n  private saveActivations() {\n    if (!this.hasCachedRegistryMatches) {\n      const toMediaChange = (query: string) => new MediaChange(true, query);\n      const mergeMQAlias = (change: MediaChange) => {\n        const bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalActivations = this.currentActivations\n          .map(toMediaChange)\n          .map(mergeMQAlias)\n          .sort(sortDescendingPriority);\n\n      this.cacheRegistryMatches();\n    }\n  }\n\n  /**\n   * Force set manual activations for specified mediaQuery list\n   */\n  private setActivations(list: string[]) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n    this.simulateMediaChanges(list);\n  }\n\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   */\n  private simulateMediaChanges(queries: string[], matches = true) {\n    const toMediaQuery = (query: string) => {\n      const locator = this.breakpoints;\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    const emitChangeEvent = (query: string) => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   */\n  private forceRegistryMatches(queries: string[], matches: boolean) {\n    const registry = new Map<string, MediaQueryList>();\n    queries.forEach(query => {\n      registry.set(query, {matches: matches} as MediaQueryList);\n    });\n\n    this.matchMedia.registry = registry;\n  }\n\n  /**\n   * Save current MatchMedia::registry items.\n   */\n  private cacheRegistryMatches() {\n    const target = this.originalRegistry;\n\n    target.clear();\n    this.matchMedia.registry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n    this.hasCachedRegistryMatches = true;\n  }\n\n  /**\n   * Restore original, 'true' registry\n   */\n  private restoreRegistryMatches() {\n    const target = this.matchMedia.registry;\n\n    target.clear();\n    this.originalRegistry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n\n    this.originalRegistry.clear();\n    this.hasCachedRegistryMatches = false;\n  }\n\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   */\n  private emitChangeEvent(matches: boolean, query: string) {\n    this.matchMedia.source.next(new MediaChange(matches, query));\n  }\n\n  private get currentActivations() {\n    return this.matchMedia.activations;\n  }\n\n  private hasCachedRegistryMatches = false;\n  private originalActivations: MediaChange[] = [];\n  private originalRegistry: Map<string, MediaQueryList> = new Map<string, MediaQueryList>();\n\n  private resizeSubscription!: Subscription;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : '';\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n"],"names":["inputs","DefaultLayoutAlignDirective","LayoutAlignDirective","layoutAlignHorizontalCache","Map","layoutAlignVerticalCache","layoutAlignHorizontalRevCache","layoutAlignVerticalRevCache","layoutAlignHorizontalInlineCache","layoutAlignVerticalInlineCache","layoutAlignHorizontalRevInlineCache","layoutAlignVerticalRevInlineCache","ALL_DIRECTIVES","DefaultLayoutDirective","DefaultLayoutGapDirective","DefaultFlexOrderDirective","DefaultFlexOffsetDirective","FlexFillDirective","DefaultFlexAlignDirective","DefaultFlexDirective","type","NgModule","args","imports","CoreModule","BidiModule","declarations","slice","exports","FlexModule","ROW_DEFAULT","COL_DEFAULT","tslib_1.__extends","GridAlignStyleBuilder","_super","prototype","buildStyles","input","buildCss","Injectable","providedIn","StyleBuilder","GridAlignDirective","elementRef","styleBuilder","styler","marshal","_this","call","this","DIRECTIVE_KEY","styleCache","alignCache","init","ElementRef","decorators","Optional","StyleUtils","MediaMarshaller","BaseDirective2","DefaultGridAlignDirective","Directive","selector","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignColumnsStyleBuilder","parent","inline","GridAlignColumnsDirective","_inline","Object","defineProperty","val","coerceBooleanProperty","updateWithValue","value","alignColumnsInlineCache","alignColumnsCache","addStyles","Input","DefaultGridAlignColumnsDirective","GridAlignRowsStyleBuilder","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","split","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","tslib_1.__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","ExtendedModule","Boolean","Inject","PLATFORM_ID","matchMedia","hook","activatedBreakpoints","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","Subject","observeActivations","alias","onMediaChange","mc","bp","findByQuery","mediaQuery","mergeAlias","matches","push","sort","sortDescendingPriority","updateStyles","splice","element","key","updateFn","clearFn","extraTriggers","initBuilderMap","buildElementKeyMap","watchExtraTriggers","getValue","bpMap","get","values","undefined","getActivatedValues","hasValue","setValue","set","updateElement","trackValue","asObservable","pipe","filter","forEach","el","keyMap","Set","valueMap","k","delete","clearElement","builders","next","releaseElement","s","unsubscribe","_","triggerUpdate","add","triggers","length","watchers","newSubscription","merge","apply","subscribe","currentValue","query","i","activatedBp","has","lastHope","target","queries","items","observe","withPrintQuery","tap","interceptEvents","blockPropagation","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","nativeElement","getAttribute","setAttribute","src","DefaultImgSrcDirective","ClassDirective","iterableDiffers","keyValueDiffers","renderer","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","IterableDiffers","KeyValueDiffers","Renderer2","Self","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","DISPLAY_MAP","getDisplayStyle","defaultValue","ngOnChanges","changes","keys","inputKey","inputValue","shouldShow","takeUntil","destroySubject","addFlexToParent","lookupStyle","style","setProperty","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","DomSanitizer","DefaultStyleDirective","INLINE","LAYOUT_VALUES","LayoutStyleBuilder","buildLayoutCSS","LayoutDirective","layoutCache","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","sideEffect","_styles","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapDirective","zone","layout","observerSubject","change","onLayoutChange","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","matcher","find","x","childrenNodes","nodeType","willDisplay","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","FlexDirective","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","FlexOrderStyleBuilder","order","parseInt","FlexOrderDirective","flexOrderCache","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","_input","flexFillCache","LayoutAlignStyleBuilder","align","mainAxis","crossAxis","flex-direction","layoutKeys","includes","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","dest","clone","MediaChange","mqAlias","suffix","priority","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","sources","_i","arguments","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","overlapping","mergeByAlias","defaults","custom","dict","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","media","removeListener","isPrintBreakPoint","PRINT","coerceArray","isArray","toMediaQuery","locator","findByAlias","splitQueries","reduce","a1","a2","concat","applyCssPrefixes","j","_validateCalcValue","substr","calc","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","keyValuesToMap","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","__assign","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","property","stylesheet","StylesheetMap","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","mediaTriggerAutoRestore","ssrObserveBreakpoints","InjectionToken","factory","mru","activatedAlias","complete","builder","useCache","shouldCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","HANDSET_PORTRAIT","TABLET_PORTRAIT","TABLET_LANDSCAPE","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","findByMap","findWithPredicate","searchFn","response","_zone","_platformId","BehaviorSubject","registry","_observable$","results","mql","isActive","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","deactivate","MockMediaQueryList","activations","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","useClass","BREAKPOINT_PRINT","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","startPrinting","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","filterOverlaps","destroyed$","_media$","watchActivations","media$","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","asapScheduler","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","MediaTrigger","hasCachedRegistryMatches","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","resize$","fromEvent","window","take","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","cacheRegistryMatches","emitChangeEvent","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","Error","name_1","styleAttrValue","_parent"],"mappings":";;;;;;;0pBgCuBA,SAAgBie,GAAUC,EAAGhG,GAEzB,QAASiG,KAAOlb,KAAKmb,YAAcF,EADnCG,EAAcH,EAAGhG,GAEjBgG,EAAE/b,UAAkB,OAAN+V,EAAa5T,OAAOga,OAAOpG,IAAMiG,EAAGhc,UAAY+V,EAAE/V,UAAW,GAAIgc,ICXnF,QAAgBI,GAAaC,EAAqB7U,GAChD,MAAO,YACL,GAAI8U,EAAAA,kBAAkB9U,GAAa,CACjC,GAMM+U,GAAa,sBANF/L,OAAMC,KAAK4L,EAAUG,iBAAiB,WAAWC,GAAxE,MAOe5Q,QAAQ,SAAAC,GACfA,EAAG4Q,UAAUC,SAAYF,GAAjC,QAAqD3Q,EAAG8Q,WAC9C9Q,EAAG8Q,WAAWC,YAAY/Q,GAAMA,EAAGgR,UAAUlL,QAAQ2K,EAAY,QCb3E,QAAgBvS,GAAW+S,EAAmBxG,GAQ5C,MAPAwG,GAAOA,EAAOA,EAAKC,QAAU,GAAIC,IAC7B1G,IACFwG,EAAKG,QAAU3G,EAAO7M,MACtBqT,EAAKhT,WAAawM,EAAOxM,WACzBgT,EAAKI,OAAS5G,EAAuB,OACrCwG,EAAKK,SAAW7G,EAAyB,UAEpCwG,EVTT,QAAgB3J,GAAe5Q,GACxB,GAAPgC,GAAA6Y,EAAA7a,EACE,OAAO8a,GADT9Y,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAQA,QAAgB6Y,GAAc7a,GAC5BA,EAAQA,EAAQA,EAAM+a,cAAgB,EACjC,IAAP/Y,GAAAhC,EAAAoB,MAAA,KAAOa,EAAPD,EAAA,GAAkBuU,EAAlBvU,EAAA,GAAwBxC,EAAxBwC,EAAA,EAYE,OATK0O,IAAcuC,KAAK,SAAAC,GAAK,MAAAA,KAAMjR,MACjCA,EAAYyO,GAAc,IAGxB6F,IAAS9F,KACX8F,EAAQ/W,IAAWiR,GAAUjR,EAAS,GACtCA,EAASiR,KAGHxO,EAAW+Y,EAAkBzE,KAAS/W,GAehD,QAAgBwb,GAAkBhb,GAChC,GAAMA,EACJ,OAAQA,EAAM+a,eACZ,IAAK,UACL,IAAK,eACL,IAAK,eACH/a,EAAQ,cACR,MAEF,KAAK,KACL,IAAK,OACL,IAAK,SACHA,EAAQ,QACR,MAGF,SACEA,EAAQ,OAId,MAAOA,GAYT,QAAS8a,GAAS7Y,EAAmBsU,EAA4B/W,GAC/D,WADF,KAAA+W,IAAqCA,EAArC,UAAA,KAAA/W,IAAiEA,GAAjE,IAEIgC,QAAWhC,EAAS,cAAgB,OACpC6W,aAAc,aACd8C,iBAAkBlX,EAClBgZ,YAAe1E,GAAc,MW3EjC,QAAgBR,GAAawE,GAA7B,IAAwC,GAAxCW,MAAAC,EAAA,EAAwCA,EAAxCC,UAAA9Q,OAAwC6Q,IAAAD,EAAxCC,EAAA,GAAAC,UAAAD,EACE,IAAY,MAARZ,EACF,KAAMc,WAAU,6CAGlB,KAAmB,GAArBrZ,GAAA,EAAqBsZ,EAArBJ,EAAqBlZ,EAArBsZ,EAAAhR,OAAqBtI,IAAS,CAAvB,GAAI+R,GAAXuH,EAAAtZ,EACI,IAAc,MAAV+R,EACF,IAAK,GAAI/L,KAAO+L,GACVA,EAAOwH,eAAevT,KACxBuS,EAAKvS,GAAO+L,EAAO/L,IAM3B,MAAOuS,GClBT,QAASiB,GAAeC,GACtB,GAAIC,GAAQD,EAAKnR,OAAS,EAAImR,EAAKE,OAAO,GAAK,GAC3CC,EAAaH,EAAKnR,OAAS,EAAKmR,EAAKze,MAAM,GAAK,EACpD,OAAO0e,GAAMG,cAAgBD,EAO/B,QAASE,GAAUC,GACjB,MAAOA,GACF3M,QAAQ4M,GAAkB,KAC1B5a,MAAM,KACNC,IAAIma,GACJ9Z,KAAK,IAOZ,QAAgBua,GAAiBC,GAO/B,MANAA,GAAK7S,QAAQ,SAAChC,GACPA,EAAGsT,SACNtT,EAAGsT,OAASmB,EAAUzU,EAAGH,OACzBG,EAAG8U,cAAgB9U,EAAG8U,eAGnBD,EAQT,QAAgBE,GAAaC,EAAwBC,OAArD,KAAAA,IAAqDA,KACnD,IAAMC,KAaN,OAZAF,GAAShT,QAAQ,SAAAhC,GACfkV,EAAKlV,EAAGH,OAASG,IAGnBiV,EAAOjT,QAAQ,SAAChC,GACVkV,EAAKlV,EAAGH,OACV6O,EAAawG,EAAKlV,EAAGH,OAAQG,GAE7BkV,EAAKlV,EAAGH,OAASG,IAId4U,EAAiBtc,OAAO4O,KAAKgO,GAAMlb,IAAI,SAAAqI,GAAK,MAAA6S,GAAK7S,MCjD1D,QAAgB9B,GAA+C0L,EAAaC,GAC1E,GAAMiJ,GAAYlJ,EAAIA,EAAEsH,UAAY,EAAI,CAExC,QADkBrH,EAAIA,EAAEqH,UAAY,EAAI,GACrB4B,EAIrB,QAAgBC,GAA8CnJ,EAAMC,GAGlE,OAFWD,EAAEsH,UAAY,IACdrH,EAAEqH,UAAY,GCgI3B,QAAS8B,GAAcC,EAAwB9C,GAC7C,GAAMqC,GAAOS,EAAavT,OAAO,SAAAgL,GAAM,OAACwI,GAAWxI,IACnD,IAAI8H,EAAK5R,OAAS,EAAG,CACnB,GAAMO,GAAQqR,EAAKxa,KAAK,KAExB,KACE,GAAMmb,GAAUhD,EAAUiD,cAAc,QAGxC,IADAD,EAAQvQ,aAAa,OAAQ,aACxB,EAAiByQ,WAAY,CAChC,GAAMC,GAAU,2IAKfnS,EALT,wBAOQgS,GAAQI,YAAYpD,EAAUqD,eAAeF,IAG/CnD,EAAc,KAAEoD,YAAYJ,GAG5BX,EAAK7S,QAAQ,SAAA8T,GAAM,MAAAP,IAAWO,GAAMN,IAEpC,MAAOO,GACPlY,QAAQmY,MAAMD,KAKpB,QAASE,GAAazS,EAAe0S,GAGnC,MAFkBA,MAAe,OAAiBjX,WAAW,OAAOkX,YAEjD,OAAiBlX,WAAWuE,IAC7CpD,QAAmB,QAAVoD,GAA6B,KAAVA,EAC5B4S,MAAO5S,EACP2S,YAAa,aAEbE,eAAgB,cCuBpB,QAASC,GAAkBtW,GACzB,QAAOA,GAAKA,EAAGE,WAAWwP,WAAW6G,IC5MvC,QAAgBC,GAAe7d,GAC7B,MAAOgO,OAAM8P,QAAQ9d,GAASA,GAASA,GC+LzC,QAAS+d,GAAalT,EAAemT,GACnC,GAAM3W,GAAK2W,EAAQC,YAAYpT,IAAUmT,EAAQ1W,YAAYuD,EAC7D,OAAOxD,GAAKA,EAAGE,WAAasD,EAO9B,QAASqT,GAAa/S,GACpB,MAAOA,GAAQ9J,IAAI,SAACwJ,GAAkB,MAAAA,GAAMzJ,MAAM,OACnC+c,OAAO,SAACC,EAAcC,GAAiB,MAAAD,GAAGE,OAAOD,KACjDhd,IAAI,SAAAwJ,GAAS,MAAAA,GAAMtJ,SClMpC,QAAgBgd,GAAiBrT,GAC/B,IAAK,GAAIlD,KAAOkD,GAAQ,CACtB,GAAIlL,GAAQkL,EAAOlD,IAAQ,EAE3B,QAAQA,GACN,IAAK,UAEDkD,EAAgB,QADJ,SAAVlL,GAEA,eACA,QAEiB,gBAAVA,GAEP,sBACA,eAGkBA,CAEtB,MAEF,KAAK,cACL,IAAK,aACL,IAAK,gBACL,IAAK,OACL,IAAK,aACL,IAAK,YACL,IAAK,YACL,IAAK,cACL,IAAK,YACL,IAAK,kBACHkL,EAAO,WAAalD,GAAOhI,CAC3B,MAEF,KAAK,iBACHA,EAAQA,GAAS,MACjBkL,EAAO,0BAA4BlL,EACnCkL,EAAO,kBAAoBlL,CAC3B,MAEF,KAAK,QACHkL,EAAc,MAAIA,EAAO,WAAalD,GAAO0L,OAAO1T,GAAS,IAAMA,GAIzE,MAAOkL,GCnDT,QAAgBmM,GAActC,EAAeH,EAAYC,OAAzD,KAAAD,IAA6CA,EAA7C,SAAA,KAAAC,IAAyDA,EAAzD,IACE,IAAIuC,IAASxC,EAAMC,EAAQE,GAEvByJ,EAAIzJ,EAAM9R,QAAQ,OACtB,IAAIub,EAAI,EAAG,CACTpH,EAAM,GAAKqH,EAAmB1J,EAAM/R,UAAUwb,GAAGjd,OACjD,IAAIkG,GAAUsN,EAAM2J,OAAO,EAAGF,GAAGjd,OAAOH,MAAM,IACxB,IAAlBqG,EAAQ6C,SACV8M,EAAM,GAAK3P,EAAQ,GACnB2P,EAAM,GAAK3P,EAAQ,QAEhB,IAAS,GAAL+W,EACTpH,EAAM,GAAKqH,EAAmB1J,EAAMxT,YAC/B,CACL,GAAIkG,GAAUsN,EAAM3T,MAAM,IAC1BgW,GAA4B,IAAnB3P,EAAQ6C,OAAgB7C,GAC3BmN,EAAMC,EAAQE,GAItB,MAAOqC,GAcT,QAASqH,GAAmBE,GAC1B,MAAOA,GAAKvP,QAAQ,QAAS,IAAIA,QAAQ,cAAe,Q1B0S1D,QAAShH,GAAe/G,EACA0G,EACAC,EACAtK,GACtB,OAAciL,KAAVjL,EAAqB,CACvB,GAAIkhB,GAASvd,EAAIoH,IAAIV,EAChB6W,KACHA,EAAS,GAAInjB,KACb4F,EAAI0H,IAAIhB,EAAS6W,IAEnBA,EAAO7V,IAAIf,EAAKtK,IIxUpB,QAAgByS,GAAQjF,GACtB,GAAI2T,SAAc3T,EAClB,OAAa,WAAT2T,EACM3T,EAAOuO,cAAgBzL,MAAS,QACnC9C,EAAOuO,cAAgBjQ,IAAO,MAAQ,SAEtCqV,EAOT,QAAgBxO,GAAa0D,EAAa+K,GACxC,WADF,KAAAA,IAA0CA,EAA1C,KACS1J,OAAOrB,GACTxS,OACAH,MAAM0d,GACNzd,IAAI,SAACxB,GAAgB,MAAAA,GAAI0B,SACzB6H,OAAO,SAAAvJ,GAAO,MAAQ,KAARA,IAIrB,QAAgBuQ,GAAiBX,EAAwBO,GACvD,GAAM+O,GAAgB,SAAC3K,GAIrB,MAHIpE,KACFoE,EAAGpU,MAAQgQ,EAASoE,EAAGpU,QAElBoU,EAGT,OAAO3E,GACFpO,IAAI2d,GACJ5V,OAAO,SAAA6V,GAAS,QAAEA,IAClB5d,IAAI0d,GACJZ,OAAOe,MAId,QAAgB5O,GAAgByD,EAAqB/D,GACnD,GAAIkM,KAQJ,OAPwB,QAApB/L,EAAQ4D,GACV,EAAwB1K,QAAQ,SAAA4V,GAAS,MAAA/C,GAAKxU,KAAKuX,KAEnDtf,OAAO4O,KAAKwF,GAAQ1K,QAAQ,SAACrB,GAC3BkU,EAAKxU,KAAQM,EAAnB,IAA0B,EAAuBA,MAGxCoI,EAAiB8L,EAAMlM,GAKhC,QAAgBgP,GAAiB5K,GACxB,GAATpS,GAAAoS,EAAAhT,MAAA,KAAS4G,EAAThG,EAAA,GAAcmd,EAAdnd,EAAAhF,MAAA,EACE,OAAO,IAAIkS,IAAgBlH,EAAKmX,EAAKzd,KAAK,MAI5C,QAAgBwd,GAAe7d,EAAiB4d,GAI9C,MAHMA,GAAMjX,MACV3G,EAAI4d,EAAMjX,KAAOiX,EAAMjf,OAElBqB,ECmDT,QAAS+O,GAAiBX,EAAwBO,GAChD,GAAM+O,GAAgB,SAAC3K,GAIrB,MAHIpE,KACFoE,EAAGpU,MAAQgQ,EAASoE,EAAGpU,QAElBoU,EAGT,OAAO3E,GACJpO,IAAI2d,GACJ5V,OAAO,SAAA6V,GAAS,QAAEA,IAClB5d,IAAI0d,GACJZ,OAAOe,ME5IZ,QAAgBtO,GAAe5Q,GACxB,GAAPgC,GAAA6Y,EAAA7a,EACE,OAAO8a,GADT9Y,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAQA,QAAgB6Y,GAAc7a,GAC5BA,EAAQA,EAAQA,EAAM+a,cAAgB,EACjC,IAAP/Y,GAAAhC,EAAAoB,MAAA,KAAOa,EAAPD,EAAA,GAAkBuU,EAAlBvU,EAAA,GAAwBxC,EAAxBwC,EAAA,EAYE,OATK0O,IAAcuC,KAAK,SAAAC,GAAK,MAAAA,KAAMjR,MACjCA,EAAYyO,GAAc,IAGxB6F,IAAS9F,KACX8F,EAAQ/W,IAAWiR,GAAUjR,EAAS,GACtCA,EAASiR,KAGHxO,EAAW+Y,EAAkBzE,KAAS/W,GAOhD,QAAgByV,GAAiBjV,GAE/B,MADF6a,GAAA7a,GAAA,GACciD,QAAQ,QAAU,EAMhC,QAAgB+X,GAAkBhb,GAChC,GAAMA,EACJ,OAAQA,EAAM+a,eACZ,IAAK,UACL,IAAK,eACL,IAAK,eACH/a,EAAQ,cACR,MAEF,KAAK,KACL,IAAK,OACL,IAAK,SACHA,EAAQ,QACR,MAGF,SACEA,EAAQ,OAId,MAAOA,GAYT,QAAS8a,GAAS7Y,EAAmBsU,EAA4B/W,GAC/D,WADF,KAAA+W,IAAqCA,EAArC,UAAA,KAAA/W,IAAiEA,GAAjE,IAEIgC,QAAWhC,EAAS,cAAgB,OACpC6W,aAAc,aACd8C,iBAAkBlX,EAClBgZ,YAAe1E,GAAc,MEuJjC,QAAS1E,GAAiB7R,EAAeyR,GACvC,GAAwB2N,GAAe,MAAOC,EAAgBrf,EAAOsf,EAAc,KAQnF,OANuB,QAAnB7N,EACF6N,EAActf,EAEdof,EAAepf,GAGTuf,QAAcC,OAAcJ,EAAtC,IAAsDC,EAAtD,IAAuEC,GAGvE,QAAS9N,GAAgBxR,EAAeyR,GACtC,GAAuBgO,GAAc,MAAOC,EAAe,IAAM1f,EAAO2f,EAAa,KAQrF,OANuB,QAAnBlO,EACFkO,EAAa,IAAM3f,EAEnByf,EAAc,IAAMzf,GAGdyY,OAAamH,OAAaH,EAApC,IAAmDC,EAAnD,IAAmEC,GAGnE,QAASzN,GAAYZ,EACA/R,GACnB,GAAIyI,GAAK6X,EAAXha,KAAyDkL,GAEvD,QAAQxR,EAAO8S,QACb,IAAK,SACHrK,EAAM,eACN,MACF,KAAK,iBACHA,EAAM,YACN,MACF,KAAK,MACHA,EAAgC,QAA1BzI,EAAOkS,eAA2B,cAAgB,cACxD,MACF,KAAK,cACHzJ,EAAgC,QAA1BzI,EAAOkS,eAA2B,eAAiB,aACzD,MACF,SACEzJ,EAAgC,QAA1BzI,EAAOkS,eAA2B,cAAgB,eAK5D,MAFAoO,GAAQ7X,GAAOsJ,EAERuO,ESjRT,QAAgB9J,GAAawE,GAA7B,IAAwC,GAAxCW,MAAAC,EAAA,EAAwCA,EAAxCC,UAAA9Q,OAAwC6Q,IAAAD,EAAxCC,EAAA,GAAAC,UAAAD,EACE,IAAY,MAARZ,EACF,KAAMc,WAAU,6CAGlB,KAAmB,GAArBrZ,GAAA,EAAqBsZ,EAArBJ,EAAqBlZ,EAArBsZ,EAAAhR,OAAqBtI,IAAS,CAAvB,GAAI+R,GAAXuH,EAAAtZ,EACI,IAAc,MAAV+R,EACF,IAAK,GAAI/L,KAAO+L,GACVA,EAAOwH,eAAevT,KACxBuS,EAAKvS,GAAO+L,EAAO/L,IAM3B,MAAOuS,GjC2CT,QAAS5c,GAASqb,OAAlB,KAAAA,IAAkBA,EAAlB,GACE,IAAM9V,MAARlB,EAAAgX,EAAA5X,MAAA,KAA4C0e,EAA5C9d,EAAA,GAAqD+d,EAArD/d,EAAA,EAGE,QAAQ8d,GACN,IAAK,MACH5c,EAAI,gBAAkB,KACtB,MACF,KAAK,SACHA,EAAI,gBAAkB,QACtB,MACF,KAAK,UACHA,EAAI,gBAAkB,SACtB,MACF,KAAK,QACHA,EAAI,gBAAkB,OACtB,MACF,SACEA,EAAI,gBAAkB/F,GAK1B,OAAQ4iB,GACN,IAAK,MACH7c,EAAI,cAAgB,KACpB,MACF,KAAK,SACHA,EAAI,cAAgB,QACpB,MACF,KAAK,UACHA,EAAI,cAAgB,SACpB,MACF,KAAK,QACHA,EAAI,cAAgB,OACpB,MACF,SACEA,EAAI,cAAgB9F,GAIxB,MAAO8F,GCtBT,QAASvF,GAASqb,EAAexZ,GAC/B,GAAM0D,MAARlB,EAAAgX,EAAA5X,MAAA,KAA4C6X,EAA5CjX,EAAA,GAAsDkX,EAAtDlX,EAAA,EAGE,QAAQiX,GACN,IAAK,SACH/V,EAAI,iBAAmB,QACvB,MACF,KAAK,eACHA,EAAI,iBAAmB,cACvB,MACF,KAAK,gBACHA,EAAI,iBAAmB,eACvB,MACF,KAAK,eACHA,EAAI,iBAAmB,cACvB,MACF,KAAK,MACHA,EAAI,iBAAmB,KACvB,MACF,KAAK,QACHA,EAAI,iBAAmB,OACvB,MACF,KAAK,UACHA,EAAI,iBAAmB,SACvB,MACF,SACEA,EAAI,iBAAmB9D,GAK3B,OAAQ8Z,GACN,IAAK,QACHhW,EAAI,eAAiB,OACrB,MACF,KAAK,SACHA,EAAI,eAAiB,QACrB,MACF,KAAK,MACHA,EAAI,eAAiB,KACrB,MACF,KAAK,UACHA,EAAI,eAAiB,SACrB,MACF,SACEA,EAAI,eAAiB7D,GAMzB,MAFA6D,GAAa,QAAI1D,EAAS,cAAgB,OAEnC0D,ECpDT,QAASvF,GAASqb,EAAexZ,GAC/B,GAAM0D,MAARlB,EAAAgX,EAAA5X,MAAA,KAA4C6X,EAA5CjX,EAAA,GAAsDkX,EAAtDlX,EAAA,EAGE,QAAQiX,GACN,IAAK,SACL,IAAK,eACL,IAAK,gBACL,IAAK,eACL,IAAK,MACL,IAAK,QACL,IAAK,UACH/V,EAAI,mBAAqB+V,CACzB,MACF,SACE/V,EAAI,mBAAqB9D,GAK7B,OAAQ8Z,GACN,IAAK,QACL,IAAK,SACL,IAAK,MACL,IAAK,UACHhW,EAAI,iBAAmBgW,CACvB,MACF,SACEhW,EAAI,iBAAmB7D,GAM3B,MAFA6D,GAAa,QAAI1D,EAAS,cAAgB,OAEnC0D,E4B7GT,GAAIwW,GAAgB,SAASH,EAAGhG,GAI5B,OAHAmG,EAAgB/Z,OAAOqgB,iBAChBC,uBAA2BjS,QAAS,SAAUuL,EAAGhG,GAAKgG,EAAE0G,UAAY1M,IACvE,SAAUgG,EAAGhG,GAAK,IAAK,GAAI2M,KAAK3M,GAAOA,EAAEgI,eAAe2E,KAAI3G,EAAE2G,GAAK3M,EAAE2M,MACpD3G,EAAGhG,IASjB4M,EAAW,WAQlB,MAPAA,GAAWxgB,OAAOygB,QAAU,SAAkBC,GAC1C,IAAK,GAAIrW,GAAGc,EAAI,EAAGwV,EAAIlF,UAAU9Q,OAAQQ,EAAIwV,EAAGxV,IAAK,CACjDd,EAAIoR,UAAUtQ,EACd,KAAK,GAAIoV,KAAKlW,GAAOrK,OAAOnC,UAAU+d,eAAeld,KAAK2L,EAAGkW,KAAIG,EAAEH,GAAKlW,EAAEkW,IAE9E,MAAOG,IAEJF,EAASzV,MAAMpM,KAAM8c,YCDnBmF,GACX7a,QAAyC8a,EAAsB,uBAC/DC,WAAY7G,EACZ8G,MAAOC,EAAAA,SAAUta,EAAAA,aACjBL,OAAO,GAGIiU,GAAa,2CW3C1B,sBAiBAxd,KAACC,EAAAA,SAADC,OACE6I,WAAY+a,OAlBd1jB,KCYA4d,GAAA,WAWE,QAAFA,GAAqBhT,EACAF,EACAmT,EACAC,EACAC,OAJrB,KAAAnT,IAAAA,GAAA,iFAAqBnJ,KAArBmJ,QAAqBA,EACAnJ,KAArBiJ,WAAqBA,EACAjJ,KAArBoc,QAAqBA,EACApc,KAArBqc,OAAqBA,EACArc,KAArBsc,SAAqBA,EAdnBtc,KAAFsiB,SAAqB,GAbrB,MA+BEnG,GAAFjd,UAAAgd,MAAE,WACE,MAAO,IAAIC,GAAYnc,KAAKmJ,QAASnJ,KAAKiJ,WAAYjJ,KAAKoc,QAASpc,KAAKqc,SAhC7EF,gCCkBEnc,KAAFuiB,WAAwB,GAAIplB,KAlB5B,MAuBEqlB,GAAFtjB,UAAAujB,kBAAE,SAAkBhZ,EAAsBgH,EAAe/O,GACrD,GAAM6gB,GAAaviB,KAAKuiB,WAAWpY,IAAIV,EACnC8Y,GACFA,EAAW9X,IAAIgG,EAAO/O,GAEtB1B,KAAKuiB,WAAW9X,IAAIhB,EAAS,GAAItM,OAAMsT,EAAO/O,OAOlD8gB,EAAFtjB,UAAAuS,YAAE,WACEzR,KAAKuiB,WAAWG,SAMlBF,EAAFtjB,UAAAyjB,mBAAE,SAAmB3X,EAAiB4X,GAClC,GAAMzR,GAASnR,KAAKuiB,WAAWpY,IAAIa,GAC/BtJ,EAAQ,EACZ,IAAIyP,EAAQ,CACV,GAAMV,GAAQU,EAAOhH,IAAIyY,EACJ,iBAAVnS,IAAuC,gBAAVA,KACtC/O,EAAQ+O,EAAQ,IAGpB,MAAO/O,mBApCXvD,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAfzBijB,KCsBahb,IACX+I,iBAAiB,EACjBsS,mBAAmB,EACnBC,mBAAmB,EACnBC,uBAAuB,EACvB5b,cAAc,EACdqQ,oBAAoB,EACpBwL,wBACAC,yBAAyB,EACzBC,0BAGW7b,GAAgB,GAAI8b,GAAAA,eAC7B,qDACE5jB,WAAY,OACZ6jB,QAAS,WAAM,MAAA5b,OCtBRG,GAAe,GAAIwb,GAAAA,eAC9B,0BACE5jB,WAAY,OACZ6jB,QAAS,WAAM,OAAA,KCRN3b,GAAa,GAAI0b,GAAAA,eAC5B,gEACE5jB,WAAY,OACZ6jB,QAAS,WAAM,MAAA,SzBNNjR,GAAS,SACTC,IAAiB,MAAO,SAAU,cAAe,kB0BO9D1R,GAAA,WA8BE,QAAFA,GAAkChB,EACAC,EACAC,EACAC,GAHAG,KAAlCN,WAAkCA,EACAM,KAAlCL,aAAkCA,EACAK,KAAlCJ,OAAkCA,EACAI,KAAlCH,QAAkCA,EA/BhCG,KAAFC,cAA4B,GAC1BD,KAAFjD,UAEEiD,KAAFqjB,OACErjB,KAAFsQ,eAA4C,GAAI5H,GAAAA,QAsB9C1I,KAAFE,WAAuD,GAAI/C,KA3C3D,MAwBEkE,QAAFC,eAAgBZ,EAAhBxB,UAAA,qBAAE,WACE,MAAOc,MAAKN,WAAWoO,cAAcsK,+CAIvC/W,OAAFC,eAAgBZ,EAAhBxB,UAAA,qBAAE,WACE,MAAOc,MAAKN,WAAWoO,+CAIzBzM,OAAFC,eAAMZ,EAANxB,UAAA,sBAAE,WACE,MAAOc,MAAKH,QAAQoK,SAASjK,KAAK8N,cAAe9N,KAAKC,oBAExD,SAAmByB,GACjB1B,KAAKH,QAAQ2K,SAASxK,KAAK8N,cAAe9N,KAAKC,cAAeyB,EAC5D1B,KAAKH,QAAQyjB,iDAajB5iB,EAAFxB,UAAA6Q,YAAE,SAAYC,GAAZ,GAAFlQ,GAAAE,IACIqB,QAAO4O,KAAKD,GAASjF,QAAQ,SAAArB,GAC3B,IAAkC,IAA9B5J,EAAK/C,OAAO4H,QAAQ+E,GAAa,CACnC,GAAMX,GAAKW,EAAI5G,MAAM,KAAKpE,MAAM,GAAG0E,KAAK,KAClC7B,EAAMyO,EAAQtG,GAAK4C,YACzBxM,GAAK0K,SAASjJ,EAAKwH,OAKzBrI,EAAFxB,UAAAqV,YAAE,WACEvU,KAAKsQ,eAAe9E,OACpBxL,KAAKsQ,eAAeiT,WACpBvjB,KAAKH,QAAQ4L,eAAezL,KAAK8N,gBAIzBpN,EAAZxB,UAAAkB,KAAE,SAAeyJ,OAAjB,KAAAA,IAAiBA,MACb7J,KAAKH,QAAQO,KACXJ,KAAKN,WAAWoO,cAChB9N,KAAKC,cACLD,KAAKyB,gBAAgB2L,KAAKpN,MAC1BA,KAAKyR,YAAYrE,KAAKpN,MACtB6J,IAKMnJ,EAAZxB,UAAA2C,UAAE,SAAoBzC,EAAe6B,GACjC,GAAMuiB,GAAUxjB,KAAKL,aACf8jB,EAAWD,EAAQE,YAErBC,EAAyC3jB,KAAKE,WAAWiK,IAAI/K,EAE5DukB,IAAcF,IACjBE,EAAYH,EAAQrkB,YAAYC,EAAO6B,GACnCwiB,GACFzjB,KAAKE,WAAWuK,IAAIrL,EAAOukB,IAI/B3jB,KAAKqjB,IAAT9b,KAAmBoc,GACf3jB,KAAKwR,oBAAoBmS,GACzBH,EAAQpQ,WAAWhU,EAAOukB,EAAW1iB,IAI7BP,EAAZxB,UAAAuS,YAAE,WAAA,GAAF3R,GAAAE,IACIqB,QAAO4O,KAAKjQ,KAAKqjB,KAAKtY,QAAQ,SAAAK,GAC5BtL,EAAKujB,IAAIjY,GAAK,KAEhBpL,KAAKwR,oBAAoBxR,KAAKqjB,KAC9BrjB,KAAKqjB,QAIG3iB,EAAZxB,UAAA2M,cAAE,WACE7L,KAAKH,QAAQgM,cAAc7L,KAAK8N,cAAe9N,KAAKC,gBAS5CS,EAAZxB,UAAAqZ,qBAAE,SAA+B3L,EAAqBgX,GAClD,OADJ,KAAAA,IAAsDA,GAAtD,GACQhX,EAAQ,CACH,GAAblJ,GAAA1D,KAAAJ,OAAAikB,iBAAAjX,GAAalL,EAAbgC,EAAA,EAEM,KAFNA,EAAA,IAE6BkgB,EAAc,CACnC,GAAMnT,GAAQ6B,EAAe5Q,GACvBoiB,GAAYlX,EAClB5M,MAAKJ,OAAO4T,qBAAqB/C,EAAOqT,GAG1C,MAAOpiB,GAAMuB,OAGf,MAAO,OAICvC,EAAZxB,UAAAsS,oBAAE,SAA8Bf,EACA/O,EACA+H,OAAhC,KAAAA,IAAgCA,EAAuBzJ,KAAK8N,eACxD9N,KAAKJ,OAAO4R,oBAAoB/H,EAASgH,EAAO/O,IAGxChB,EAAZxB,UAAAsL,SAAE,SAAmBjJ,EAAUwH,GAC3B/I,KAAKH,QAAQ2K,SAASxK,KAAK8N,cAAe9N,KAAKC,cAAesB,EAAKwH,IAG3DrI,EAAZxB,UAAAuC,gBAAE,SAA0BrC,GACxBY,KAAK6B,UAAUzC,IAlJnBsB,KCYaqjB,KAETnb,MAAO,KACPK,WAAY,wDACZqT,SAAU,MAGV1T,MAAO,KACPK,WAAY,0DACZqT,SAAU,MAGV1T,MAAO,KACPK,WAAY,2DACZqT,SAAU,MAGV1T,MAAO,KACPK,WAAY,4DACZqT,SAAU,MAGV1T,MAAO,KACPK,WAAY,4DACZqT,SAAU,MAGV1T,MAAO,QACPiV,aAAa,EACb5U,WAAY,mCACZqT,SAAU,MAGV1T,MAAO,QACPiV,aAAa,EACb5U,WAAY,mCACZqT,SAAU,MAGV1T,MAAO,QACPiV,aAAa,EACb5U,WAAY,oCACZqT,SAAU,MAGV1T,MAAO,QACPiV,aAAa,EACbvB,SAAU,IACVrT,WAAY,sCAGZL,MAAO,QACPiV,aAAa,EACb5U,WAAY,gCACZqT,UAAW,MAGX1T,MAAO,QACPiV,aAAa,EACb5U,WAAY,gCACZqT,UAAW,MAEX1T,MAAO,QACPiV,aAAa,EACb5U,WAAY,iCACZqT,UAAW,MAGX1T,MAAO,QACPiV,aAAa,EACb5U,WAAY,iCACZqT,UAAW,MCxET0H,GAAoB,oDAGpBC,GAAoB,2EACpBC,GAAoB,6EAEpBC,GAAoB,iDACpBC,GAAoB,mDAEbC,IACXC,QAAyBN,GAA3B,uDACEO,OAAyBN,GAA3B,MAAgDC,GAC9CM,IAAyBL,GAA3B,KAA4CC,GAA5C,IAEEJ,iBAAsB,GAAGA,GACzBC,gBAAyBA,GAA3B,IACEE,aAAsB,GAAGA,GAEzBM,kBAAyBA,sDACzBP,iBAAsB,GAAGA,GACzBE,cAAsB,GAAGA,IAMdM,KACV9b,MAAS,UAAsB0T,SAAU,IAAMrT,WAAcob,GAAYC,UACzE1b,MAAS,oBAAsB0T,SAAU,IAAMrT,WAAcob,GAAYI,oBACzE7b,MAAS,mBAAsB0T,SAAU,IAAMrT,WAAcob,GAAYL,mBAEzEpb,MAAS,SAAsB0T,SAAU,KAAMrT,WAAcob,GAAYE,SACzE3b,MAAS,mBAAsB0T,SAAU,KAAMrT,WAAcob,GAAYE,SACzE3b,MAAS,kBAAsB0T,SAAU,KAAMrT,WAAcob,GAAYJ,kBAEzErb,MAAS,MAAsB0T,SAAU,KAAMrT,WAAcob,GAAYG,IAAK3G,aAAc,IAC5FjV,MAAS,gBAAsB0T,SAAU,KAAMrT,WAAcob,GAAYD,cAAevG,aAAc,IACtGjV,MAAS,eAAsB0T,SAAU,KAAMrT,WAAcob,GAAYF,aAActG,aAAc,IhBtClGH,GAAmB,YiBUZiH,GACX,GAAIxB,GAAAA,eAA6B,4CAC/B5jB,WAAY,OACZ6jB,QAAS,WACP,GAAMpc,GAAmB4d,EAAAA,OAAOnd,IAC1B2H,EAAewV,EAAAA,OAAOvd,IACtBwd,KAAkC7E,OAAO5T,UAAWpF,OACvDjE,IAAI,SAACC,GAAiC,MAAA0M,OAAM8P,QAAQxc,GAAKA,GAAKA,KAIjE,OAAO8a,IAHW1O,EAAa0T,qBAAyBiB,IACrD/D,OAAO5Q,EAAayT,kBAAoB6B,OAEbG,oBCPlC,QAAFvX,GAAmCsQ,GAwDnC5d,KAAA8kB,UAA+B,GAAI3nB,KAvD/B6C,KAAK8M,MAAY8Q,EAArBlf,QAA2B2K,KAAK8U,GAzBhC,MA+BE7Q,GAAFpO,UAAAygB,YAAE,SAAY/W,GACV,MAAQA,GAAe5I,KAAK+kB,kBAAkBnc,EAAO,SAACG,GAAO,MAAAA,GAAGH,OAASA,IAAzD,MAGlB0E,EAAFpO,UAAA8J,YAAE,SAAYuD,GACV,MAAOvM,MAAK+kB,kBAAkBxY,EAAO,SAACxD,GAAO,MAAAA,GAAGE,YAAcsD,KAOhElL,OAAFC,eAAMgM,EAANpO,UAAA,oBAAE,WACE,MAAOc,MAAK8M,MAAMhC,OAAO,SAAAgL,GAAM,MAAkB,IAAlBA,EAAG+H,+CAMpCxc,OAAFC,eAAMgM,EAANpO,UAAA,eAAE,WACE,MAAOc,MAAK8M,MAAM/J,IAAI,SAAA+S,GAAM,MAAAA,GAAGlN,yCAQjCvH,OAAFC,eAAMgM,EAANpO,UAAA,gBAAE,WACE,MAAOc,MAAK8M,MAAM/J,IAAI,SAAA+S,GAAM,MAAEA,GAAGuG,OAASvG,EAAGuG,OAAS,sCAMhD/O,EAAVpO,UAAA6lB,kBAAA,SAA4Brb,EACtBsb,GACF,GAAIC,GAAWjlB,KAAK8kB,UAAU3a,IAAIT,EAKlC,OAJKub,KACHA,EAAWjlB,KAAK8M,MAAM6H,KAAKqQ,IAAa,KACxChlB,KAAK8kB,UAAUra,IAAIf,EAAKub,IAEnBA,GAAY,qBArDvB9mB,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,+CAIzBpB,KAAAuR,MAAApP,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsBsmB,0HAxBtBrX,mBhB2BE,QAAFD,GAAwB6X,EACqBC,EACH5J,GAFlBvb,KAAxBklB,MAAwBA,EACqBllB,KAA7CmlB,YAA6CA,EACHnlB,KAA1Cub,UAA0CA,EALxCvb,KAAFyV,OAAoB,GAAI2P,GAAAA,gBAA6B,GAAIjJ,KAAY,IACnEnc,KAAFqlB,SAAa,GAAIloB,KA6Gf6C,KAAFslB,aAA2BtlB,KAAKyV,OAAO7K,eAtIvC,MAmCEvJ,QAAFC,eAAM+L,EAANnO,UAAA,mBAAE,WACE,GAAMqmB,KAMN,OALAvlB,MAAKqlB,SAASta,QAAQ,SAACya,EAAqB9b,GACtC8b,EAAIrc,SACNoc,EAAQnc,KAAKM,KAGV6b,mCAMTlY,EAAFnO,UAAAumB,SAAE,SAASxc,GACP,GAAMuc,GAAMxlB,KAAKqlB,SAASlb,IAAIlB,EAC9B,SAASuc,GAAMA,EAAIrc,SAsBrBkE,EAAFnO,UAAA6N,QAAE,SAAQ2Y,EAAmBC,GAA3B,GAAF7lB,GAAAE,IACI,QADJ,KAAA2lB,IAA6BA,GAA7B,GACQD,GAAUA,EAAO1Z,OAAQ,CAC3B,GAAM4Z,GAAuC5lB,KAAKslB,aAAaza,KAC3DC,EAAAA,OAAO,SAACmJ,GACN,OAAQ0R,GAAuBD,EAAO/gB,QAAQsP,EAAOhL,aAAe,KAGpE4c,EAAyC,GAAIC,GAAAA,WAAW,SAACtR,GAC7D,GAAMrL,GAA8BrJ,EAAKimB,cAAcL,EACvD,IAAIvc,EAAQ6C,OAAQ,CAClB,GAAMga,GAAa7c,EAAQuK,KAC3BvK,GAAQ4B,QAAQ,SAAC+T,GACftK,EAAShJ,KAAKsT,KAEhBhf,EAAK2V,OAAOjK,KAAKwa,GAEnBxR,EAAS+O,YAEX,OAAOpX,GAAAA,MAAM0Z,EAAeD,GAG9B,MAAO5lB,MAAKslB,cAOdjY,EAAFnO,UAAA6mB,cAAE,SAAc9c,GAAd,GAAFnJ,GAAAE,KACU4d,EAAOlO,MAAM8P,QAAQvW,GAAcA,GAAcA,GACjDE,IAqBN,OAnBAiV,GAAcR,EAAM5d,KAAKub,WAEzBqC,EAAK7S,QAAQ,SAACwB,GACZ,GAAM0Z,GAAa,SAACnH,GAClBhf,EAAKolB,MAAMgB,IAAI,WAAM,MAAApmB,GAAK2V,OAAOjK,KAAK,GAAI2Q,IAAY2C,EAAE3V,QAASoD,OAG/DiZ,EAAM1lB,EAAKulB,SAASlb,IAAIoC,EACvBiZ,KACHA,EAAM1lB,EAAKqmB,SAAS5Z,GACpBiZ,EAAItG,YAAY+G,GAChBnmB,EAAKulB,SAAS5a,IAAI8B,EAAOiZ,IAGvBA,EAAIrc,SACNA,EAAQC,KAAK,GAAI+S,KAAY,EAAM5P,MAIhCpD,GAOCkE,EAAZnO,UAAAinB,SAAE,SAAmB5Z,GACjB,MAAOyS,GAAazS,EAAOiP,EAAAA,kBAAkBxb,KAAKmlB,8BA9GtDhnB,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,+CAdzBpB,KAA4BgY,EAAAA,SAqB5BhY,KAA0DkD,OAA1Df,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsB0J,EAAAA,iBACtB5J,SAAAkM,GAAA/J,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsBgkB,EAAAA,mLA7BtBhV,KA6IMiR,qBiBpHJ,QAAF8H,GAAclB,EACqBC,EACH5J,EACV8K,GAHpB,GAAFvmB,GAIIb,EAJJc,KAAAC,KAIUklB,EAAOC,EAAa5J,IAJ9Bvb,WAGsBF,GAAtBumB,aAAsBA,EANpBvmB,EAAFwmB,qBAAwB,EACtBxmB,EAAFymB,aAAgB,IAvBhB,MAmBoCxnB,GAApCqnB,EAAAnnB,GAcEmnB,EAAFlnB,UAAAsnB,SAAE,WACExmB,KAAKqlB,SAASta,QAAQ,SAACya,GACrB,EAA4BiB,YAE9BzmB,KAAKqlB,SAAS3C,QACd1iB,KAAKumB,aAAc,GAIrBH,EAAFlnB,UAAAwnB,SAAE,SAASzd,EAAoBsd,GAW3B,WAXJ,KAAAA,IAA+BA,GAA/B,GACIA,EAAcA,GAAevmB,KAAKumB,YAClCtd,EAAajJ,KAAK2mB,eAAe1d,IAE7Bsd,GAAgBvmB,KAAKylB,SAASxc,KAChCjJ,KAAK4mB,iBAEL5mB,KAAK6mB,oBAAoB5d,GACzBjJ,KAAK8mB,sBAAsB7d,EAAYsd,IAGlCvmB,KAAK+mB,cAIdX,EAAFlnB,UAAAynB,eAAE,SAAeK,GACb,GAAMje,GAAK/I,KAAKqmB,aAAa1G,YAAYqH,EACzC,OAAQje,IAAMA,EAAGE,YAAe+d,GAO1BZ,EAAVlnB,UAAA4nB,sBAAA,SAAgC7d,EAAoBsd,GAChD,GAAIA,EAAa,CACf,GAAMxd,GAAK/I,KAAKqmB,aAAard,YAAYC,GACnCL,EAAQG,EAAKA,EAAGH,MAAQ,SAG9B,QAAQA,GACN,IAAK,KACH5I,KAAKinB,iBAAiB,QACtB,MACF,KAAK,KACHjnB,KAAKinB,iBAAiB,eACtB,MACF,KAAK,KACHjnB,KAAKinB,iBAAiB,sBACtB,MACF,KAAK,KACHjnB,KAAKinB,iBAAiB,8BAK1B,OAAQre,GACN,IAAK,KACH5I,KAAKinB,iBAAiB,6BACtB,MACF,KAAK,KACHjnB,KAAKinB,iBAAiB,sBACtB,MACF,KAAK,KACHjnB,KAAKinB,iBAAiB,eACtB,MACF,KAAK,KACHjnB,KAAKinB,iBAAiB,UAK5B,MAAOjnB,MAAKknB,iBAAiBje,IAMvBmd,EAAVlnB,UAAA+nB,iBAAA,SAA2BE,cACjBT,EAAW,SAAC9d,GAChB,GAAMG,GAAKjJ,EAAKumB,aAAa1G,YAAY/W,EACzC9I,GAAKonB,iBAAiBne,EAAKA,EAAGE,WAAaL,GAE7Cue,GAAQrkB,MAAM,KAAKiI,QAAQ,SAAAnC,GAAS,MAAA8d,GAAS9d,EAAM3F,WAM7CmjB,EAAVlnB,UAAAgoB,iBAAA,SAA2Bje,GACvB,GAAMuc,GAA0BxlB,KAAKqlB,SAASlb,IAAIlB,EAKlD,OAHIuc,KAAQxlB,KAAKylB,SAASxc,IACxBjJ,KAAKqlB,SAAS5a,IAAIxB,EAAYuc,EAAIkB,YAE7B1mB,KAAK+mB,cAINX,EAAVlnB,UAAA0nB,0BAII,MAHA5mB,MAAKqlB,SAASta,QAAQ,SAAC+K,GACrB,EAA2BsR,eAEtBpnB,MAIDomB,EAAVlnB,UAAA2nB,oBAAA,SAA8B5d,IACrBjJ,KAAKqlB,SAAS3Y,IAAIzD,IAAejJ,KAAKsmB,qBACzCtmB,KAAK+lB,cAAc9c,IAQbmd,EAAZlnB,UAAAinB,SAAE,SAAmB5Z,GACjB,MAAO,IAAI8a,IAAmB9a,IAGhClL,OAAFC,eAAgB8kB,EAAhBlnB,UAAA,oBAAE,WACE,MAAOc,MAAKsnB,YAAYtb,OAAS,kDAxIrC7N,KAACmB,EAAAA,iDAXDnB,KAA4BgY,EAAAA,SAmB5BhY,KAAgDkD,OAAhDf,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsB0J,EAAAA,iBACtB5J,SAAAkM,GAAA/J,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsBgkB,EAAAA,cAhBtBlkB,KAAQmP,MAXR8Y,GAmBoC/Y,IAiJpCga,GAAA,WAYE,QAAFA,GAAsBE,GAAAvnB,KAAtBunB,YAAsBA,EAXtBvnB,KAAAwnB,WAAsB,EACtBxnB,KAAAynB,cAyFEznB,KAAF0nB,SAAqC,KA/PrC,MAwKErmB,QAAFC,eAAM+lB,EAANnoB,UAAA,eAAE,WACE,MAAOc,MAAKwnB,2CAGdnmB,OAAFC,eAAM+lB,EAANnoB,UAAA,aAAE,WACE,MAAOc,MAAKunB,6CAUdF,EAAFnoB,UAAAunB,QAAE,WACEzmB,KAAKonB,aACLpnB,KAAKynB,eAIPJ,EAAFnoB,UAAAwnB,SAAE,WAAA,GAAF5mB,GAAAE,IAQI,OAPKA,MAAKwnB,YACRxnB,KAAKwnB,WAAY,EACjBxnB,KAAKynB,WAAW1c,QAAQ,SAAC4c,GACf,EACL5nB,KAAK,KAAMD,MAGXE,MAITqnB,EAAFnoB,UAAAkoB,WAAE,WAAA,GAAFtnB,GAAAE,IAQI,OAPIA,MAAKwnB,YACPxnB,KAAKwnB,WAAY,EACjBxnB,KAAKynB,WAAW1c,QAAQ,SAAC4c,GACf,EACL5nB,KAAK,KAAMD,MAGXE,MAITqnB,EAAFnoB,UAAAggB,YAAE,SAAY0I,GAIV,IAH2C,IAAvC5nB,KAAKynB,WAAW9iB,QAAQijB,IAC1B5nB,KAAKynB,WAAWre,KAAKwe,GAEnB5nB,KAAKwnB,UAAW,CACV,EACLznB,KAAK,KAAMC,QAKlBqnB,EAAFnoB,UAAAkgB,eAAE,SAAexT,KASfyb,EAAFnoB,UAAA2oB,iBAAE,SACIjc,EACAsP,EACA4M,KASJT,EAAFnoB,UAAA6oB,oBAAE,SACInc,EACAsP,EACA4M,KAGJT,EAAFnoB,UAAA8oB,cAAE,SAAcpc,GACZ,OAAO,GA5PXyb,KAqQaY,IACX7gB,QAASiG,GACT6a,SAAU9B,IhB/ON9G,GAAQ,QACD6I,IACXvf,MAAO0W,GACPrW,WAAYqW,GACZhD,SAAU,mBAWV,QAAF/O,GACgBvG,EACuBoI,GADvBpP,KAAhBgH,YAAgBA,EACuBhH,KAAvCoP,aAAuCA,EAyHvCpP,KAAAooB,YAAuB,EACvBpoB,KAAAqoB,MAA8B,GAAIC,IAClCtoB,KAAAuoB,iBApKA,MA6CEhb,GAAFrO,UAAA8N,eAAE,SAAeH,GACb,MAAWA,GAAfmT,QAAwBV,MAItB/R,EAAFrO,UAAAspB,aAAE,SAAa1J,GACX,MAAOA,GAAE7V,WAAWwP,WAAW6G,KAIjCje,OAAFC,eAAMiM,EAANrO,UAAA,kBAAE,WACE,MAAOc,MAAKoP,aAAa4T,0DAI3B3hB,OAAFC,eAAMiM,EAANrO,UAAA,wBAAE,WAAA,GAAFY,GAAAE,IACI,OAAOA,MAAKyoB,WACP1lB,IAAI,SAAA6F,GAAS,MAAA9I,GAAKkH,YAAY2Y,YAAY/W,KAC1CkC,OAAO,SAAA/B,GAAM,MAAO,QAAPA,qCAIpBwE,EAAFrO,UAAAwpB,oBAAE,SAAoBhlB,GAAtB,GAAuBuF,GAAvBvF,EAAAuF,WACUF,EAAK/I,KAAKgH,YAAYgC,YAAYC,EAGxC,QAFaF,EAAS/I,KAAK2oB,iBAA/B3I,QAAiDjX,IAAM/I,KAAK2oB,kBAE5Ctf,KAAKC,IAInBiE,EAAFrO,UAAA0pB,YAAE,SAAYC,GACV,GAAI9f,GAAyB/I,KAAKgH,YAAYgC,YAAY6f,EAAM5f,WAMhE,OALIjJ,MAAKwoB,aAAaK,KAEpB9f,EAAK/I,KAAK0oB,oBAAoBG,GAAO,GACrCA,EAAM5f,WAAaF,EAAKA,EAAGE,WAAa,IAEnCC,EAAW2f,EAAO9f,IAO3BwE,EAAFrO,UAAAgO,gBAAE,SAAgBN,GAAhB,GAAF9M,GAAAE,IACI,OAAO,UAAC6oB,GACF/oB,EAAK0oB,aAAaK,GAChBA,EAAM1f,UAAYrJ,EAAKsoB,YACzBtoB,EAAKgpB,cAAclc,EAAQ9M,EAAK4oB,oBAAoBG,IACpDjc,EAAOrD,iBAEGsf,EAAM1f,SAAWrJ,EAAKsoB,aAChCtoB,EAAKipB,aAAanc,GAClBA,EAAOrD,gBAGTzJ,EAAKkpB,mBAAmBH,KAM9Btb,EAAFrO,UAAAiO,iBAAE,WAAA,GAAFrN,GAAAE,IACI,OAAO,UAAC6oB,GACN,QAAS/oB,EAAKsoB,YAActoB,EAAK0oB,aAAaK,MAQxCtb,EAAZrO,UAAA4pB,cAAE,SAAwBlc,EAAoBqc,GAC1CjpB,KAAKooB,YAAa,EAClBxb,EAAO1E,qBAAuBlI,KAAKqoB,MAAMa,oBAAoBD,IAIrD1b,EAAZrO,UAAA6pB,aAAE,SAAuBnc,GACrBA,EAAO1E,qBAAuBlI,KAAKuoB,cACnCvoB,KAAKuoB,iBACLvoB,KAAKqoB,MAAM3F,QACX1iB,KAAKooB,YAAa,GAoBpB7a,EAAFrO,UAAA8pB,mBAAE,SAAmBH,GACjB,IAAK7oB,KAAKooB,WACR,GAAKS,EAAM1f,QAOTnJ,KAAKuoB,qBAPa,CAClB,GAAMxf,GAAK/I,KAAKgH,YAAYgC,YAAY6f,EAAM5f,WAC1CF,KACF/I,KAAKuoB,cAAcnf,KAAKL,GACxB/I,KAAKuoB,cAAclf,KAAKC,qBApHlCnL,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,+CAxBzBpB,KAAQmP,KA4BRnP,SAAAkM,GAAA/J,aAAAnC,KAAO2J,EAAAA,OAAPzJ,MAAcgJ,uIAzCdkG,KAgLA+a,GAAA,wBAEEtoB,KAAFmpB,oBAlLA,MAoLEb,GAAFppB,UAAAgqB,oBAAE,SAAoBD,GAApB,GAAFnpB,GAAAE,IAKI,OAJAipB,GAAO7f,KAAK+e,IACZc,EAAO5f,KAAKC,GACZ2f,EAAOle,QAAQ,SAAAhC,GAAM,MAAAjJ,GAAKspB,cAAcrgB,KAEjC/I,KAAKmpB,kBAIdb,EAAFppB,UAAAkqB,cAAE,SAAcrgB,GACZ,GAAMA,EAAI,KAESsB,KADArK,KAAKmpB,iBAAiBxU,KAAK,SAAAmB,GAAM,MAAAA,GAAG7M,aAAeF,EAAGE,eAIrEjJ,KAAKmpB,iBAAmB9J,EAAkBtW,IAAOA,GAAzDiX,OAAgEhgB,KAAKmpB,kBACnDnpB,KAAKmpB,iBADvBnJ,QACyCjX,OAMvCuf,EAAFppB,UAAAwjB,MAAE,WACE1iB,KAAKmpB,qBA3MTb,mBE2EE,QAAFe,GAAwBriB,EACAgB,EACAC,GAFAjI,KAAxBgH,YAAwBA,EACAhH,KAAxBgI,WAAwBA,EACAhI,KAAxBiI,KAAwBA,EAJtBjI,KAAFspB,gBAAmB,EA0HnBtpB,KAAAupB,WAAgC,GAAI7gB,GAAAA,QArHhC1I,KAAKwpB,QAAUxpB,KAAKypB,mBACpBzpB,KAAK0pB,OAAS1pB,KAAKwpB,QAAQ3e,KACzBC,EAAAA,OAAO,SAACkF,GAA2B,MAAAA,GAAQhE,OAAS,IACpDjJ,EAAAA,IAAI,SAACiN,GAA2B,MAAAA,GAAQ,MAjF9C,MAyFEqZ,GAAFnqB,UAAAqV,YAAE,WACEvU,KAAKupB,WAAW/d,OAChBxL,KAAKupB,WAAWhG,YAUlB8F,EAAFnqB,UAAA0L,aAAE,WACE,MAAO5K,MAAKwpB,SASdH,EAAFnqB,UAAAumB,SAAE,SAAS/jB,GAAT,GAAF5B,GAAAE,IAEI,OADgB4f,GAAaL,EAAY7d,IAC1BuU,KAAK,SAAArN,GAClB,GAAM2D,GAAQkT,EAAa7W,EAAO9I,EAAKkH,YACvC,OAAOlH,GAAKkI,WAAWyd,SAASlZ,MAa5B8c,EAAVnqB,UAAAuqB,4BACI,GAAM5c,GAAU7M,KAAKgH,YAAY8F,MAAM/J,IAAI,SAAAgG,GAAM,MAAAA,GAAGE,YACpD,OAAOjJ,MAAK2pB,gBAAgB9c,IAiBtBwc,EAAVnqB,UAAAyqB,gBAAA,SAA0BjE,cAChBkE,EAAa,SAAC5Z,GAClB,GAAM6Z,GAAe,SAAC5V,GAAwB,MAACA,GAAOhL,WAAW+C,OAAS,EAC1E,OAAQgE,GAAQlF,OAAO+e,GAAc7d,OAAS,GAE1C8d,EAAkB,SAAC9Z,GACvB,MAAQlQ,GAAKwpB,eAA2BtZ,EAAQlF,OAAO,SAAAmJ,GACrD,GAAMlL,GAAKjJ,EAAKkH,YAAYgC,YAAYiL,EAAOhL,WAC/C,QAAQF,IAAaA,EAAG8U,cAFI7N,EAQhC,OAAOhQ,MAAKgI,WACP+E,QAAQ/M,KAAKiI,KAAK+E,eAAe0Y,IACjC7a,KACGC,EAAAA,OAAO,SAACmJ,GAAwB,MAAAA,GAAO9K,UACvC4gB,EAAAA,aAAa,EAAGC,EAAAA,eAChBC,EAAAA,UAAU,SAAAre,GAAK,MAAAse,GAAAA,GAAGpqB,EAAKqqB,wBACvBpnB,EAAAA,IAAI+mB,GACJhf,EAAAA,OAAO8e,GACPvZ,EAAAA,UAAUrQ,KAAKupB,cAQjBF,EAAVnqB,UAAAirB,yCACUC,EAAe,SAACnW,GAEpB,MAAO/K,GAAW+K,EADWnU,EAAKkH,YAAYgC,YAAYiL,EAAOhL,cAG7DohB,EAAwB,SAACpW,GAC7B,MAAOnU,GAAKmI,KAAKugB,aAAavU,GAAUnU,EAAKmI,KAAK2gB,YAAY3U,GAAUA,EAG1E,OAAOjU,MAAKgI,WACPsf,YACAvkB,IAAI,SAAAwJ,GAAS,MAAA,IAAI4P,KAAY,EAAM5P,KACnCxJ,IAAIsnB,GACJtnB,IAAIqnB,GACJ/gB,KAAKC,mBAjIdnL,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,+CA/CzBpB,KAAQmP,KAFRnP,KAAQkP,KACRlP,KAAQoP,iJAdR8b,mBe0BE,QAAFiB,GACgBtjB,EACAgB,EACuBoH,EACF+V,EACH5J,GAJlBvb,KAAhBgH,YAAgBA,EACAhH,KAAhBgI,WAAgBA,EACuBhI,KAAvCoP,aAAuCA,EACFpP,KAArCmlB,YAAqCA,EACHnlB,KAAlCub,UAAkCA,EAuKlCvb,KAAAuqB,0BAAqC,EACrCvqB,KAAAwqB,uBACAxqB,KAAAyqB,iBAA0D,GAAIttB,KAxM9D,MAsCEmtB,GAAFprB,UAAAwnB,SAAE,SAAS9I,GACPA,EAAOA,EAAK7a,IAAI,SAAA+S,GAAM,MAAAA,GAAG7S,SAEzBjD,KAAK0qB,kBACL1qB,KAAK2qB,gBACL3qB,KAAK4qB,eAAehN,GAEpB5d,KAAK6qB,sBAOPP,EAAFprB,UAAA4rB,QAAE,WACE,GAAI9qB,KAAKuqB,yBAA0B,CACjC,GAAMQ,GAAe,SAAC9W,GAAwB,MAAAA,GAAOhL,YAC/C2U,EAAO5d,KAAKwqB,oBAAoBznB,IAAIgoB,EAC1C,KAEE/qB,KAAK2qB,gBACL3qB,KAAKgrB,yBACLhrB,KAAK4qB,eAAehN,WAGpB5d,KAAKwqB,uBACDxqB,KAAKirB,oBACPjrB,KAAKirB,mBAAmBtf,iBAcxB2e,EAAVprB,UAAA2rB,8BAII,GAHkBrP,EAAAA,kBAAkBxb,KAAKmlB,cAAgBnlB,KAAKub,WACvBvb,KAAKoP,aAAa6T,wBAElC,CACrB,GAAMiI,GAAUC,EAAAA,UAAUC,OAAQ,UAAUvgB,KAAKwgB,EAAAA,KAAK,GACtDrrB,MAAKirB,mBAAqBC,EAAQ7e,UAAUrM,KAAK8qB,QAAQ1d,KAAKpN,SAU1DsqB,EAAVprB,UAAAyrB,yBACI,GAAM/M,GAAO5d,KAAKsrB,kBAElBtrB,MAAKurB,qBAAqB3N,GAAM,GAChC5d,KAAKwrB,qBAAqB5N,GAAM,IAM1B0M,EAAVprB,UAAAwrB,qCACI,KAAK1qB,KAAKuqB,yBAA0B,CAClC,GAAMkB,GAAgB,SAAClf,GAAkB,MAAA,IAAI4P,KAAY,EAAM5P,IACzD6d,EAAe,SAACnW,GAEpB,MAAO/K,GAAW+K,EADanU,EAAKkH,YAAYgC,YAAYiL,EAAOhL,aAIrEjJ,MAAKwqB,oBAAsBxqB,KAAKsrB,mBAC3BvoB,IAAI0oB,GACJ1oB,IAAIqnB,GACJ/gB,KAAKC,GAEVtJ,KAAK0rB,yBAODpB,EAAVprB,UAAA0rB,eAAA,SAAyBhN,GACf5d,KAAKyqB,kBACTzqB,KAAKurB,qBAAqB3N,GAAM,GAElC5d,KAAKwrB,qBAAqB5N,IAMpB0M,EAAVprB,UAAAssB,qBAAA,SAA+B3e,EAAmB1D,kBAAlD,KAAAA,IAAkDA,GAAlD,EACI,IAAMsW,GAAe,SAAClT,GACpB,GAAMmT,GAAU5f,EAAKkH,YACf+B,EAAK2W,EAAQC,YAAYpT,IAAUmT,EAAQ1W,YAAYuD,EAC7D,OAAOxD,GAAKA,EAAGE,WAAasD,GAExBof,EAAkB,SAACpf,GAAkB,MAAAzM,GAAK6rB,gBAAgBxiB,EAASoD,GAEzEM,GAAQ9J,IAAI0c,GAAc1U,QAAQ4gB,IAO5BrB,EAAVprB,UAAAqsB,qBAAA,SAA+B1e,EAAmB1D,GAC9C,GAAMkc,GAAW,GAAIloB,IACrB0P,GAAQ9B,QAAQ,SAAAwB,GACd8Y,EAAS5a,IAAI8B,GAAQpD,QAASA,MAGhCnJ,KAAKgI,WAAWqd,SAAWA,GAMrBiF,EAAVprB,UAAAwsB,gCACI,GAAM9e,GAAS5M,KAAKyqB,gBAEpB7d,GAAO8V,QACP1iB,KAAKgI,WAAWqd,SAASta,QAAQ,SAACrJ,EAAuBgI,GACvDkD,EAAOnC,IAAIf,EAAKhI,KAElB1B,KAAKuqB,0BAA2B,GAM1BD,EAAVprB,UAAA8rB,kCACI,GAAMpe,GAAS5M,KAAKgI,WAAWqd,QAE/BzY,GAAO8V,QACP1iB,KAAKyqB,iBAAiB1f,QAAQ,SAACrJ,EAAuBgI,GACpDkD,EAAOnC,IAAIf,EAAKhI,KAGlB1B,KAAKyqB,iBAAiB/H,QACtB1iB,KAAKuqB,0BAA2B,GAM1BD,EAAVprB,UAAAysB,gBAAA,SAA0BxiB,EAAkBoD,GACxCvM,KAAKgI,WAAWyN,OAAOjK,KAAK,GAAI2Q,IAAYhT,EAASoD,KAGzDlL,OAAAC,eAAcgpB,EAAdprB,UAAA,qCACI,MAAOc,MAAKgI,WAAWsf,4DA5K3BnpB,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,+CAPzBpB,KAAQmP,KADRnP,KAAQkP,KAcRlP,SAAAkM,GAAA/J,aAAAnC,KAAO2J,EAAAA,OAAPzJ,MAAcgJ,QACdlJ,KAAkDkD,OAAlDf,aAAAnC,KAAO2J,EAAAA,OAAPzJ,MAAc0J,EAAAA,iBACd5J,SAAAkM,GAAA/J,aAAAnC,KAAO2J,EAAAA,OAAPzJ,MAAcgkB,EAAAA,uMA/BdiI,KCOA9pB,GAAA,WAWE,QAAFA,GAAkCorB,EACsBC,EACb1G,EACE/V,GAHXpP,KAAlC4rB,kBAAkCA,EACsB5rB,KAAxD6rB,oBAAwDA,EACb7rB,KAA3CmlB,YAA2CA,EACEnlB,KAA7CoP,aAA6CA,EArB7C,MA0BE5O,GAAFtB,UAAAsS,oBAAE,SAAoB/H,EACAgH,EACA/O,OAAtB,KAAAA,IAAsBA,EAAtB,KACI,IAAIyP,KACiB,iBAAVV,KACTU,EAAOV,GAAS/O,EAChB+O,EAAQU,GAEVA,EAASnR,KAAKoP,aAAa2T,sBAAwBtS,EAAQwP,EAAiBxP,GAC5EzQ,KAAK8rB,+BAA+B3a,EAAQ1H,IAM9CjJ,EAAFtB,UAAAsU,qBAAE,SAAqB/C,EAAwBqT,GAA7C,GAAFhkB,GAAAE,SAAA,KAAA8jB,IAA+CA,KAC3C,IAAM3S,GAASnR,KAAKoP,aAAa2T,sBAAwBtS,EAAQwP,EAAiBxP,EAClFqT,GAAS/Y,QAAQ,SAAAC,GACflL,EAAKgsB,+BAA+B3a,EAAQnG,MAShDxK,EAAFtB,UAAA2kB,iBAAE,SAAiBjX,GACf,GACIlL,GAAQ1B,KAAKwQ,YAAY5D,EADf,kBAERmf,EAAiB/rB,KAAKgsB,kBAAkBpf,EAFhC,mBAGbjG,EAAAA,iBAAiB3G,KAAKmlB,cAAgBnlB,KAAK6rB,oBAAuBnqB,EAAQ,EAE3E,QAAQA,GAAS,MAAOqqB,IAM1BvrB,EAAFtB,UAAA+sB,qBAAE,SAAqBxiB,EAAsByiB,GACzC,MAAOziB,GAAQsE,aAAame,IAAc,IAM5C1rB,EAAFtB,UAAA8sB,kBAAE,SAAkBviB,EAAsBmZ,GACtC,MAAOpH,GAAAA,kBAAkBxb,KAAKmlB,aAC5B1b,EAAQgH,MAAM0b,iBAAiBvJ,GAAa5iB,KAAKosB,gBAAgB3iB,EAASmZ,IAO9EpiB,EAAFtB,UAAAsR,YAAE,SAAY/G,EAAsBmZ,EAAmByJ,OAAvD,KAAAA,IAAuDA,GAAvD,EACI,IAAI3qB,GAAQ,EACZ,IAAI+H,EAAS,EACU/H,EAAQ1B,KAAKgsB,kBAAkBviB,EAASmZ,MAEvDpH,EAAAA,kBAAkBxb,KAAKmlB,aACpBkH,IACH3qB,EAAQ4qB,iBAAiB7iB,GAAS0iB,iBAAiBvJ,IAGjD5iB,KAAK6rB,sBACPnqB,EAAQ1B,KAAK4rB,kBAAkBjJ,mBAAmBlZ,EAASmZ,KAQnE,MAAOlhB,GAAQA,EAAMuB,OAAS,IAQxBzC,EAAVtB,UAAA4sB,+BAAA,SAAyC3a,EACA1H,aACrCpI,QAAO4O,KAAKkB,GAAQ9H,OAAO0B,QAAQ,SAAArB,GACjC,GAAMsB,GAAKmG,EAAOzH,GACZU,EAAqCsF,MAAM8P,QAAQxU,GAAMA,GAAMA,EACrEZ,GAAOf,MACP,KAAkB,GAAxBwT,GAAA,EAAwB0P,EAAxBniB,EAAwByS,EAAxB0P,EAAAvgB,OAAwB6Q,IAAQ,CAArB,GAAInb,GAAf6qB,EAAA1P,EACQnb,GAAQA,EAAQA,EAAQ,GAAK,GACzB8Z,EAAAA,kBAAkB1b,EAAKqlB,eAAiBrlB,EAAK+rB,oBAC/CrQ,EAAAA,kBAAkB1b,EAAKqlB,aACrB1b,EAAQgH,MAAMC,YAAYhH,EAAKhI,GAAS5B,EAAK0sB,gBAAgB/iB,EAASC,EAAKhI,GAE7E5B,EAAK8rB,kBAAkBnJ,kBAAkBhZ,EAASC,EAAKhI,OAMvDlB,EAAVtB,UAAAstB,gBAAA,SAA0B/iB,EAAcmZ,EAAmB6J,GACvD7J,EAAYA,EAAU9R,QAAQ,kBAAmB,SAAS2L,aAC1D,IAAMiQ,GAAW1sB,KAAK2sB,oBAAoBljB,EAC1CijB,GAAS9J,GAAa6J,GAAc,GACpCzsB,KAAK4sB,qBAAqBnjB,EAASijB,IAG7BlsB,EAAVtB,UAAAktB,gBAAA,SAA0B3iB,EAAcmZ,GAEpC,MADiB5iB,MAAK2sB,oBAAoBljB,GAC1BmZ,IAAc,IAGxBpiB,EAAVtB,UAAAytB,oBAAA,SAA8BljB,GAC1B,GAAMijB,MACAG,EAAiBpjB,EAAQsE,aAAa,QAC5C,IAAI8e,EAEF,IAAK,GADCC,GAAYD,EAAe/pB,MAAM,OAC9B0J,EAAI,EAAGA,EAAIsgB,EAAU9gB,OAAQQ,IAAK,CACzC,GAAMiE,GAAQqc,EAAUtgB,GAAGvJ,MAC3B,IAAIwN,EAAMzE,OAAS,EAAG,CACpB,GAAM+gB,GAAatc,EAAM9L,QAAQ,IACjC,KAAoB,IAAhBooB,EACF,KAAM,IAAIC,OAAM,sBAAsBvc,EAExC,IAAMwc,GAAOxc,EAAM2P,OAAO,EAAG2M,GAAY9pB,MACzCypB,GAASO,GAAQxc,EAAM2P,OAAO2M,EAAa,GAAG9pB,QAIpD,MAAOypB,IAGDlsB,EAAVtB,UAAA0tB,qBAAA,SAA+BnjB,EAAcijB,GACzC,GAAIQ,GAAiB,EACrB,KAAK,GAAMxjB,KAAOgjB,GAAU,CACTA,EAAShjB,KAExBwjB,GAAkBxjB,EAAM,IAAMgjB,EAAShjB,GAAO,KAGlDD,EAAQuE,aAAa,QAASkf,mBAvJlC/uB,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,+CAJzBpB,KAAQqkB,GAARliB,aAAAnC,KAOeoC,EAAAA,aACfpC,KAAA0J,QAAAvH,aAAAnC,KAAeoC,EAAAA,WAAfpC,KAA2B2J,EAAAA,OAA3BzJ,MAAkCsJ,QAClCxJ,KAAwDkD,OAAxDf,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsB0J,EAAAA,iBACtB5J,SAAAkM,GAAA/J,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsBgJ,gLArBtB7G,KzCUAhB,GAAA,wBAGEQ,KAAF0jB,aAAgB,EAbhB,MAuBElkB,GAAFN,UAAAkU,WAAE,SAAWmH,EAAgBlH,EAA0B8Z;gDAvBvD3tB,mBC0DE,QAAFiB,GAAwBuH,EACAhB,EACAiB,GAFAjI,KAAxBgI,WAAwBA,EACAhI,KAAxBgH,YAAwBA,EACAhH,KAAxBiI,KAAwBA,EAfxBjI,KAAAkI,wBACAlI,KAAAmI,WAAmC,GAAIhL,KACvC6C,KAAAoI,cAAyC,GAAIC,SAC7CrI,KAAAsI,WAAmC,GAAID,SACvCrI,KAAAuI,UAAkC,GAAIF,SACtCrI,KAAAwI,SAAiC,GAAIH,SAErCrI,KAAAyI,QAA6C,GAAIC,GAAAA,QAS7C1I,KAAK2I,qBA7DT,MAsDEtH,QAAFC,eAAMb,EAANvB,UAAA,sBAAE,WACE,MAAOc,MAAKkI,qBAAqB,GAAKlI,KAAKkI,qBAAqB,GAAGU,MAAQ,oCAa7EnI,EAAFvB,UAAA2J,cAAE,SAAcC,GACZ,GAAMC,GAAwB/I,KAAKgJ,YAAYF,EAAGG,WAC9CF,KACFD,EAAKI,EAAWJ,EAAIC,GAEhBD,EAAGK,UAAsD,IAA3CnJ,KAAKkI,qBAAqBvD,QAAQoE,IAClD/I,KAAKkI,qBAAqBkB,KAAKL,GAC/B/I,KAAKkI,qBAAqBmB,KAAKC,GAE/BtJ,KAAKuJ,gBAEKT,EAAGK,UAAsD,IAA3CnJ,KAAKkI,qBAAqBvD,QAAQoE,KAE1D/I,KAAKkI,qBAAqBsB,OAAOxJ,KAAKkI,qBAAqBvD,QAAQoE,GAAK,GACxE/I,KAAKkI,qBAAqBmB,KAAKC,GAE/BtJ,KAAKuJ,kBAaX9I,EAAFvB,UAAAkB,KAAE,SAAKqJ,EACAC,EACAC,EACAC,EACAC,OAAP,KAAAA,IAAOA,MAEHC,EAAe9J,KAAKuI,UAAWkB,EAASC,EAAKC,GAC7CG,EAAe9J,KAAKwI,SAAUiB,EAASC,EAAKE,GAE5C5J,KAAK+J,mBAAmBN,EAASC,GACjC1J,KAAKgK,mBAAmBP,EAASC,EAAKG,IASxCpJ,EAAFvB,UAAA+K,SAAE,SAASR,EAAsBC,EAAaX,GAC1C,GAAMmB,GAAQlK,KAAKmI,WAAWgC,IAAIV,EAClC,IAAIS,EAAO,CACT,GAAME,OAAgBC,KAAPtB,EAAmBmB,EAAMC,IAAIpB,GAAM/I,KAAKsK,mBAAmBJ,EAAOR,EACjF,IAAIU,EACF,MAAOA,GAAOD,IAAIT,KAWxBjJ,EAAFvB,UAAAqL,SAAE,SAASd,EAAsBC,GAC7B,GAAMQ,GAAQlK,KAAKmI,WAAWgC,IAAIV,EAClC,IAAIS,EAAO,CACT,GAAME,GAASpK,KAAKsK,mBAAmBJ,EAAOR,EAC9C,IAAIU,EACF,WAA2BC,KAApBD,EAAOD,IAAIT,KAAsB,EAG5C,OAAO,GAUTjJ,EAAFvB,UAAAsL,SAAE,SAASf,EAAsBC,EAAanI,EAAUwH,GACpD,GAAImB,GAAmClK,KAAKmI,WAAWgC,IAAIV,EAC3D,IAAKS,EAGE,CACL,GAAME,IAAUF,EAAMC,IAAIpB,IAAO,GAAI5L,MAAOsN,IAAIf,EAAKnI,EACrD2I,GAAMO,IAAI1B,EAAIqB,GACdpK,KAAKmI,WAAWsC,IAAIhB,EAASS,OAL7BA,IAAQ,GAAI/M,MAAMsN,IAAI1B,GAAI,GAAI5L,MAAMsN,IAAIf,EAAKnI,IAC7CvB,KAAKmI,WAAWsC,IAAIhB,EAASS,EAM/B,IAAMxI,GAAQ1B,KAAKiK,SAASR,EAASC,OACvBW,KAAV3I,GACF1B,KAAK0K,cAAcjB,EAASC,EAAKhI,IAKrCjB,EAAFvB,UAAAyL,WAAE,SAAWlB,EAAsBC,GAC/B,MAAO1J,MAAKyI,QACPmC,eACAC,KAAKC,EAAAA,OAAO,SAAA9H,GAAK,MAAAA,GAAEyG,UAAYA,GAAWzG,EAAE0G,MAAQA,MAI3DjJ,EAAFvB,UAAAqK,aAAE,WAAA,GAAFzJ,GAAAE,IACIA,MAAKmI,WAAW4C,QAAQ,SAACb,EAAOc,GAC9B,GAAMC,GAAS,GAAIC,KAAIpL,EAAKsI,cAAc+B,IAAIa,IAC1CG,EAAWrL,EAAKwK,mBAAmBJ,EAEnCiB,IACFA,EAASJ,QAAQ,SAAC/H,EAAGoI,GACnBtL,EAAK4K,cAAcM,EAAII,EAAGpI,GAC1BiI,EAAOI,OAAOD,KAIlBH,EAAOF,QAAQ,SAAAK,GAEb,GADAD,EAAWrL,EAAKwK,mBAAmBJ,EAAOkB,GAC5B,CACZ,GAAM1J,GAAQyJ,EAAShB,IAAIiB,EAC3BtL,GAAK4K,cAAcM,EAAII,EAAG1J,OAE1B5B,GAAKwL,aAAaN,EAAII,QAY9B3K,EAAFvB,UAAAoM,aAAE,SAAa7B,EAAsBC,GACjC,GAAM6B,GAAWvL,KAAKwI,SAAS2B,IAAIV,EACnC,IAAI8B,EAAU,CACZ,GAAM3B,GAAyB2B,EAASpB,IAAIT,EACtCE,KACJA,IACA5J,KAAKyI,QAAQ+C,MAAM/B,QAA3BA,EAAoCC,IAApCA,EAAyChI,MAAO,QAW9CjB,EAAFvB,UAAAwL,cAAE,SAAcjB,EAAsBC,EAAahI,GAC/C,GAAM6J,GAAWvL,KAAKuI,UAAU4B,IAAIV,EACpC,IAAI8B,EAAU,CACZ,GAAM5B,GAA2B4B,EAASpB,IAAIT,EACxCC,KACJA,EAASjI,GACT1B,KAAKyI,QAAQ+C,MAAM/B,QAA3BA,EAAoCC,IAApCA,EAAyChI,MAAzCA,OASEjB,EAAFvB,UAAAuM,eAAE,SAAehC,GACb,GAAMnB,GAAatI,KAAKsI,WAAW6B,IAAIV,EACnCnB,KACFA,EAAWyC,QAAQ,SAAAW,GAAK,MAAAA,GAAEC,gBAC1B3L,KAAKsI,WAAW+C,OAAO5B,GAEzB,IAAMtB,GAAanI,KAAKmI,WAAWgC,IAAIV,EACnCtB,KACFA,EAAW4C,QAAQ,SAACa,EAAGF,GAAM,MAAAvD,GAAWkD,OAAOK,KAC/C1L,KAAKmI,WAAWkD,OAAO5B,KAS3BhJ,EAAFvB,UAAA2M,cAAE,SAAcpC,EAAsBC,GAApC,GAAF5J,GAAAE,KACUkK,EAAQlK,KAAKmI,WAAWgC,IAAIV,EAClC,IAAIS,EAAO,CACT,GAAMiB,GAAWnL,KAAKsK,mBAAmBJ,EAAOR,EAC5CyB,KACEzB,EACF1J,KAAK0K,cAAcjB,EAASC,EAAKyB,EAAShB,IAAIT,IAE9CyB,EAASJ,QAAQ,SAAC/H,EAAGoI,GAAM,MAAAtL,GAAK4K,cAAcjB,EAAS2B,EAAGpI,QAO1DvC,EAAVvB,UAAA6K,mBAAA,SAA6BN,EAAsBC,GAC/C,GAAIuB,GAASjL,KAAKoI,cAAc+B,IAAIV,EAC/BwB,KACHA,EAAS,GAAIC,KACblL,KAAKoI,cAAcqC,IAAIhB,EAASwB,IAElCA,EAAOa,IAAIpC,IASLjJ,EAAVvB,UAAA8K,mBAAA,SAA6BP,EACAC,EACAqC,aACzB,IAAIA,GAAYA,EAASC,OAAQ,CAC/B,GAAIC,GAAWjM,KAAKsI,WAAW6B,IAAIV,EAC9BwC,KACHA,EAAW,GAAI9O,KACf6C,KAAKsI,WAAWmC,IAAIhB,EAASwC,GAG/B,KADqBA,EAAS9B,IAAIT,GACf,CACjB,GAAMwC,GAAkBC,EAAAA,MAAhCC,UAAA,GAAyCL,GAAUM,UAAU,WACnD,GAAMC,GAAexM,EAAKmK,SAASR,EAASC,EAC5C5J,GAAK4K,cAAcjB,EAASC,EAAK4C,IAEnCL,GAASxB,IAAIf,EAAKwC,MAMhBzL,EAAVvB,UAAA8J,YAAA,SAAsBuD,GAClB,MAAOvM,MAAKgH,YAAYgC,YAAYuD,IAQ9B9L,EAAVvB,UAAAoL,mBAAA,SAA6BJ,EAAsBR,GAC/C,IAAK,GAAI8C,GAAI,EAAGA,EAAIxM,KAAKkI,qBAAqB8D,OAAQQ,IAAK,CACzD,GAAMC,GAAczM,KAAKkI,qBAAqBsE,GACxCrB,EAAWjB,EAAMC,IAAIsC,EAAY7D,MACvC,IAAIuC,QACUd,KAARX,GAAqByB,EAASuB,IAAIhD,IACpC,MAAOyB,GAIb,GAAMwB,GAAWzC,EAAMC,IAAI,GAC3B,YAAgBE,KAARX,GAAqBiD,GAAYA,EAASD,IAAIhD,GAAQiD,MAAWtC,IAMnE5J,EAAVvB,UAAAyJ,8BACI,GAAMiE,GAAM,KACNC,EAAU7M,KAAKgH,YAAY8F,MAAM/J,IAAI,SAAAgG,GAAM,MAAAA,GAAGE,YAEpDjJ,MAAKgI,WACA+E,QAAQ/M,KAAKiI,KAAK+E,eAAeH,IACjChC,KACGoC,EAAAA,IAAIjN,KAAKiI,KAAKiF,gBAAgBN,IAC9B9B,EAAAA,OAAO9K,KAAKiI,KAAKkF,qBAEpBd,UAAUrM,KAAK6I,cAAcuE,KAAKpN,uBA1S3C7B,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,+CA5BzBpB,KAAQkP,KADRlP,KAAQmP,KAIRnP,KAAQoP,iJAlBR9M,gFCAA,MAmBwC1B,GAAxCyO,EAAAvO,GACEuO,EAAFtO,UAAAC,YAAE,SAAYsO,GACV,OAAQC,QAAWD,EAAM,OAAOA,EAApC,IAA6C,oBAH7CtP,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAlBzBiO,GAmBwChO,IAAxCmO,GAAA,SAAA1O,GAgBE,QAAF0O,GAAwBjO,EACAC,EACAC,EACAC,EACqB6G,EACCD,GAL5C,GAAF3G,GAMIb,EANJc,KAAAC,KAMUN,EAAYC,EAAcC,EAAQC,IAN5CG,WAAwBF,GAAxBJ,WAAwBA,EACAI,EAAxBH,aAAwBA,EACAG,EAAxBF,OAAwBA,EACAE,EAAxBD,QAAwBA,EACqBC,EAA7C4G,WAA6CA,EACC5G,EAA9C2G,mBAA8CA,EAd5C3G,EAAFG,cAA4B,UAC1BH,EAAF8N,WAAyB,GAuCvB9N,EAAFI,WAAyB2N,GAxBrB/N,EAAKM,OACLN,EAAK0K,SAAS1K,EAAKgO,cAAcC,aAAa,QAAU,GAAI,IACxDpH,EAAAA,iBAAiB7G,EAAK4G,aAAe5G,EAAK2G,oBAC5C3G,EAAKgO,cAAcE,aAAa,MAAO,MA7C7C,MAyBqCjP,GAArC4O,EAAA1O,GAIEoC,OAAFC,eACMqM,EADNzO,UAAA,WAAE,SACQqC,GACNvB,KAAK4N,WAAarM,EAClBvB,KAAKwK,SAASxK,KAAK4N,WAAY,qCAyBvBD,EAAZzO,UAAAuC,gBAAE,SAA0BC,GACxB,GAAM+L,GAAM/L,GAAS1B,KAAK4N,UACtBjH,GAAAA,iBAAiB3G,KAAK0G,aAAe1G,KAAKyG,mBAC5CzG,KAAK6B,UAAU4L,GAEfzN,KAAK8N,cAAcE,aAAa,MAAOP,wCAvD7CtP,KAAmBkC,EAAAA,aA6BnBlC,KAAsCqP,KArBtCrP,KAAEqC,KALFrC,KAAEsC,KA6BFtC,KAAyDkD,OAAzDf,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsB0J,EAAAA,iBACtB5J,KAAA0J,QAAAvH,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsBsJ,2BAXtBsG,MAAA9P,KAAG2D,EAAAA,MAAHzD,MAAS,UA7BTsP,GAyBqCjN,IA4C/BmN,GAA4C,GAAI1Q,KAEhDJ,IACJ,SAAU,SAAU,SAAU,SAAU,SACxC,YAAa,YAAa,YAAa,YACvC,YAAa,YAAa,YAAa,6FAoBvC+C,GAAF/C,OAAqBA,KA9FrB,MA6F4CgC,GAA5CmP,EAAAjP,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAfK,yNAeK9D,OAAtBA,OA5FAmR,GA6F4CP,mBC1D1C,QAAFQ,GAAwBzO,EACAE,EACAC,EACAuO,EACAC,EACAC,EAC6BC,GANnD,GAAFzO,GAOIb,EAPJc,KAAAC,KAOUN,EAAU,KAASE,EAAQC,IAPrCG,WAAwBF,GAAxBJ,WAAwBA,EACAI,EAAxBF,OAAwBA,EACAE,EAAxBD,QAAwBA,EACAC,EAAxBsO,gBAAwBA,EACAtO,EAAxBuO,gBAAwBA,EACAvO,EAAxBwO,SAAwBA,EAC6BxO,EAArDyO,gBAAqDA,EAlBnDzO,EAAFG,cAA4B,UAoBnBH,EAAKyO,kBAGRzO,EAAKyO,gBAAkB,GAAIC,GAAAA,QACzB1O,EAAKsO,gBAAiBtO,EAAKuO,gBAAiBvO,EAAKJ,WAAYI,EAAKwO,WAGtExO,EAAKM,OACLN,EAAK0K,SAAS,GAAI,MAnDtB,MAqBoCzL,GAApCoP,EAAAlP,GAQEoC,OAAFC,eACM6M,EADNjP,UAAA,aAAE,SACUqC,GACRvB,KAAKuO,gBAAgBE,MAAQlN,EAC7BvB,KAAKwK,SAASjJ,EAAK,qCAsBX4M,EAAZjP,UAAAuC,gBAAE,SAA0BC,GACxB1B,KAAKuO,gBAAgBG,QAAUhN,EAC/B1B,KAAKuO,gBAAgBI,aAUvBR,EAAFjP,UAAAyP,UAAE,WACE3O,KAAKuO,gBAAgBI,iDAzDzBxQ,KAAEkC,EAAAA,aASFlC,KAAwBqC,KAAxBrC,KAAoCsC,KAPpCtC,KAAEyQ,EAAAA,kBACFzQ,KAAE0Q,EAAAA,kBAEF1Q,KAAE2Q,EAAAA,YAGF3Q,KAAQqQ,EAAAA,QAARlO,aAAAnC,KAuBeoC,EAAAA,WAvBfpC,KAuB2B4Q,EAAAA,4BAZ3BN,QAAAtQ,KAAG2D,EAAAA,MAAHzD,MAAS,YA7BT8P,GAqBoCzN,IAkD9B3D,IACJ,UAAW,aAAc,aAAc,aAAc,aAAc,aACnE,gBAAiB,gBAAiB,gBAAiB,gBACnD,gBAAiB,gBAAiB,gBAAiB,iGAgBnD+C,GAAF/C,OAAqBA,KA1FrB,MAyF2CgC,GAA3CiQ,EAAA/P,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAXK,sOAWK9D,OAAtBA,OAxFAiS,GAyF2Cb,+ECzF3C,MAoC0CpP,GAA1CkQ,EAAAhQ,GACEgQ,EAAF/P,UAAAC,YAAE,SAAY+P,EAAcjO,GAExB,OAAQiC,QADoB,SAATgM,EACajO,EAAOiC,QAAU,wBAJrD/E,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAnCzB0P,GAoC0CzP,IAA1C2P,GAAA,SAAAlQ,GAeE,QAAFkQ,GAAwBzP,EACAC,EACAC,EACAC,EACuBuP,EACF1I,EACaD,GANxD,GAAF3G,GAOIb,EAPJc,KAAAC,KAOUN,EAAYC,EAAcC,EAAQC,IAP5CG,WAAwBF,GAAxBJ,WAAwBA,EACAI,EAAxBH,aAAwBA,EACAG,EAAxBF,OAAwBA,EACAE,EAAxBD,QAAwBA,EACuBC,EAA/CsP,aAA+CA,EACFtP,EAA7C4G,WAA6CA,EACa5G,EAA1D2G,mBAA0DA,EAbxD3G,EAAFG,cAA4B,YAG1BH,EAAFoD,QAA8B,GAC5BpD,EAAFuP,WAAwB,EACtBvP,EAAFwP,cAA2B,IAjD3B,MA2CuCvQ,GAAvCoQ,EAAAlQ,GAsBEkQ,EAAFjQ,UAAAqQ,gBAAE,WACEvP,KAAKwP,oBAGL,KAAK,GADCC,GAAWC,MAAMC,KAAK3P,KAAK8N,cAAc2B,UACtCjD,EAAI,EAAGA,EAAIiD,EAASzD,OAAQQ,IACnC,GAAIxM,KAAKH,QAAQ0K,SAASkF,EAASjD,GAAmB,QAAS,CAC7DxM,KAAKsP,cAAe,CACpB,OAIAM,GAAYlD,IAAI1M,KAAK8N,eACvB9N,KAAKkD,QAAU0M,GAAYzF,IAAInK,KAAK8N,gBAEpC9N,KAAKkD,QAAUlD,KAAK6P,kBACpBD,GAAYnF,IAAIzK,KAAK8N,cAAe9N,KAAKkD,UAG3ClD,KAAKI,MAEL,IAAM0P,GAAe9P,KAAKH,QAAQoK,SAASjK,KAAK8N,cAAe9N,KAAKC,cAAe,QAC9DoK,KAAjByF,GAA+C,KAAjBA,EAChC9P,KAAKwK,UAAS,EAAM,IAEpBxK,KAAK6L,iBASTsD,EAAFjQ,UAAA6Q,YAAE,SAAYC,GAAZ,GAAFlQ,GAAAE,IACIqB,QAAO4O,KAAKD,GAASjF,QAAQ,SAAArB,GAC3B,IAAkC,IAA9B5J,EAAK/C,OAAO4H,QAAQ+E,GAAa,CACnC,GAAMwG,GAAWxG,EAAI5G,MAAM,KACrBiG,EAAKmH,EAASxR,MAAM,GAAG0E,KAAK,KAC5B+M,EAAaH,EAAQtG,GAAK4C,aAC5B8D,EAA4B,KAAfD,GACE,IAAfA,GAAmB3O,EAAAA,sBAAsB2O,EAEzB,YAAhBD,EAAS,KACXE,GAAcA,GAEhBtQ,EAAK0K,SAAS4F,EAAYrH,OAYtBoG,EAAZjQ,UAAAsQ,mBAAE,WAAA,GAAF1P,GAAAE,IACIA,MAAKqP,UAAYrP,KAAKH,QAAQ0K,SAASvK,KAAK8N,cAAe,WAE1D,SAAU,gBAAgB/C,QAAQ,SAAArB,GACjC5J,EAAKD,QACA8K,WAAW7K,EAAKgO,cAAepE,GAC/BmB,KAAKwF,EAAAA,UAAUvQ,EAAKwQ,iBACpBjE,UAAUvM,EAAK+L,cAAcuB,KAAKtN,OASjCqP,EAAZjQ,UAAA2Q,gBAAE,WACE,MAAQ7P,MAAKqP,WAAcrP,KAAKsP,cAAgBtP,KAAKoP,aAAamB,gBAC9D,OAASvQ,KAAKJ,OAAO4Q,YAAYxQ,KAAK8N,cAAe,WAAW,IAI5DqB,EAAZjQ,UAAAuC,gBAAE,SAA0BC,OAA5B,KAAAA,IAA4BA,GAA5B,GACkB,KAAVA,IAGJ1B,KAAK6B,UAAUH,EAAQ,OAAS,SAAUwB,QAASlD,KAAKkD,UACpDyD,EAAAA,iBAAiB3G,KAAK0G,aAAe1G,KAAKyG,oBAC5CzG,KAAK8N,cAAc2C,MAAMC,YAAY,UAAW,IAElD1Q,KAAKH,QAAQgM,cAAc7L,KAAkB,cAAG,oDA/IpD7B,KAAEkC,EAAAA,aA2CFlC,KAAsC8Q,KA3BtC9Q,KAAEqC,KAFFrC,KAAEsC,KAgCFtC,SAAAkM,GAAA/J,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsBgJ,QACtBlJ,KAAyDkD,OAAzDf,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsB0J,EAAAA,iBACtB5J,KAAA0J,QAAAvH,aAAAnC,KAAeoC,EAAAA,WAAfpC,KAA2B2J,EAAAA,OAA3BzJ,MAAkCsJ,SAzDlCwH,GA2CuCzO,IAiHjCkP,GAA4C,GAAIvH,SAEhDtL,IACJ,SAAU,eACV,YAAa,YAAa,YAAa,YAAa,YACpD,eAAgB,eAAgB,eAAgB,eAChD,eAAgB,eAAgB,eAAgB,eAChD,SAAU,eACV,YAAa,YAAa,YAAa,YAAa,YACpD,eAAgB,eAAgB,eAAgB,eAChD,eAAgB,eAAgB,eAAgB,gGAmBhD+C,GAAF/C,OAAqBA,KAzLrB,MAwL8CgC,GAA9C4R,EAAA1R,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAdK,kdAcK9D,OAAtBA,OAvLA4T,GAwL8CxB,ICrK9CyB,GAAA,WACE,QAAFA,GAAqBlH,EAAoBhI,EAAemP,OAAxD,KAAAA,IAAwDA,GAAxD,GAAqB7Q,KAArB0J,IAAqBA,EAAoB1J,KAAzC0B,MAAyCA,EACrC1B,KAAK0J,IAAMmH,EAAWnH,EAAIoH,QAAQ,QAAS,IAAI7N,OAASyG,EAAIzG,OAE5DjD,KAAK0B,MAAQmP,EAAWnP,EAAMoP,QAAQ,QAAS,IAAI7N,OAASvB,EAAMuB,OAClEjD,KAAK0B,MAAQ1B,KAAK0B,MAAMoP,QAAQ,IAAK,IAxBzC,MAAAF,qBC+CE,QAAFG,GAAwBrR,EACAE,EACAC,EACAwO,EACAC,EACA0C,EAC2BC,EACH9J,EACbT,GARjC,GAAF5G,GASIb,EATJc,KAAAC,KASUN,EAAU,KAASE,EAAQC,IATrCG,IAAwBF,GAAxBJ,WAAwBA,EACAI,EAAxBF,OAAwBA,EACAE,EAAxBD,QAAwBA,EACAC,EAAxBuO,gBAAwBA,EACAvO,EAAxBwO,SAAwBA,EACAxO,EAAxBkR,UAAwBA,EAC2BlR,EAAnDmR,gBAAmDA,EAVjDnR,EAAFG,cAA4B,UAcnBH,EAAKmR,kBAGRnR,EAAKmR,gBAAkB,GAAIC,GAAAA,QAAQpR,EAAKuO,gBAAiBvO,EAAKJ,WAAYI,EAAKwO,WAEjFxO,EAAKM,MACL,IAAM+Q,GAASrR,EAAKgO,cAAcC,aAAa,UAAY,SAC3DjO,GAAKsR,eAAiBtR,EAAKuR,cAAcF,GACzCrR,EAAKwR,SAAWnK,GAAgBR,EAAAA,iBAAiBD,KAjErD,MAyCoC3H,GAApCgS,EAAA9R,GA4BY8R,EAAZ7R,UAAAuC,gBAAE,SAA0BC,GACxB,GAAMyP,GAASnR,KAAKqR,cAAc3P,EAClC1B,MAAKiR,gBAAgBM,QAAzBhK,KAAuCvH,KAAKoR,eAAmBD,GACvDnR,KAAKsR,UACPtR,KAAKwR,oBAAoBL,GAE3BnR,KAAKiR,gBAAgBtC,aAIboC,EAAZ7R,UAAAuS,YAAE,WACEzR,KAAKiR,gBAAgBM,QAAUvR,KAAKoR,eACpCpR,KAAKiR,gBAAgBtC,aASboC,EAAZ7R,UAAAmS,cAAE,SAAwBF,GAAxB,GAAFrR,GAAAE,KAEUgR,EAA8B,SAACzP,GACnC,MAAAzB,GAAKkR,UAAUU,SAASC,EAAAA,gBAAgBC,MAAOrQ,IAAQ,GACzD,IAAI4P,EACF,OAAQU,EAAQV,IACd,IAAK,SAAW,MAAOW,GAAiBC,EAAaZ,GACnDH,EACF,KAAK,QAAW,MAAOc,GAAgB,EAA2Bd,EAClE,KAAK,MACL,QAAgB,MAAOgB,GAAgBb,EAAQH,GAInD,UAQFD,EAAF7R,UAAAyP,UAAE,WACE3O,KAAKiR,gBAAgBtC,iDAvGzBxQ,KAAEkC,EAAAA,aAaFlC,KAAEqC,KACFrC,KAAEsC,KAZFtC,KAAE0Q,EAAAA,kBAGF1Q,KAAE2Q,EAAAA,YAKF3Q,KAAQ8T,EAAAA,eADR9T,KAA0B+S,EAAAA,QAA1B5Q,aAAAnC,KAkCeoC,EAAAA,WAlCfpC,KAkC2B4Q,EAAAA,SAC3B5Q,KAAA0J,QAAAvH,aAAAnC,KAAeoC,EAAAA,WAAfpC,KAA2B2J,EAAAA,OAA3BzJ,MAAkCsJ,QAClCxJ,KAA+CkD,OAA/Cf,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsB0J,EAAAA,kBAvDtBgJ,GAyCoCrQ,IA4E9B3D,IACJ,UACA,aAAc,aAAc,aAAc,aAAc,aACxD,gBAAiB,gBAAiB,gBAAiB,gBACnD,gBAAiB,gBAAiB,gBAAiB,iGAgBnD+C,GAAF/C,OAAqBA,KAzIrB,MAwI2CgC,GAA3CmT,EAAAjT,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAXK,yOAWK9D,OAAtBA,OAvIAmV,GAwI2CnB,ICxHrCpT,IACJgT,GACA3B,GACAkD,GACAhE,gCApBF,sBA6BA/P,KAACC,EAAAA,SAADC,OACEC,SAAUC,IACVE,aAAkBd,GAApBe,QACEC,QAAahB,GAAfe,YAhCAkJ,KCOauK,GAAS,SACTC,IAAiB,MAAO,SAAU,cAAe,6FCR9D,MAmBwCrT,GAAxCsT,EAAApT,GACEoT,EAAFnT,UAAAC,YAAE,SAAYC,GACV,MAAOkT,GAAelT,mBAH1BjB,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAlBzB8S,GAmBwC7S,IAMlCzC,IACJ,WAAY,cAAe,cAAe,cAC1C,cAAe,cAAe,iBAAkB,iBAChD,iBAAkB,iBAAkB,iBAAkB,iBACtD,iBAAkB,iCAoBlB,QAAFwV,GAAwB/P,EACAC,EAGY9C,EACZE,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUwC,EAAO7C,EAAc8C,EAAY5C,IAN3CG,WAAwBF,GAAxB0C,MAAwBA,EACA1C,EAAxB2C,WAAwBA,EAGY3C,EAApCH,aAAoCA,EACZG,EAAxBD,QAAwBA,EAPtBC,EAAFG,cAA4B,SAY1BH,EAAFI,WAAyBsS,GAHrB1S,EAAKM,SAxDT,MA6CqCrB,GAArCwT,EAAAtT,uCAtCAd,KAAmBkC,EAAAA,aAKnBlC,KAAEqC,KAyCFrC,KAAkDkU,GAAlD/R,aAAAnC,KAAeoC,EAAAA,aAxCfpC,KAAEsC,MAbF8R,GA6CqC7R,IAArC9C,GAAA,SAAAqB,oEAmBEa,GAAF/C,OAAqBA,KAhErB,MA+D4CgC,GAA5CnB,EAAAqB,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SA/BK,uPA+BK9D,OAAtBA,OA9DAa,GA+D4C2U,IAItCC,GAA4C,GAAIrV,KC/BhDsV,IACJC,cAAe,KACfC,eAAgB,KAChBC,aAAc,KACdC,gBAAiB,qBAKjB,QAAFC,GAAsBC,GAApB,GAAFjT,GACIb,EADJc,KAAAC,OAAAA,WAAsBF,GAAtBiT,QAAsBA,IA7CtB,MA4C2ChU,GAA3C+T,EAAA7T,GAKE6T,EAAF5T,UAAAC,YAAE,SAAY6T,EAAkB/R,GAC5B,MAAI+R,GAASvO,SAASwO,KACpBD,EAAWA,EAAStU,MAAM,EAAGsU,EAASrO,QAAQsO,KAGvCC,EAAgBF,EAAU/R,EAAOkS,qBAM5CL,EAAF5T,UAAAkU,WAAE,SAAWJ,EAAkBK,EAA0BpS,GACrD,GAAM6L,GAAQ7L,EAAO6L,KACrB,IAAIkG,EAASvO,SAASwO,IAAiB,CACrCD,EAAWA,EAAStU,MAAM,EAAGsU,EAASrO,QAAQsO,IAE9C,IAAMK,GAAgBC,EAAiBP,EAAU/R,EAAOkS,eACxDnT,MAAK+S,QAAQS,qBAAqBF,EAAerS,EAAO6L,WACnD,CACL,GAAM2G,GAAW3G,EAAM4G,MAIjBC,EAASC,EAAYZ,EAAU/R,EACrCjB,MAAK+S,QAAQS,qBAAqBG,EAAQ7G,GAG1C9M,KAAK+S,QAAQS,qBAAqBf,IAAmBgB,qBAjC3DtV,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,+CAtBzBpB,KAAEqC,uHArBFsS,GA4C2CtT,IAqCrCzC,IACJ,cAAe,iBAAkB,iBAAkB,iBACnD,iBAAkB,iBAAkB,oBAAqB,oBACzD,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oCA8BrB,QAAF8W,GAAwBrR,EACAsR,EACAX,EACA1Q,EAGY9C,EACZE,GAPtB,GAAFC,GAQIb,EARJc,KAAAC,KAQUwC,EAAO7C,EAAc8C,EAAY5C,IAR3CG,IAAwBF,GAAxB0C,MAAwBA,EACA1C,EAAxBgU,KAAwBA,EACAhU,EAAxBqT,eAAwBA,EACArT,EAAxB2C,WAAwBA,EAGY3C,EAApCH,aAAoCA,EACZG,EAAxBD,QAAwBA,EAvBtBC,EAAFiU,OAAqB,MACnBjU,EAAFG,cAA4B,aAC1BH,EAAFkU,gBAA8B,GAAItL,GAAAA,OAuB9B,IAAMmB,IAAiB/J,EAAKqT,eAAec,OAAQnU,EAAKkU,gBAAgBpJ,sBACxE9K,GAAKM,KAAKyJ,GACV/J,EAAKD,QACF8K,WAAW7K,EAAKgO,cAAe,UAC/BjD,KAAKwF,EAAAA,UAAUvQ,EAAKwQ,iBACpBjE,UAAUvM,EAAKoU,eAAe9G,KAAKtN,MAjI1C,MAkGwCf,GAAxC8U,EAAA5U,GAMEoC,OAAFC,eAAgBuS,EAAhB3U,UAAA,qBAAE,WAKE,IAAK,GAJCiV,GAAMnU,KAAK8N,cAAc2B,SACzB2E,KAGG5H,EAAI2H,EAAInI,OAAQQ,KACvB4H,EAAO5H,GAAK2H,EAAI3H,EAElB,OAAO4H,oCAwBTP,EAAF3U,UAAAmV,mBAAE,WACErU,KAAKsU,uBACLtU,KAAK6L,iBAGPgI,EAAF3U,UAAAqV,YAAE,WACEtV,EAAJC,UAAUqV,YAAVxU,KAAAC,MACQA,KAAKwU,UACPxU,KAAKwU,SAASC,cAWRZ,EAAZ3U,UAAAgV,eAAE,SAAyBQ,GAAzB,GAAF5U,GAAAE,KACU+T,EAAiBW,EAAQhT,MAEzBiC,EAAYoQ,EAAOjR,MAAM,IAC/B9C,MAAK+T,OAASpQ,EAAU,GACnByO,GAAcuC,KAAK,SAAAC,GAAK,MAAAA,KAAM9U,EAAKiU,WACtC/T,KAAK+T,OAAS,OAEhB/T,KAAK6L,iBAMGgI,EAAZ3U,UAAAuC,gBAAE,SAA0BC,GAA1B,GAAF5B,GAAAE,KAEU8M,EAAQ9M,KAAK6U,cAChB/J,OAAO,SAAAE,GAAM,MAAgB,KAAhBA,EAAG8J,UAAkBhV,EAAKiV,YAAY/J,KACnD3B,KAAK,SAAC2L,EAAGC,GACR,GAAMC,IAAUpV,EAAKF,OAAO4Q,YAAYwE,EAAG,SACrCG,GAAUrV,EAAKF,OAAO4Q,YAAYyE,EAAG,QAC3C,OAAIG,OAAMF,IAAWE,MAAMD,IAAWD,IAAWC,EACxC,EAEAD,EAASC,EAAS,GAAK,GAIpC,IAAIrI,EAAMd,OAAS,EAAG,CACpB,GAAMmH,GAAiBnT,KAAKmT,eAAezR,MACrCqS,EAAS/T,KAAK+T,MACL,SAAXA,GAAuC,QAAnBZ,EACtBnT,KAAKE,WAAamV,GACE,QAAXtB,GAAuC,QAAnBZ,EAC7BnT,KAAKE,WAAaoV,GACE,WAAXvB,GAA0C,QAAnBZ,EAChCnT,KAAKE,WAAaqV,GACE,WAAXxB,GAA0C,QAAnBZ,IAChCnT,KAAKE,WAAasV,IAEpBxV,KAAK6B,UAAUH,GAAQyR,eAA7BA,EAA6CrG,MAA7CA,EAAoDiH,OAApDA,MAKYF,EAAZ3U,UAAA6V,YAAE,SAAsBU,GACpB,GAAM/T,GAAQ1B,KAAKH,QAAQoK,SAASwL,EAAQ,YAC5C,QAAiB,IAAV/T,OACM2I,KAAV3I,GAA0E,SAAnD1B,KAAKyC,WAAW+N,YAAYiF,EAAQ,YAGtD5B,EAAZ3U,UAAAoV,qBAAE,WAAA,GAAFxU,GAAAE,IACIA,MAAK8T,KAAK4B,kBAAkB,WACM,mBAArBC,oBACT7V,EAAK0U,SAAW,GAAImB,kBAAiB,SAACC,GACpC,GAAMC,GAAmB,SAACC,GACxB,MAAQA,GAAGC,YAAcD,EAAGC,WAAW/J,OAAS,GAC7C8J,EAAGE,cAAgBF,EAAGE,aAAahK,OAAS,EAI7C4J,GAAUK,KAAKJ,IACjB/V,EAAKkU,gBAAgBxI,SAGzB1L,EAAK0U,SAASzH,QAAQjN,EAAKgO,eAAgBoI,WAAW,4CAnN9D/X,KAAEkC,EAAAA,aAGFlC,KAAEgY,EAAAA,SAIFhY,KAAQiY,EAAAA,iBAKRjY,KAAEqC,KAoGFrC,KAAkD2U,GAAlDxS,aAAAnC,KAAeoC,EAAAA,aAnGfpC,KAAEsC,MAtBFoT,GAkGwCnT,IAAxC7C,GAAA,SAAAoB,oEAoIEa,GAAF/C,OAAqBA,KAtOrB,MAqO+CgC,GAA/ClB,EAAAoB,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SA7IK,iSA6IK9D,OAAtBA,OApOAc,GAqO+CgW,IAIzCwB,GAAqD,GAAIlY,KACzDoY,GAAwD,GAAIpY,KAC5DmY,GAAqD,GAAInY,KACzDqY,GAAwD,GAAIrY,KAE5D8V,GAAiB,uBC/MrB,QAAFoD,GAA+CjH,GAA7C,GAAFtP,GACIb,EADJc,KAAAC,OAAAA,WAA+CF,GAA/CsP,aAA+CA,IA/B/C,MA8BsCrQ,GAAtCsX,EAAApX,GAIEoX,EAAFnX,UAAAC,YAAE,SAAYC,EAAe6B,GACpB,GAATyC,GAAAtE,EAAA0D,MAAA,KAASwT,EAAT5S,EAAA,GAAe6S,EAAf7S,EAAA,GAAuB8S,EAAvB9S,EAAAhF,MAAA,GACQ+X,EAAQD,EAAWpT,KAAK,KAGtBO,EAAa1C,EAAO0C,UAAUgB,QAAQ,WAAa,EAAK,SAAW,MAEnE+R,EAAMC,EAAiBhT,GAAa,YAAc,aAClDiT,EAAMD,EAAiBhT,GAAa,YAAc,aAElDkT,EAAUC,OAAOL,GAAO9R,QAAQ,SAAW,EAC3CoS,EAAYF,GAAsB,SAAVJ,EACxBO,EAAYF,OAAOL,GAAO9R,QAAQ,MAAQ,IAAMkS,EAChDI,EAAWH,OAAOL,GAAO9R,QAAQ,OAAS,GAAKmS,OAAOL,GAAO9R,QAAQ,QAAU,GACnFmS,OAAOL,GAAO9R,QAAQ,OAAS,GAAKmS,OAAOL,GAAO9R,QAAQ,OAAS,GACnEmS,OAAOL,GAAO9R,QAAQ,OAAS,EAE7BuS,EAAWL,GAAWI,CAE1BX,GAAgB,KAARA,EAAe,EAAIA,EAC3BC,EAAoB,KAAVA,EAAiB,EAAIA,CAK/B,IAAMY,IAAWb,IAASC,EAEtB3R,KAcE6M,GACJ2F,YAAa,KACbC,aAAc,KACdC,YAAa,KACbC,aAAc,KAEhB,QAAQd,GAAS,IACf,IAAK,GACH,GAAMe,IAA8D,IAAzCxX,KAAKoP,aAAaoI,kBAC7Cf,GAAsB,QAAd9S,EAAsB,KAAQ6T,EAAqB,gBAAkB,MAC7E,MACF,KAAK,UACL,IAAK,SACHlB,EAAO,EACPG,EAAQ,MACR,MACF,KAAK,OACHA,EAAQ,MACR,MACF,KAAK,WACHF,EAAS,EACTE,EAAQ,MACR,MACF,KAAK,OACH,KACF,KAAK,OACHH,EAAO,EACPC,EAAS,EACTE,EAAQ,MACR,MACF,SAEOS,GAAYF,GAAc5B,MAAK,KAClCqB,GAAgB,KAIJ,OAAVA,IACFS,GAAU,GAGE,QAAVT,IACFA,EAAQ,MAKR7R,EADEiS,EACIY,EAAahG,GACjBiG,YAAapB,EACbqB,cAAepB,EACfqB,aAAcV,EAAUT,EAAQ,SAG5BgB,EAAahG,GACjBoG,KAAWvB,EAAvB,IAA+BC,EAA/B,KAAyCW,EAAUT,EAAQ,UAiDvD,MA1CM7R,GAAU,MAAKA,EAAI,eAErBA,EADEiS,EACIY,EAAahG,GACjBiG,YAAapB,EACbqB,cAAepB,EACfqB,aAAcnB,IAGVgB,EAAahG,GACjBoG,KAAWvB,EAArB,IAA6BC,EAA7B,IAAuCE,KAMrB,OAAVA,GAA4B,QAAVA,GAA6B,kBAAVA,GAAuC,SAAVA,IACpE7R,EAAIgS,GAAOO,GAAYD,GAAWZ,EAAQG,EAAQ,KAClD7R,EAAI8R,GAAOS,IAAaJ,GAAaR,EAAUE,EAAQ,MAIpD7R,EAAIgS,IAAShS,EAAI8R,GAchBzV,EAAO6W,UACTlT,EAAIiS,EAAU,aAAe,QAAUjS,EAAI8R,GACxCG,EAAUjS,EAAI8R,GAAUJ,EAAnC,IAA2CC,EAA3C,IAAqD3R,EAAI8R,GAC9CG,EAAUjS,EAAIgS,GAAUN,EAAnC,IAA2CC,EAA3C,IAAqD3R,EAAIgS,IAfjDhS,EADEiS,EACIY,EAAahG,GACjBiG,YAAapB,EACbqB,cAAepB,EACfqB,aAAcnB,IAGVgB,EAAahG,GACjBoG,KAAWvB,EAArB,IAA6BC,EAA7B,IAAuCE,IAY5BgB,EAAa7S,GAAMmT,aAAc,+BArJ5C5Z,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,+CAEzBpB,SAAAkM,GAAA/J,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsBgJ,0HA/BtBgP,GA8BsC7W,IAwJhCzC,IACJ,SAAU,YAAa,YAAa,YACpC,YAAa,YAAa,eAAgB,eAC1C,eAAgB,eAAgB,eAAgB,eAChD,eAAgB,+BAuChB,QAAFib,GAAwBxV,EACAC,EACuB2M,EACvBzP,EACAE,GAJtB,GAAFC,GAKIb,EALJc,KAAAC,KAKUwC,EAAO7C,EAAc8C,EAAY5C,IAL3CG,WAAwBF,GAAxB0C,MAAwBA,EACA1C,EAAxB2C,WAAwBA,EACuB3C,EAA/CsP,aAA+CA,EACvBtP,EAAxBH,aAAwBA,EACAG,EAAxBD,QAAwBA,EA1BtBC,EAAFG,cAA4B,OAC1BH,EAAF6D,UAAwB,GACtB7D,EAAFmY,MAAmB,EAiBjBnY,EAAFoY,SAAuB,IACrBpY,EAAFqY,WAAyB,IAQrBrY,EAAKM,OACDN,EAAKsY,eACPtY,EAAKD,QAAQ8K,WAAW7K,EAAKsY,cAAe,UACzCvN,KAAKwF,EAAAA,UAAUvQ,EAAKwQ,iBACpBjE,UAAUvM,EAAKoU,eAAe9G,KAAKtN,MA3O5C,MAyMmCf,GAAnCiZ,EAAA/Y,GAOEoC,OAAFC,eACM0W,EADN9Y,UAAA,cAAE,WACuB,MAAOc,MAAKmY,gBACnC,SAAWzW,GACT1B,KAAKmY,WAAazW,GAAS,IAC3B1B,KAAKqY,iDAGPhX,OAAFC,eACM0W,EADN9Y,UAAA,YAAE,WACqB,MAAOc,MAAKkY,cACjC,SAASxW,GACP1B,KAAKkY,SAAWxW,GAAS,IACzB1B,KAAKqY,iDAwBGL,EAAZ9Y,UAAAgV,eAAE,SAAyBQ,GACvB,GAAMX,GAAiBW,EAAQhT,MACzB4W,EAAcvE,EAAOjR,MAAM,IACjC9C,MAAK2D,UAAY2U,EAAY,GAC7BtY,KAAKiY,SAA0B5N,KAAnBiO,EAAY,IAAuC,SAAnBA,EAAY,GACxDtY,KAAK6L,iBAIGmM,EAAZ9Y,UAAAuC,gBAAE,SAA0BC,GACxB,GAAM6O,IAAwD,IAAtCvQ,KAAKoP,aAAamB,eACrCvQ,MAAK2D,YACR3D,KAAK2D,UAAY3D,KAAKuY,qBAAqBvY,KAAkB,cAAGuQ,GAElE,IAAM5M,GAAY3D,KAAK2D,UACjB6U,EAAe7U,EAAU8U,WAAW,OACpCX,EAAU9X,KAAKiY,IACjBO,IAAgBV,EAClB9X,KAAKE,WAAawY,GACTF,IAAiBV,EAC1B9X,KAAKE,WAAayY,IACRH,GAAgBV,EAC1B9X,KAAKE,WAAa0Y,GACRJ,GAAiBV,IAC3B9X,KAAKE,WAAa2Y,GAEpB,IAAMpC,GAAQK,OAAOpV,GAAOoP,QAAQ,IAAK,IACnCgI,EAAQC,EAActC,EAAOzW,KAAKkY,SAAUlY,KAAKmY,WACvDnY,MAAK6B,UAAUiX,EAAM1V,KAAK,MAAOO,UAArCA,EAAgDmU,QAAhDA,KAIYE,EAAZ9Y,UAAAmZ,cAAE,WACE,GAAMW,GAAiBhZ,KAAKgZ,cAC5B,QAAuB3O,KAAnB2O,EAA8B,CAChC,GAAMF,GAAQC,EAAcC,EAAgBhZ,KAAKkY,SAAUlY,KAAKmY,WAChEnY,MAAKH,QAAQ6K,cAAc1K,KAAK8N,cAAe9N,KAAKC,cAAe6Y,EAAM1V,KAAK,4CAhRpFjF,KAAmBkC,EAAAA,aAKnBlC,KAAEqC,KAuNFrC,SAAAkM,GAAA/J,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsBgJ,QACtBlJ,KAAsCkY,KApNtClY,KAAEsC,wBAgMF8V,SAAApY,KAAG2D,EAAAA,MAAHzD,MAAS,cAOTiY,OAAAnY,KAAG2D,EAAAA,MAAHzD,MAAS,aAvNT2Z,GAyMmCtX,IAAnCxC,GAAA,SAAAe,oEAqFEa,GAAF/C,OAAqBA,KA9RrB,MA6R0CgC,GAA1Cb,EAAAe,kBADAd,KAACyC,EAAAA,UAADvC,OAAYtB,OAAZA,GAAoB8D,SAhGH,+NA5LjB3C,GA6R0C8Z,IAIpCW,GAA6C,GAAIxb,KACjD0b,GAAgD,GAAI1b,KACpDub,GAAiD,GAAIvb,KACrDyb,GAAoD,GAAIzb,gFCpS9D,MAiB2C4B,GAA3Cka,EAAAha,GACEga,EAAF/Z,UAAAC,YAAE,SAAYuC,GACV,OAAQwX,MAAQxX,GAASyX,SAASzX,EAAO,KAAQ,oBAHrDvD,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAhBzB0Z,GAiB2CzZ,IAMrCzC,IACJ,cAAe,iBAAkB,iBAAkB,iBACnD,iBAAkB,iBAAkB,oBAAqB,oBACzD,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oCAkBrB,QAAFqc,GAAwB5W,EACAC,EAGY9C,EACZE,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUwC,EAAO7C,EAAc8C,EAAY5C,IAN3CG,WAAwBF,GAAxB0C,MAAwBA,EACA1C,EAAxB2C,WAAwBA,EAGY3C,EAApCH,aAAoCA,EACZG,EAAxBD,QAAwBA,EAPtBC,EAAFG,cAA4B,aAY1BH,EAAFI,WAAyBmZ,GAHrBvZ,EAAKM,SApDT,MAyCwCrB,GAAxCqa,EAAAna,uCAlCAd,KAAmBkC,EAAAA,aAKnBlC,KAAEqC,KAqCFrC,KAAkD8a,GAAlD3Y,aAAAnC,KAAeoC,EAAAA,aApCfpC,KAAEsC,MAbF2Y,GAyCwC1Y,IAiBlC2Y,GAA+C,GAAIlc,qFAIvD2C,GAAF/C,OAAqBA,KA9DrB,MA6D+CgC,GAA/CjB,EAAAmB,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SA/BK,iSA+BK9D,OAAtBA,OA5DAe,GA6D+Csb,+EC7D/C,MAgC4Cra,GAA5Cua,EAAAra,GACEqa,EAAFpa,UAAAC,YAAE,SAAYoa,EAAgBtY,QACX,MAAXsY,IACFA,EAAS,IAEX,IAAMvC,GAAYF,OAAOyC,GAAQ5U,QAAQ,MAAQ,CACpCmS,QAAOyC,GAAQ5U,QAAQ,OAAS,GAC/BqS,GAAc5B,OAAOmE,KACjCA,GAAkB,IAEpB,IAAMC,GAAsBvY,EAAOwY,MAAQ,eAAiB,aAI5D,OAHgC9C,GAAiB1V,EAAO8S,SAA5DrQ,KACOA,EAAC8V,GAAsB,GAAGD,EADjC7V,IAC8CkP,aAAc,GAAG2G,mBAb/Dpb,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GA/BzB+Z,GAgC4C9Z,IAkBtCzC,IACJ,eAAgB,kBAAmB,kBAAmB,kBACtD,kBAAmB,kBAAmB,qBAAsB,qBAC5D,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qCAgBtB,QAAF2c,GAAwBlX,EACA2Q,EAGYxT,EACZE,EACAD,GANtB,GAAFE,GAOIb,EAPJc,KAAAC,KAOUwC,EAAO7C,EAAcC,EAAQC,IAPvCG,WAAwBF,GAAxB0C,MAAwBA,EACA1C,EAAxBqT,eAAwBA,EAGYrT,EAApCH,aAAoCA,EACZG,EAAxBD,QAAwBA,EACAC,EAAxBF,OAAwBA,EARtBE,EAAFG,cAA4B,cAUxBH,EAAKM,MAAMN,EAAKqT,eAAec,SAE3BnU,EAAKsY,eACPtY,EAAKD,QACF8K,WAAW7K,EAAKsY,cAAe,cAC/BvN,KAAKwF,EAAAA,UAAUvQ,EAAKwQ,iBACpBjE,UAAUvM,EAAK+L,cAAcuB,KAAKtN,MApF3C,MAmEyCf,GAAzC2a,EAAAza,GA8BYya,EAAZxa,UAAAuC,gBAAE,SAA0BC,OAA5B,KAAAA,IAA4BA,EAA5B,GAEI,IAAMqS,GAAS/T,KAAKuY,qBAAqBvY,KAAkB,eAAG,GACxDyZ,EAAsC,QAA9BzZ,KAAKmT,eAAezR,KACnB,SAAXqS,GAAoB0F,EACtBzZ,KAAKE,WAAayZ,GACE,QAAX5F,GAAqB0F,EAEV,WAAX1F,GAAuB0F,EAChCzZ,KAAKE,WAAa0Z,GACE,WAAX7F,GAAwB0F,IACjCzZ,KAAKE,WAAa2Z,IAJlB7Z,KAAKE,WAAa4Z,GAMpB9Z,KAAK6B,UAAUH,EAAQ,IAAKqS,OAAhCA,EAAwC0F,MAAxCA,yCArGAtb,KAAEkC,EAAAA,aAKFlC,KAAQiY,EAAAA,iBA4DRjY,KAAkDmb,GAAlDhZ,aAAAnC,KAAeoC,EAAAA,aA1DfpC,KAAEsC,KAIFtC,KAAEqC,MApBFkZ,GAmEyChZ,IAAzC3C,GAAA,SAAAkB,oEAiDEa,GAAF/C,OAAqBA,KApHrB,MAmHgDgC,GAAhDhB,EAAAkB,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SA1DK,+SA0DK9D,OAAtBA,OAlHAgB,GAmHgD2b,IAI1CC,GAAsD,GAAIxc,KAC1Dyc,GAAyD,GAAIzc,KAC7D2c,GAAsD,GAAI3c,KAC1D0c,GAAyD,GAAI1c,gFC1HnE,MAiB2C4B,GAA3Cgb,EAAA9a,GACE8a,EAAF7a,UAAAC,YAAE,SAAYC,GACVA,EAAQA,GAAS,SACjB,IAAM+R,KAGN,QAAQ/R,GACN,IAAK,QACH+R,EAAO,cAAgB,YACvB,MACF,KAAK,MACHA,EAAO,cAAgB,UACvB,MACF,SACEA,EAAO,cAAgB/R,EAI3B,MAAO+R,mBAnBXhT,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAhBzBwa,GAiB2Cva,IAsBrCzC,IACJ,cAAe,iBAAkB,iBAAkB,iBACnD,iBAAkB,iBAAkB,oBAAqB,oBACzD,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oCAkBrB,QAAFid,GAAwBxX,EACAC,EAGY9C,EACZE,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUwC,EAAO7C,EAAc8C,EAAY5C,IAN3CG,WAAwBF,GAAxB0C,MAAwBA,EACA1C,EAAxB2C,WAAwBA,EAGY3C,EAApCH,aAAoCA,EACZG,EAAxBD,QAAwBA,EAPtBC,EAAFG,cAA4B,aAY1BH,EAAFI,WAAyB+Z,GAHrBna,EAAKM,SApET,MAyDwCrB,GAAxCib,EAAA/a,uCAlDAd,KAAmBkC,EAAAA,aAMnBlC,KAAEqC,KAoDFrC,KAAkD4b,GAAlDzZ,aAAAnC,KAAeoC,EAAAA,aAxDfpC,KAAEsC,MATFuZ,GAyDwCtZ,IAiBlCuZ,GAA+C,GAAI9c,qFAIvD2C,GAAF/C,OAAqBA,KA9ErB,MA6E+CgC,GAA/Cd,EAAAgB,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SA/BK,iSA+BK9D,OAAtBA,OA5EAkB,GA6E+C+b,IC7DzCE,IACJC,OAAU,EACVC,MAAS,OACTC,OAAU,OACV/C,YAAa,OACbC,aAAc,mFArBhB,MAyB0CxY,GAA1Cub,EAAArb,GACEqb,EAAFpb,UAAAC,YAAE,SAAYob,GACV,MAAOL,oBAHX/b,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAxBzB+a,GAyB0C9a,mBAcxC,QAAFxB,GAAwBwE,EACAC,EACA9C,EACAE,GAHtB,GAAFC,GAIIb,EAJJc,KAAAC,KAIUwC,EAAO7C,EAAc8C,EAAY5C,IAJ3CG,WAAwBF,GAAxB0C,MAAwBA,EACA1C,EAAxB2C,WAAwBA,EACA3C,EAAxBH,aAAwBA,EACAG,EAAxBD,QAAwBA,EAKtBC,EAAFI,WAAyBsa,GAHrB1a,EAAK+B,UAAU,MA5CnB,MAsCuC9C,GAAvCf,EAAAiB,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAAU,iEA9BtB1C,KAAmBkC,EAAAA,aAKnBlC,KAAEqC,KA6BFrC,KAAsCmc,KA5BtCnc,KAAEsC,MAbFzC,GAsCuC0C,IAYjC8Z,GAA8C,GAAIrd,gF/BlDxD,MA2B6C4B,GAA7C0b,EAAAxb,GACEwb,EAAFvb,UAAAC,YAAE,SAAYub,EAAezZ,GACzB,GAAM2D,MAAVlB,EAAAgX,EAAA5X,MAAA,KAAsC6X,EAAtCjX,EAAA,GAAgDkX,EAAhDlX,EAAA,EAGI,QAAQiX,GACN,IAAK,SACH/V,EAAI,mBAAqB,QACzB,MACF,KAAK,eACHA,EAAI,mBAAqB,cACzB,MACF,KAAK,gBACHA,EAAI,mBAAqB,eACzB,MACF,KAAK,eACHA,EAAI,mBAAqB,cACzB,MACF,KAAK,MACL,IAAK,WACHA,EAAI,mBAAqB,UACzB,MACF,KAAK,QACL,IAAK,aACL,QACEA,EAAI,mBAAqB,aAK7B,OAAQgW,GACN,IAAK,QACL,IAAK,aACHhW,EAAI,eAAiBA,EAAI,iBAAmB,YAC5C,MACF,KAAK,SACHA,EAAI,eAAiBA,EAAI,iBAAmB,QAC5C,MACF,KAAK,MACL,IAAK,WACHA,EAAI,eAAiBA,EAAI,iBAAmB,UAC5C,MACF,KAAK,gBACHA,EAAI,iBAAmB,gBACvBA,EAAI,eAAiB,SACrB,MACF,KAAK,eACHA,EAAI,iBAAmB,eACvBA,EAAI,eAAiB,SACrB,MACF,KAAK,WACHA,EAAI,iBAAmB,UACvBA,EAAI,eAAiB,UACrB,MACF,KAAK,UACL,QACEA,EAAI,eAAiBA,EAAI,iBAAmB,UAIhD,MAAO6S,GAAa7S,GAClB1B,QAAYjC,EAAOC,OAAS,cAAgB,OAC5C2Z,iBAAmB5Z,EAAO8S,OAC1BgE,aAAe,aACfX,YAA2B,YAAdwD,EACVjE,EAAiB1V,EAAO8S,QAAmB,KAAT,OAAgB,KACrDsD,aAA4B,YAAduD,GACZjE,EAAiB1V,EAAO8S,QAAU,OAAgB,uBApE1D5V,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GA1BzBkb,GA2B6Cjb,IAwEvCzC,IACJ,gBAAiB,mBAAoB,mBAAoB,mBACzD,mBAAoB,mBAAoB,sBAAuB,sBAC/D,sBAAuB,sBAAuB,sBAAuB,sBACrE,sBAAuB,sCAuBvB,QAAFE,GAAwBuF,EACAC,EAGY9C,EACZE,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUwC,EAAO7C,EAAc8C,EAAY5C,IAN3CG,WAAwBF,GAAxB0C,MAAwBA,EACA1C,EAAxB2C,WAAwBA,EAGY3C,EAApCH,aAAoCA,EACZG,EAAxBD,QAAwBA,EATtBC,EAAFG,cAA4B,eAC1BH,EAAFiU,OAAqB,MACnBjU,EAAFoB,QAAqB,EASjBpB,EAAKM,OACLN,EAAKD,QAAQ8K,WAAW7K,EAAKgO,cAAe,UACzCjD,KAAKwF,EAAAA,UAAUvQ,EAAKwQ,iBACpBjE,UAAUvM,EAAKoU,eAAe9G,KAAKtN,MAxI1C,MAyH0Cf,GAA1C9B,EAAAgC,GAyBYhC,EAAZiC,UAAAuC,gBAAE,SAA0BC,GACxB,GAAMqS,GAAS/T,KAAK+T,QAAU,MACxB7S,EAASlB,KAAKkB,MACL,SAAX6S,GAAoB7S,EACtBlB,KAAKE,WAAa3C,GACE,QAAXwW,GAAqB7S,EAEV,gBAAX6S,GAA4B7S,EACrClB,KAAKE,WAAazC,GACE,gBAAXsW,GAA6B7S,EAElB,WAAX6S,GAAuB7S,EAChClB,KAAKE,WAAa1C,GACE,WAAXuW,GAAwB7S,EAEb,mBAAX6S,GAA+B7S,EACxClB,KAAKE,WAAaxC,GACE,mBAAXqW,GAAgC7S,IACzClB,KAAKE,WAAa5C,IAJlB0C,KAAKE,WAAa9C,GAJlB4C,KAAKE,WAAa7C,GAJlB2C,KAAKE,WAAahD,GAcpB8C,KAAK6B,UAAUH,GAAQqS,OAA3BA,EAAmC7S,OAAnCA,KAMYjE,EAAZiC,UAAAgV,eAAE,SAAyBQ,GAAzB,GAAF5U,GAAAE,KACU8a,EAAuBpG,EAAQhT,MAAMoB,MAAM,IACjD9C,MAAK+T,OAAS+G,EAAW,GACzB9a,KAAKkB,OAASwT,EAAQhT,MAAMqZ,SAAS,UAChC3I,GAAcuC,KAAK,SAAAC,GAAK,MAAAA,KAAM9U,EAAKiU,WACtC/T,KAAK+T,OAAS,OAEhB/T,KAAK6L,qDA5KT1N,KAAmBkC,EAAAA,aAKnBlC,KAAEqC,KAsHFrC,KAAkDsc,GAAlDna,aAAAnC,KAAeoC,EAAAA,aArHfpC,KAAEsC,MAbFxD,GAyH0CyD,IAA1C1D,GAAA,SAAAiC,oEAgEEa,GAAF/C,OAAqBA,KAzLrB,MAwLiDgC,GAAjD/B,EAAAiC,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SA9EK;sUA8EK9D,OAAtBA,OAvLAC,GAwLiDC,IAI3CC,GAA2D,GAAIC,KAC/DC,GAAyD,GAAID,KAC7DE,GAA8D,GAAIF,KAClEG,GAA4D,GAAIH,KAChEI,GAAiE,GAAIJ,KACrEK,GAA+D,GAAIL,KACnEM,GAAoE,GAAIN,KACxEO,GAAkE,GAAIP,KC9KtEQ,IACJC,GACAC,GACAb,GACAc,GACAC,GACAC,GACAC,GACAC,gCA7BF,sBAsCAC,KAACC,EAAAA,SAADC,OACEC,SAAUC,GAAYC,EAAAA,YACtBC,aAAkBd,GAApBe,QACEC,QAAahB,GAAfe,YAzCAE,KCgBMC,GAAc,UACdC,GAAc,qFAjBpB,MAoB2CC,GAA3CC,EAAAC,GACED,EAAFE,UAAAC,YAAE,SAAYC,GACV,MAAOC,GAASD,GAASP,oBAH7BV,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAnBzBP,GAoB2CQ,IAA3CC,GAAA,SAAAR,GAUE,QAAFQ,GAAwBC,EAGYC,EACZC,EACAC,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUN,EAAYC,EAAcC,EAAQC,IAN5CG,WAAwBF,GAAxBJ,WAAwBA,EAGYI,EAApCH,aAAoCA,EACZG,EAAxBF,OAAwBA,EACAE,EAAxBD,QAAwBA,EAPtBC,EAAFG,cAA4B,aAY1BH,EAAFI,WAAyBC,GAHrBL,EAAKM,SArCT,MA0BwCrB,GAAxCU,EAAAR,uCAnBAd,KAAmBkC,EAAAA,aA0BnBlC,KAAkDa,GAAlDsB,aAAAnC,KAAeoC,EAAAA,aApBfpC,KAAEqC,KAJFrC,KAAEsC,MATFhB,GA0BwCiB,IAiBlCP,GAA2C,GAAIhD,KAE/CJ,IACJ,cACA,iBAAkB,iBAAkB,iBAAkB,iBAAkB,iBACxE,oBAAqB,oBAAqB,oBAAqB,oBAC/D,oBAAqB,oBAAqB,oBAAqB,qGAoB/D+C,GAAF/C,OAAqBA,KArErB,MAoE+CgC,GAA/C4B,EAAA1B,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAfK,gSAeK9D,OAAtBA,OAnEA4D,GAoE+ClB,ICnDzCqB,GAAe,QACfC,GAAgB,qFAlBtB,MAyBkDhC,GAAlDiC,EAAA/B,GACE+B,EAAF9B,UAAAC,YAAE,SAAYC,EAAe6B,GACzB,MAAO5B,GAASD,GAAY0B,GAAhC,IAAgDC,GAAiBE,EAAOC,wBAHxE/C,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAxBzByB,GAyBkDxB,IAAlD2B,GAAA,SAAAlC,GAeE,QAAFkC,GAAwBzB,EAGYC,EACZC,EACAC,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUN,EAAYC,EAAcC,EAAQC,IAN5CG,WAAwBF,GAAxBJ,WAAwBA,EAGYI,EAApCH,aAAoCA,EACZG,EAAxBF,OAAwBA,EACAE,EAAxBD,QAAwBA,EAZtBC,EAAFG,cAA4B,qBAK1BH,EAAFsB,SAAsB,EASlBtB,EAAKM,SA/CT,MA+B+CrB,GAA/CoC,EAAAlC,GAIEoC,OAAFC,eACMH,EADNjC,UAAA,cAAE,WACwB,MAAOc,MAAKoB,aACpC,SAAWG,GAAgBvB,KAAKoB,QAAUI,EAAAA,sBAAsBD,oCAiBtDJ,EAAZjC,UAAAuC,gBAAE,SAA0BC,GACxB1B,KAAKE,WAAaF,KAAKkB,OAASS,GAA0BC,GAC1D5B,KAAK6B,UAAUH,GAAQR,OAAQlB,KAAKkB,8CAjDxC/C,KAAmBkC,EAAAA,aAoCnBlC,KAAkD6C,GAAlDV,aAAAnC,KAAeoC,EAAAA,aAjCfpC,KAAEqC,KAGFrC,KAAEsC,wBAsBFS,SAAA/C,KAAG2D,EAAAA,MAAHzD,MAAS,eAnCT8C,GA+B+CT,IA6BzCkB,GAAkD,GAAIzE,KACtDwE,GAAwD,GAAIxE,KAE5DJ,IACJ,iBACA,oBAAqB,oBAAqB,oBAC1C,oBAAqB,oBAAqB,uBAC1C,uBAAwB,uBAAwB,uBAChD,uBAAwB,uBAAwB,uBAChD,wGAmBA+C,GAAF/C,OAAqBA,KAxFrB,MAuFsDgC,GAAtDgD,EAAA9C,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAfK,iVAeK9D,OAAtBA,OAtFAgF,GAuFsDZ,ICtEhDL,GAAe,QACfC,GAAgB,qFAlBtB,MAyB+ChC,GAA/CiD,EAAA/C,GACE+C,EAAF9C,UAAAC,YAAE,SAAYC,EAAe6B,GACzB,MAAO5B,GAASD,GAAY0B,GAAhC,IAAgDC,GAAiBE,EAAOC,wBAHxE/C,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAxBzByC,GAyB+CxC,IAA/CyC,GAAA,SAAAhD,GAeE,QAAFgD,GAAwBvC,EAGYC,EACZC,EACAC,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUN,EAAYC,EAAcC,EAAQC,IAN5CG,WAAwBF,GAAxBJ,WAAwBA,EAGYI,EAApCH,aAAoCA,EACZG,EAAxBF,OAAwBA,EACAE,EAAxBD,QAAwBA,EAZtBC,EAAFG,cAA4B,kBAK1BH,EAAFsB,SAAsB,EASlBtB,EAAKM,SA/CT,MA+B4CrB,GAA5CkD,EAAAhD,GAIEoC,OAAFC,eACMW,EADN/C,UAAA,cAAE,WACwB,MAAOc,MAAKoB,aACpC,SAAWG,GAAgBvB,KAAKoB,QAAUI,EAAAA,sBAAsBD,oCAiBtDU,EAAZ/C,UAAAuC,gBAAE,SAA0BC,GACxB1B,KAAKE,WAAaF,KAAKkB,OAASgB,GAAuBC,GACvDnC,KAAK6B,UAAUH,GAAQR,OAAQlB,KAAKkB,8CAjDxC/C,KAAmBkC,EAAAA,aAoCnBlC,KAAkD6D,GAAlD1B,aAAAnC,KAAeoC,EAAAA,aAjCfpC,KAAEqC,KAGFrC,KAAEsC,wBAsBFS,SAAA/C,KAAG2D,EAAAA,MAAHzD,MAAS,eAnCT4D,GA+B4CvB,IA6BtCyB,GAA+C,GAAIhF,KACnD+E,GAAqD,GAAI/E,KAEzDJ,IACJ,cACA,iBAAkB,iBAAkB,iBACpC,iBAAkB,iBAAkB,oBACpC,oBAAqB,oBAAqB,oBAC1C,oBAAqB,oBAAqB,oBAC1C,qGAmBA+C,GAAF/C,OAAqBA,KAxFrB,MAuFmDgC,GAAnDqD,EAAAnD,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAfK,uSAeK9D,OAAtBA,OAtFAqF,GAuFmDH,+ECvFnD,MAmB0ClD,GAA1CsD,EAAApD,GACEoD,EAAFnD,UAAAC,YAAE,SAAYC,GACV,OAAQkD,YAAalD,GALH,wBAEtBjB,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAlBzB8C,GAmB0C7C,IAA1C+C,GAAA,SAAAtD,GAUE,QAAFsD,GAAwBC,EACAC,EAGY9C,EACZE,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUwC,EAAO7C,EAAc8C,EAAY5C,IAN3CG,WAAwBF,GAAxB0C,MAAwBA,EACA1C,EAAxB2C,WAAwBA,EAGY3C,EAApCH,aAAoCA,EACZG,EAAxBD,QAAwBA,EAPtBC,EAAFG,cAA4B,YAY1BH,EAAFI,WAAyBwC,GAHrB5C,EAAKM,SApCT,MAyBuCrB,GAAvCwD,EAAAtD,uCAlBAd,KAAmBkC,EAAAA,aAGnBlC,KAAEqC,KAuBFrC,KAAkDkE,GAAlD/B,aAAAnC,KAAeoC,EAAAA,aAtBfpC,KAAEsC,MAXF8B,GAyBuC7B,IAiBjCgC,GAA8C,GAAIvF,KAElDJ,IACJ,SACA,YAAa,YAAa,YAAa,YAAa,YACpD,eAAgB,eAAgB,eAAgB,eAChD,eAAgB,eAAgB,eAAgB,gGAgBhD+C,GAAF/C,OAAqBA,KAhErB,MA+D8CgC,GAA9C4D,EAAA1D,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAZK,2NAYK9D,OAAtBA,OA9DA4F,GA+D8CJ,+EC/D9C,MAyB0CxD,GAA1C6D,EAAA3D,GACE2D,EAAF1D,UAAAC,YAAE,SAAYC,EAAe6B,GACzB,GAAM4B,IAASzD,GAVG,QAUqB0D,MATzB,KAS0CC,IAAI,SAAAC,GAAK,MAAA,IAAIA,EAAEC,OAA3E,KAEI,QACEC,QAAWjC,EAAOC,OAAS,cAAgB,OAC3CiC,sBAAuBN,EAAMO,KAAK,sBAPxCjF,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAxBzBqD,GAyB0CpD,IAA1C6D,GAAA,SAAApE,GAoBE,QAAFoE,GAAwBb,EACAC,EAGY9C,EACZE,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUwC,EAAO7C,EAAc8C,EAAY5C,IAN3CG,WAAwBF,GAAxB0C,MAAwBA,EACA1C,EAAxB2C,WAAwBA,EAGY3C,EAApCH,aAAoCA,EACZG,EAAxBD,QAAwBA,EAZtBC,EAAFG,cAA4B,aAK1BH,EAAFsB,SAAsB,EASlBtB,EAAKM,SApDT,MAoCwCrB,GAAxCsE,EAAApE,GAIEoC,OAAFC,eACM+B,EADNnE,UAAA,cAAE,WACwB,MAAOc,MAAKoB,aACpC,SAAWG,GAAgBvB,KAAKoB,QAAUI,EAAAA,sBAAsBD,oCAiBtD8B,EAAZnE,UAAAuC,gBAAE,SAA0BC,GACxB1B,KAAKE,WAAaF,KAAKkB,OAASoC,GAAmBC,GACnDvD,KAAK6B,UAAUH,GAAQR,OAAQlB,KAAKkB,8CAtDxC/C,KAAmBkC,EAAAA,aAGnBlC,KAAEqC,KAuCFrC,KAAkDyE,GAAlDtC,aAAAnC,KAAeoC,EAAAA,aArCfpC,KAAEsC,wBA4BFS,SAAA/C,KAAG2D,EAAAA,MAAHzD,MAAS,eAxCTgF,GAoCwC3C,IA6BlC6C,GAA2C,GAAIpG,KAC/CmG,GAAiD,GAAInG,KAErDJ,IACJ,UACA,aAAc,aAAc,aAAc,aAAc,aACxD,gBAAiB,gBAAiB,gBAAiB,gBACnD,gBAAiB,gBAAiB,gBAAiB,iGAiBnD+C,GAAF/C,OAAqBA,KAzFrB,MAwF+CgC,GAA/CyE,EAAAvE,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAZK,yOAYK9D,OAAtBA,OAvFAyG,GAwF+CH,+ECxF/C,MAwB0CtE,GAA1C0E,EAAAxE,GACEwE,EAAFvE,UAAAC,YAAE,SAAYC,EAAe6B,GACpB,GAATyC,IAAAtE,GATsB,WAStB0D,MAAA,KAASa,EAATD,EAAA,GAAoBE,EAApBF,EAAA,EAOI,OANkB,WAAdC,GAAwC,QAAdA,GAAqC,UAAdA,IACnDA,EAAY,OAGdC,EAAmB,UAAVA,GAAmC,UAAdD,EAAyB,SAAW,IAGhET,QAAWjC,EAAOC,OAAS,cAAgB,OAC3C2C,iBAAkBF,EAAYC,mBAZpCzF,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAvBzBkE,GAwB0CjE,IAA1CsE,GAAA,SAAA7E,GAwBE,QAAF6E,GAAwBpE,EAGYC,EACZC,EACAC,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUN,EAAYC,EAAcC,EAAQC,IAN5CG,WAAwBF,GAAxBJ,WAAwBA,EAGYI,EAApCH,aAAoCA,EACZG,EAAxBF,OAAwBA,EACAE,EAAxBD,QAAwBA,EATtBC,EAAFsB,SAAsB,EAEpBtB,EAAFG,cAA4B,YASxBH,EAAKM,SAvDT,MAwCuCrB,GAAvC+E,EAAA7E,GACEoC,OAAFC,eACMwC,EADN5E,UAAA,cAAE,WACwB,MAAOc,MAAKoB,aACpC,SAAWG,GAAgBvB,KAAKoB,QAAUI,EAAAA,sBAAsBD,oCAmBtDuC,EAAZ5E,UAAAuC,gBAAE,SAA0BC,GACxB1B,KAAKE,WAAaF,KAAKkB,OAAS6C,GAAkBC,GAClDhE,KAAK6B,UAAUH,GAAQR,OAAQlB,KAAKkB,8CAzDxC/C,KAAmBkC,EAAAA,aA4CnBlC,KAAkDsF,GAAlDnD,aAAAnC,KAAeoC,EAAAA,aAzCfpC,KAAEqC,KAEFrC,KAAEsC,wBA6BFS,SAAA/C,KAAG2D,EAAAA,MAAHzD,MAAS,eAzCTyF,GAwCuCpD,IA4BjCsD,GAA0C,GAAI7G,KAC9C4G,GAAgD,GAAI5G,KAEpDJ,IACJ,SACA,YAAa,YAAa,YAAa,YAAa,YACpD,eAAgB,eAAgB,eAAgB,eAChD,eAAgB,eAAgB,eAAgB,gGAgBhD+C,GAAF/C,OAAqBA,KA3FrB,MA0F8CgC,GAA9CkF,EAAAhF,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAZK,2NAYK9D,OAAtBA,OAzFAkH,GA0F8CH,+EC1F9C,MAmB4C/E,GAA5CmF,EAAAjF,GACEiF,EAAFhF,UAAAC,YAAE,SAAYC,GACV,OAAQ+E,cAAe/E,GALL,wBAEtBjB,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAlBzB2E,GAmB4C1E,IAA5C4E,GAAA,SAAAnF,GASE,QAAFmF,GAAwB1E,EAGYC,EACZC,EACAC,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUN,EAAYC,EAAcC,EAAQC,IAN5CG,WAAwBF,GAAxBJ,WAAwBA,EAGYI,EAApCH,aAAoCA,EACZG,EAAxBF,OAAwBA,EACAE,EAAxBD,QAAwBA,EAPtBC,EAAFG,cAA4B,cAY1BH,EAAFI,WAAyBmE,GAHrBvE,EAAKM,SAnCT,MAyByCrB,GAAzCqF,EAAAnF,uCAlBAd,KAAmBkC,EAAAA,aAwBnBlC,KAAkD+F,GAAlD5D,aAAAnC,KAAeoC,EAAAA,aArBfpC,KAAEqC,KACFrC,KAAEsC,MAXF2D,GAyByC1D,IAgBnC2D,GAA4C,GAAIlH,KAEhDJ,IACJ,WACA,cAAe,cAAe,cAAe,cAAe,cAC5D,iBAAkB,iBAAkB,iBAAkB,iBACtD,iBAAkB,iBAAkB,iBAAkB,kGAiBtD+C,GAAF/C,OAAqBA,KAhErB,MA+DgDgC,GAAhDuF,EAAArF,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAZK,uPAYK9D,OAAtBA,OA9DAuH,GA+DgDF,+EC/DhD,MAyB6CrF,GAA7CwF,EAAAtF,GACEsF,EAAFrF,UAAAC,YAAE,SAAYC,EAAe6B,GACzB7B,EAAQA,GAVU,MAWlB,IAAIoF,IAAO,CACPpF,GAAMqF,SAXS,OAYjBrF,EAAQA,EAAMsF,UAAU,EAAGtF,EAAMuF,QAZhB,MAajBH,GAAO,EAGT,IAAMI,IACJ1B,QAAWjC,EAAOC,OAAS,cAAgB,OAC3C2D,oBAAqB,GACrBC,wBAAyB,GAK3B,OAFAF,GADaJ,EAAO,oBAAsB,yBAC/BpF,EAEJwF,kBAlBXzG,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAxBzBgF,GAyB6C/E,IAA7CuF,GAAA,SAAA9F,GA6BE,QAAF8F,GAAwBrF,EAGYC,EACZC,EACAC,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUN,EAAYC,EAAcC,EAAQC,IAN5CG,WAAwBF,GAAxBJ,WAAwBA,EAGYI,EAApCH,aAAoCA,EACZG,EAAxBF,OAAwBA,EACAE,EAAxBD,QAAwBA,EAZtBC,EAAFG,cAA4B,eAK1BH,EAAFsB,SAAsB,EASlBtB,EAAKM,SA7DT,MA8C0CrB,GAA1CgG,EAAA9F,GAGEoC,OAAFC,eACMyD,EADN7F,UAAA,cAAE,WACwB,MAAOc,MAAKoB,aACpC,SAAWG,GAAgBvB,KAAKoB,QAAUI,EAAAA,sBAAsBD,oCAiBtDwD,EAAZ7F,UAAAuC,gBAAE,SAA0BC,GACxB1B,KAAKE,WAAaF,KAAKkB,OAAS8D,GAAqBC,GACrDjF,KAAK6B,UAAUH,GAAQR,OAAQlB,KAAKkB,8CA/DxC/C,KAAmBkC,EAAAA,aAkDnBlC,KAAkDoG,GAAlDjE,aAAAnC,KAAeoC,EAAAA,aA5CfpC,KAAEqC,KAJFrC,KAAEsC,wBAwCFS,SAAA/C,KAAG2D,EAAAA,MAAHzD,MAAS,eAjDT0G,GA8C0CrE,IA4BpCuE,GAA6C,GAAI9H,KACjD6H,GAAmD,GAAI7H,KAEvDJ,IACJ,YACA,eAAgB,eAAgB,eAAgB,eAAgB,eAChE,kBAAmB,kBAAmB,kBAAmB,kBACzD,kBAAmB,kBAAmB,kBAAmB,mGAkBzD+C,GAAF/C,OAAqBA,KAnGrB,MAkGiDgC,GAAjDmG,EAAAjG,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAbK,qQAaK9D,OAAtBA,OAjGAmI,GAkGiDH,+EClGjD,MAwByChG,GAAzCoG,EAAAlG,GACEkG,EAAFjG,UAAAC,YAAE,SAAYC,EAAe6B,GACzB,OACEiC,QAAWjC,EAAOC,OAAS,cAAgB,OAC3CkE,WAAYhG,GAXI,qBAMtBjB,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAvBzB4F,GAwByC3F,IAAzC6F,GAAA,SAAApG,GAiBE,QAAFoG,GAAwB7C,EACAC,EAGY9C,EACZE,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUwC,EAAO7C,EAAc8C,EAAY5C,IAN3CG,WAAwBF,GAAxB0C,MAAwBA,EACA1C,EAAxB2C,WAAwBA,EAGY3C,EAApCH,aAAoCA,EACZG,EAAxBD,QAAwBA,EAZtBC,EAAFG,cAA4B,WAK1BH,EAAFsB,SAAsB,EASlBtB,EAAKM,SAhDT,MAiCsCrB,GAAtCsG,EAAApG,GAGEoC,OAAFC,eACM+D,EADNnG,UAAA,cAAE,WACwB,MAAOc,MAAKoB,aACpC,SAAWG,GAAgBvB,KAAKoB,QAAUI,EAAAA,sBAAsBD,oCAiBtD8D,EAAZnG,UAAAuC,gBAAE,SAA0BC,GACxB1B,KAAKE,WAAaF,KAAKkB,OAASoE,GAAiBC,GACjDvF,KAAK6B,UAAUH,GAAQR,OAAQlB,KAAKkB,8CAlDxC/C,KAAmBkC,EAAAA,aAGnBlC,KAAEqC,KAmCFrC,KAAkDgH,GAAlD7E,aAAAnC,KAAeoC,EAAAA,aAlCfpC,KAAEsC,wBAyBFS,SAAA/C,KAAG2D,EAAAA,MAAHzD,MAAS,eApCTgH,GAiCsC3E,IA4BhC6E,GAAyC,GAAIpI,KAC7CmI,GAA+C,GAAInI,KAEnDJ,IACJ,QACA,WAAY,WAAY,WAAY,WAAY,WAChD,cAAe,cAAe,cAAe,cAC7C,cAAe,cAAe,cAAe,+FAkB7C+C,GAAF/C,OAAqBA,KAtFrB,MAqF6CgC,GAA7CyG,EAAAvG,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAbK,6MAaK9D,OAAtBA,OApFAyI,GAqF6CH,+ECrF7C,MAmByCtG,GAAzC0G,EAAAxG,GACEwG,EAAFvG,UAAAC,YAAE,SAAYC,GACV,OAAQsG,WAAYtG,GALF,wBAEtBjB,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAlBzBkG,GAmByCjG,IAAzCmG,GAAA,SAAA1G,GASE,QAAF0G,GAAwBjG,EAGYC,EACZC,EACAC,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUN,EAAYC,EAAcC,EAAQC,IAN5CG,WAAwBF,GAAxBJ,WAAwBA,EAGYI,EAApCH,aAAoCA,EACZG,EAAxBF,OAAwBA,EACAE,EAAxBD,QAAwBA,EAPtBC,EAAFG,cAA4B,WAY1BH,EAAFI,WAAyB0F,GAHrB9F,EAAKM,SAnCT,MAyBsCrB,GAAtC4G,EAAA1G,uCAlBAd,KAAmBkC,EAAAA,aAwBnBlC,KAAkDsH,GAAlDnF,aAAAnC,KAAeoC,EAAAA,aArBfpC,KAAEqC,KACFrC,KAAEsC,MAXFkF,GAyBsCjF,IAgBhCkF,GAAyC,GAAIzI,KAE7CJ,IACJ,QACA,WAAY,WAAY,WAAY,WAAY,WAChD,cAAe,cAAe,cAAe,cAC7C,cAAe,cAAe,cAAe,+FAiB7C+C,GAAF/C,OAAqBA,KAhErB,MA+D6CgC,GAA7C8G,EAAA5G,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAZK,6MAYK9D,OAAtBA,OA9DA8I,GA+D6CF,+EC/D7C,MAyB0C5G,GAA1C+G,EAAA7G,GACE6G,EAAF5G,UAAAC,YAAE,SAAYC,EAAe6B,GACzB7B,EAAQA,GAVU,MAWlB,IAAIoF,IAAO,CACPpF,GAAMqF,SAXS,OAYjBrF,EAAQA,EAAMsF,UAAU,EAAGtF,EAAMuF,QAZhB,MAajBH,GAAO,EAGT,IAAMI,IACJ1B,QAAWjC,EAAOC,OAAS,cAAgB,OAC3C6E,iBAAkB,GAClBC,qBAAsB,GAKxB,OAFApB,GADaJ,EAAO,iBAAmB,sBAC5BpF,EAEJwF,kBAlBXzG,KAACmB,EAAAA,WAADjB,OAAakB,WAAY,8GAxBzBuG,GAyB0CtG,IAA1CyG,GAAA,SAAAhH,GA6BE,QAAFgH,GAAwBvG,EAGYC,EACZC,EACAC,GALtB,GAAFC,GAMIb,EANJc,KAAAC,KAMUN,EAAYC,EAAcC,EAAQC,IAN5CG,WAAwBF,GAAxBJ,WAAwBA,EAGYI,EAApCH,aAAoCA,EACZG,EAAxBF,OAAwBA,EACAE,EAAxBD,QAAwBA,EAZtBC,EAAFG,cAA4B,YAK1BH,EAAFsB,SAAsB,EASlBtB,EAAKM,SA7DT,MA8CuCrB,GAAvCkH,EAAAhH,GAGEoC,OAAFC,eACM2E,EADN/G,UAAA,cAAE,WACwB,MAAOc,MAAKoB,aACpC,SAAWG,GAAgBvB,KAAKoB,QAAUI,EAAAA,sBAAsBD,oCAiBtD0E,EAAZ/G,UAAAuC,gBAAE,SAA0BC,GACxB1B,KAAKE,WAAaF,KAAKkB,OAASgF,GAAkBC,GAClDnG,KAAK6B,UAAUH,GAAQR,OAAQlB,KAAKkB,8CA/DxC/C,KAAmBkC,EAAAA,aAkDnBlC,KAAkD2H,GAAlDxF,aAAAnC,KAAeoC,EAAAA,aA5CfpC,KAAEqC,KAJFrC,KAAEsC,wBAwCFS,SAAA/C,KAAG2D,EAAAA,MAAHzD,MAAS,eAjDT4H,GA8CuCvF,IA4BjCyF,GAA0C,GAAIhJ,KAC9C+I,GAAgD,GAAI/I,KAEpDJ,IACJ,SACA,YAAa,YAAa,YAAa,YAAa,YACpD,eAAgB,eAAgB,eAAgB,eAChD,eAAgB,eAAgB,eAAgB,gGAkBhD+C,GAAF/C,OAAqBA,KAnGrB,MAkG8CgC,GAA9CqH,EAAAnH,kBADAd,KAACyC,EAAAA,UAADvC,OAAYwC,SAbK,2NAaK9D,OAAtBA,OAjGAqJ,GAkG8CH,IC3ExCtI,IACJgD,GACAoB,GACAK,GACAO,GACAa,GACAS,GACAK,GACAY,GACAM,GACAK,GACAO,gCAlCF,sBA2CAjI,KAACC,EAAAA,SAADC,OACEC,SAAUC,IACVE,aAAkBd,GAApBe,QACEC,QAAahB,GAAfe,YA9CA2H,KCWaC,GAAU,GAAIC,GAAAA,QAAQ,mCCiDjC,QAAFC,GAAgDC,EACbC,GAC3BC,EAAAA,iBAAiBD,KAAgBD,GACnCG,QAAQC,KAAK,4EA/DnB,MA4CSL,GAATM,WAAE,SAAkBC,EACAC,GAChB,WADJ,KAAAA,IAAoBA,OAEdC,SAAUT,EACVU,UAAWH,EAAcI,eAEpBC,QAASC,GAAeC,SAAnCC,KAAiDC,GAAmBT,KACzDK,QAASK,GAAYH,SAAUN,EAAaU,OAAO,IACnDN,QAASO,GAAcL,UAAU,MAEjCF,QAASC,GAAeC,SAAnCC,KAAiDC,GAAmBT,KACzDK,QAASK,GAAYH,SAAUN,EAAaU,OAAO,qBArB9DvJ,KAACC,EAAAA,SAADC,OACEC,SAAUM,GAAYgJ,GAAgBvB,IACtC1H,SAAUC,GAAYgJ,GAAgBvB,4CAwBxClI,KAAA0J,QAAAvH,aAAAnC,KAAeoC,EAAAA,WAAfpC,KAA2B2J,EAAAA,OAA3BzJ,MAAkCsJ,QAClCxJ,KAA+CkD,OAA/Cf,aAAAnC,KAAe2J,EAAAA,OAAfzJ,MAAsB0J,EAAAA,kBA7DtBvB"}