{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/server/server-provider.ts","../../src/lib/server/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/add-alias.ts","../../src/lib/core/observable-media/observable-media-provider.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/breakpoints/break-points-provider.ts","../../src/lib/core/match-media/match-media-provider.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/stylesheet-map/stylesheet-map-provider.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/core/media-monitor/media-monitor-provider.ts","../../src/lib/utils/basis-validator.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/media-change.ts","../../src/lib/core/media-monitor/media-monitor.ts","../../src/lib/core/observable-media/observable-media.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/vendor-prefixes-token.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/module.ts","../../src/lib/core/media-queries-module.ts","../../src/lib/core/tokens/flex-styles-token.ts","../../src/lib/core/responsive-activation/responsive-activation.ts","../../src/lib/core/base/base.ts","../../src/lib/core/base/base-adapter.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/match-media/server-match-media.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  Inject,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseFxDirective,\n  MediaMonitor,\n  SERVER_TOKEN,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({\n  selector: `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`\n})\nexport class ImgSrcDirective extends BaseFxDirective implements OnInit, OnChanges {\n\n  /* tslint:disable */\n  @Input('src')        set srcBase(val) { this.cacheDefaultSrc(val);           }\n\n  @Input('src.xs')     set srcXs(val)   { this._cacheInput('srcXs', val);  }\n  @Input('src.sm')     set srcSm(val)   { this._cacheInput('srcSm', val);  }\n  @Input('src.md')     set srcMd(val)   { this._cacheInput('srcMd', val);  }\n  @Input('src.lg')     set srcLg(val)   { this._cacheInput('srcLg', val);  }\n  @Input('src.xl')     set srcXl(val)   { this._cacheInput('srcXl', val);  }\n\n  @Input('src.lt-sm')  set srcLtSm(val) { this._cacheInput('srcLtSm', val);  }\n  @Input('src.lt-md')  set srcLtMd(val) { this._cacheInput('srcLtMd', val);  }\n  @Input('src.lt-lg')  set srcLtLg(val) { this._cacheInput('srcLtLg', val);  }\n  @Input('src.lt-xl')  set srcLtXl(val) { this._cacheInput('srcLtXl', val);  }\n\n  @Input('src.gt-xs')  set srcGtXs(val) { this._cacheInput('srcGtXs', val);  }\n  @Input('src.gt-sm')  set srcGtSm(val) { this._cacheInput('srcGtSm', val);  }\n  @Input('src.gt-md')  set srcGtMd(val) { this._cacheInput('srcGtMd', val);  }\n  @Input('src.gt-lg')  set srcGtLg(val) { this._cacheInput('srcGtLg', val);  }\n  /* tslint:enable */\n\n  constructor(protected _elRef: ElementRef,\n              protected _monitor: MediaMonitor,\n              protected _styler: StyleUtils,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected _serverModuleLoaded: boolean) {\n    super(_monitor, _elRef, _styler);\n    this._cacheInput('src', _elRef.nativeElement.getAttribute('src') || '');\n    if (isPlatformServer(this._platformId) && this._serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Listen for responsive changes to update the img.src attribute\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (this.hasResponsiveKeys) {\n      // Listen for responsive changes\n      this._listenForMediaQueryChanges('src', this.defaultSrc, () => {\n        this._updateSrcFor();\n      });\n    }\n    this._updateSrcFor();\n  }\n\n  /**\n   * Update the 'src' property of the host <img> element\n   */\n  ngOnChanges() {\n    if (this.hasInitialized) {\n      this._updateSrcFor();\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected _updateSrcFor() {\n    if (this.hasResponsiveKeys) {\n      let url = this.activatedValue || this.defaultSrc;\n      if (isPlatformServer(this._platformId) && this._serverModuleLoaded) {\n        this._styler.applyStyleToElement(this.nativeElement, {'content': url ? `url(${url})` : ''});\n      } else {\n        this.nativeElement.setAttribute('src', String(url));\n      }\n    }\n  }\n\n  /**\n   * Cache initial value of 'src', this will be used as fallback when breakpoint\n   * activations change.\n   * NOTE: The default 'src' property is not bound using @Input(), so perform\n   * a post-ngOnInit() lookup of the default src value (if any).\n   */\n  protected cacheDefaultSrc(value?: string) {\n    this._cacheInput('src', value || '');\n  }\n\n  /**\n   * Empty values are maintained, undefined values are exposed as ''\n   */\n  protected get defaultSrc(): string {\n    return this._queryInput('src') || '';\n  }\n\n  /**\n   * Does the <img> have 1 or more src.<xxx> responsive inputs\n   * defined... these will be mapped to activated breakpoints.\n   */\n  protected get hasResponsiveKeys() {\n    return Object.keys(this._inputMap).length > 1;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  Self,\n  OnInit,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {\n  BaseFxDirective,\n  BaseFxDirectiveAdapter,\n  MediaChange,\n  MediaMonitor,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n\n/** NgClass allowed inputs **/\nexport type NgClassType = string | string[] | Set<string> | {[klass: string]: any};\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({\n  selector: `\n    [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n    [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n    [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n  `\n})\nexport class ClassDirective extends BaseFxDirective\n    implements DoCheck, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Intercept ngClass assignments so we cache the default classes\n   * which are merged with activated styles or used as fallbacks.\n   * Note: Base ngClass values are applied during ngDoCheck()\n   */\n  @Input('ngClass')\n  set ngClassBase(val: NgClassType) {\n    const key = 'ngClass';\n    this._base.cacheInput(key, val, true);\n    this._ngClassInstance.ngClass = this._base.queryInput(key);\n  }\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klazz(val: string) {\n    const key = 'class';\n    this._base.cacheInput(key, val);\n    this._ngClassInstance.klass = val;\n  }\n\n  /* tslint:disable */\n  @Input('ngClass.xs')    set ngClassXs(val:   NgClassType) { this._base.cacheInput('ngClassXs',   val, true); }\n  @Input('ngClass.sm')    set ngClassSm(val:   NgClassType) { this._base.cacheInput('ngClassSm',   val, true); }\n  @Input('ngClass.md')    set ngClassMd(val:   NgClassType) { this._base.cacheInput('ngClassMd',   val, true); }\n  @Input('ngClass.lg')    set ngClassLg(val:   NgClassType) { this._base.cacheInput('ngClassLg',   val, true); }\n  @Input('ngClass.xl')    set ngClassXl(val:   NgClassType) { this._base.cacheInput('ngClassXl',   val, true); }\n\n  @Input('ngClass.lt-sm') set ngClassLtSm(val: NgClassType) { this._base.cacheInput('ngClassLtSm', val, true); }\n  @Input('ngClass.lt-md') set ngClassLtMd(val: NgClassType) { this._base.cacheInput('ngClassLtMd', val, true); }\n  @Input('ngClass.lt-lg') set ngClassLtLg(val: NgClassType) { this._base.cacheInput('ngClassLtLg', val, true); }\n  @Input('ngClass.lt-xl') set ngClassLtXl(val: NgClassType) { this._base.cacheInput('ngClassLtXl', val, true); }\n\n  @Input('ngClass.gt-xs') set ngClassGtXs(val: NgClassType) { this._base.cacheInput('ngClassGtXs', val, true); }\n  @Input('ngClass.gt-sm') set ngClassGtSm(val: NgClassType) { this._base.cacheInput('ngClassGtSm', val, true); }\n  @Input('ngClass.gt-md') set ngClassGtMd(val: NgClassType) { this._base.cacheInput('ngClassGtMd', val, true); }\n  @Input('ngClass.gt-lg') set ngClassGtLg(val: NgClassType) { this._base.cacheInput('ngClassGtLg', val, true); }\n\n  /* tslint:enable */\n  constructor(protected monitor: MediaMonitor,\n              protected _iterableDiffers: IterableDiffers,\n              protected _keyValueDiffers: KeyValueDiffers,\n              protected _ngEl: ElementRef,\n              protected _renderer: Renderer2,\n              @Optional() @Self() private _ngClassInstance: NgClass,\n              protected _styler: StyleUtils) {\n    super(monitor, _ngEl, _styler);\n    this._configureAdapters();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._ngClassInstance.ngClass = this._base.mqActivation.activatedInput || '';\n    }\n  }\n\n  ngOnInit() {\n    this._configureMQListener();\n  }\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this._ngClassInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n    delete this._ngClassInstance;\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n   * Configure adapters (that delegate to an internal ngClass instance) if responsive\n   * keys have been defined.\n   */\n  protected _configureAdapters() {\n    this._base = new BaseFxDirectiveAdapter(\n      'ngClass',\n      this.monitor,\n      this._ngEl,\n      this._styler\n    );\n    if (!this._ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this._ngClassInstance = new NgClass(\n          this._iterableDiffers, this._keyValueDiffers, this._ngEl, this._renderer\n      );\n    }\n  }\n\n  /**\n   * Build an mqActivation object that bridges mql change events to onMediaQueryChange handlers\n   * NOTE: We delegate subsequent activity to the NgClass logic\n   *       Identify the activated input value and update the ngClass iterables...\n   *       Use ngDoCheck() to actually apply the values to the element\n   */\n  protected _configureMQListener(baseKey = 'ngClass') {\n    const fallbackValue = this._base.queryInput(baseKey);\n    this._base.listenForMediaQueryChanges(baseKey, fallbackValue, (changes: MediaChange) => {\n      this._ngClassInstance.ngClass = changes.value || '';\n      this._ngClassInstance.ngDoCheck();\n    });\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors and capture mediaQuery changes\n   * Delegate value changes to the internal `_ngClassInstance` for processing\n   */\n  protected _base: BaseFxDirectiveAdapter;   // used for `ngClass.xxx` selectors\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Self,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {Subscription} from 'rxjs/Subscription';\nimport {\n  BaseFxDirective,\n  MediaChange,\n  MediaMonitor,\n  SERVER_TOKEN,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nimport {LayoutDirective} from '@angular/flex-layout/flex';\n\nconst FALSY = ['false', false, 0];\n\n/**\n * For fxHide selectors, we invert the 'value'\n * and assign to the equivalent fxShow selector cache\n *  - When 'hide' === '' === true, do NOT show the element\n *  - When 'hide' === false or 0... we WILL show the element\n */\nexport function negativeOf(hide: any) {\n  return (hide === '') ? false :\n         ((hide === 'false') || (hide === 0)) ? true : !hide;\n}\n\n/**\n * 'show' Layout API directive\n *\n */\n@Directive({\n  selector: `\n  [fxShow],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`\n})\nexport class ShowHideDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShow')       set show(val) {  this._cacheInput('show', val);  }\n  @Input('fxShow.xs')    set showXs(val) {this._cacheInput('showXs', val);}\n  @Input('fxShow.sm')    set showSm(val) {this._cacheInput('showSm', val); };\n  @Input('fxShow.md')    set showMd(val) {this._cacheInput('showMd', val); };\n  @Input('fxShow.lg')    set showLg(val) {this._cacheInput('showLg', val); };\n  @Input('fxShow.xl')    set showXl(val) {this._cacheInput('showXl', val); };\n\n  @Input('fxShow.lt-sm') set showLtSm(val) { this._cacheInput('showLtSm', val); };\n  @Input('fxShow.lt-md') set showLtMd(val) { this._cacheInput('showLtMd', val); };\n  @Input('fxShow.lt-lg') set showLtLg(val) { this._cacheInput('showLtLg', val); };\n  @Input('fxShow.lt-xl') set showLtXl(val) { this._cacheInput('showLtXl', val); };\n\n  @Input('fxShow.gt-xs') set showGtXs(val) {this._cacheInput('showGtXs', val); };\n  @Input('fxShow.gt-sm') set showGtSm(val) {this._cacheInput('showGtSm', val); };\n  @Input('fxShow.gt-md') set showGtMd(val) {this._cacheInput('showGtMd', val); };\n  @Input('fxShow.gt-lg') set showGtLg(val) {this._cacheInput('showGtLg', val); };\n\n  @Input('fxHide')       set hide(val) {this._cacheInput('show', negativeOf(val));}\n  @Input('fxHide.xs')    set hideXs(val) {this._cacheInput('showXs', negativeOf(val));}\n  @Input('fxHide.sm')    set hideSm(val) {this._cacheInput('showSm', negativeOf(val)); };\n  @Input('fxHide.md')    set hideMd(val) {this._cacheInput('showMd', negativeOf(val)); };\n  @Input('fxHide.lg')    set hideLg(val) {this._cacheInput('showLg', negativeOf(val)); };\n  @Input('fxHide.xl')    set hideXl(val) {this._cacheInput('showXl', negativeOf(val)); };\n\n  @Input('fxHide.lt-sm') set hideLtSm(val) { this._cacheInput('showLtSm', negativeOf(val)); };\n  @Input('fxHide.lt-md') set hideLtMd(val) { this._cacheInput('showLtMd', negativeOf(val)); };\n  @Input('fxHide.lt-lg') set hideLtLg(val) { this._cacheInput('showLtLg', negativeOf(val)); };\n  @Input('fxHide.lt-xl') set hideLtXl(val) { this._cacheInput('showLtXl', negativeOf(val)); };\n\n  @Input('fxHide.gt-xs') set hideGtXs(val) {this._cacheInput('showGtXs', negativeOf(val)); };\n  @Input('fxHide.gt-sm') set hideGtSm(val) {this._cacheInput('showGtSm', negativeOf(val)); };\n  @Input('fxHide.gt-md') set hideGtMd(val) {this._cacheInput('showGtMd', negativeOf(val)); };\n  @Input('fxHide.gt-lg') set hideGtLg(val) {this._cacheInput('showGtLg', negativeOf(val)); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n              @Optional() @Self() protected layout: LayoutDirective,\n              protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n\n    super(monitor, elRef, styleUtils);\n\n    if (layout) {\n      /**\n       * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.\n       * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS\n       */\n      this._layoutWatcher = layout.layout$.subscribe(() => this._updateWithValue());\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected _getDisplayStyle(): string {\n    return this.layout ? 'flex' : super._getDisplayStyle();\n  }\n\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.hasInitialized && (changes['show'] != null || this._mqActivation)) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    let value = this._getDefaultVal('show', true);\n    // Build _mqActivation controller\n    this._listenForMediaQueryChanges('show', value, (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected _updateWithValue(value?: string|number|boolean) {\n    value = value || this._getDefaultVal('show', true);\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    let shouldShow = this._validateTruthy(value);\n    this._applyStyleToElement(this._buildCSS(shouldShow));\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n  }\n\n\n  /** Build the CSS that should be assigned to the element instance */\n  protected _buildCSS(show) {\n    return {'display': show ? this._display : 'none'};\n  }\n\n  /**  Validate the to be not FALSY */\n  _validateTruthy(show) {\n    return (FALSY.indexOf(show) == -1);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/**\n * NgStyle allowed inputs\n */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\n/**\n * Transform Operators for @angular/flex-layout NgStyle Directive\n */\nexport const ngStyleUtils = {\n  getType,\n  buildRawList,\n  buildMapFromList,\n  buildMapFromSet\n};\n\nfunction getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set ) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/**\n * Convert array of key:value strings to a iterable map object\n */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {});\n}\n\n/**\n * Convert Set<string> or raw Object to an iterable NgStyleMap\n */\nfunction buildMapFromSet(source: any, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list = new Array<string>();\n  if (getType(source) == 'set') {\n    source.forEach(entry => list.push(entry));\n  } else {                                // simple hashmap\n    Object.keys(source).forEach(key => {\n      list.push(`${key}:${source[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/**\n * Convert 'key:value' -> [key, value]\n */\nfunction stringToKeyValue(it: string): NgStyleKeyValue|null {\n  let [key, val] = it.split(':');\n  return val ? new NgStyleKeyValue(key, val) : null;\n}\n\n/**\n * Convert [ [key,value] ] -> { key : value }\n */\nfunction keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  KeyValueDiffers,\n  OnDestroy,\n  OnChanges,\n  Optional,\n  Renderer2,\n  SecurityContext,\n  Self,\n  SimpleChanges,\n  OnInit,\n} from '@angular/core';\nimport {NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseFxDirective,\n  BaseFxDirectiveAdapter,\n  MediaChange,\n  MediaMonitor,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  ngStyleUtils as _\n} from './style-transforms';\n\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({\n  selector: `\n    [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n    [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n    [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n  `\n})\nexport class StyleDirective extends BaseFxDirective\n    implements DoCheck, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Intercept ngStyle assignments so we cache the default styles\n   * which are merged with activated styles or used as fallbacks.\n   */\n  @Input('ngStyle')\n  set ngStyleBase(val: NgStyleType) {\n    const key = 'ngStyle';\n    this._base.cacheInput(key, val, true);  // convert val to hashmap\n    this._ngStyleInstance.ngStyle = this._base.queryInput(key);\n  }\n\n  /* tslint:disable */\n  @Input('ngStyle.xs')    set ngStyleXs(val: NgStyleType) { this._base.cacheInput('ngStyleXs', val, true); }\n  @Input('ngStyle.sm')    set ngStyleSm(val: NgStyleType) { this._base.cacheInput('ngStyleSm', val, true); };\n  @Input('ngStyle.md')    set ngStyleMd(val: NgStyleType) { this._base.cacheInput('ngStyleMd', val, true); };\n  @Input('ngStyle.lg')    set ngStyleLg(val: NgStyleType) { this._base.cacheInput('ngStyleLg', val, true); };\n  @Input('ngStyle.xl')    set ngStyleXl(val: NgStyleType) { this._base.cacheInput('ngStyleXl', val, true); };\n\n  @Input('ngStyle.lt-sm') set ngStyleLtSm(val: NgStyleType) { this._base.cacheInput('ngStyleLtSm', val, true); };\n  @Input('ngStyle.lt-md') set ngStyleLtMd(val: NgStyleType) { this._base.cacheInput('ngStyleLtMd', val, true); };\n  @Input('ngStyle.lt-lg') set ngStyleLtLg(val: NgStyleType) { this._base.cacheInput('ngStyleLtLg', val, true); };\n  @Input('ngStyle.lt-xl') set ngStyleLtXl(val: NgStyleType) { this._base.cacheInput('ngStyleLtXl', val, true); };\n\n  @Input('ngStyle.gt-xs') set ngStyleGtXs(val: NgStyleType) { this._base.cacheInput('ngStyleGtXs', val, true); };\n  @Input('ngStyle.gt-sm') set ngStyleGtSm(val: NgStyleType) { this._base.cacheInput('ngStyleGtSm', val, true); } ;\n  @Input('ngStyle.gt-md') set ngStyleGtMd(val: NgStyleType) { this._base.cacheInput('ngStyleGtMd', val, true); };\n  @Input('ngStyle.gt-lg') set ngStyleGtLg(val: NgStyleType) { this._base.cacheInput('ngStyleGtLg', val, true); };\n  /* tslint:enable */\n\n  /**\n   *  Constructor for the ngStyle subclass; which adds selectors and\n   *  a MediaQuery Activation Adapter\n   */\n  constructor(private monitor: MediaMonitor,\n              protected _sanitizer: DomSanitizer,\n              protected _ngEl: ElementRef,\n              protected _renderer: Renderer2,\n              protected _differs: KeyValueDiffers,\n              @Optional() @Self() private _ngStyleInstance: NgStyle,\n              protected _styler: StyleUtils) {\n\n    super(monitor, _ngEl, _styler);\n    this._configureAdapters();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._ngStyleInstance.ngStyle = this._base.mqActivation.activatedInput || '';\n    }\n  }\n\n\n  ngOnInit() {\n    this._configureMQListener();\n  }\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this._ngStyleInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n    delete this._ngStyleInstance;\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n     * Configure adapters (that delegate to an internal ngClass instance) if responsive\n     * keys have been defined.\n     */\n    protected _configureAdapters() {\n        this._base = new BaseFxDirectiveAdapter(\n          'ngStyle',\n          this.monitor,\n          this._ngEl,\n          this._styler\n        );\n        if (!this._ngStyleInstance) {\n          // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n          // defined on the same host element; since the responsive variations may be defined...\n          this._ngStyleInstance = new NgStyle(this._differs, this._ngEl, this._renderer);\n        }\n\n        this._buildCacheInterceptor();\n        this._fallbackToStyle();\n    }\n\n    /**\n     * Build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    protected _configureMQListener(baseKey = 'ngStyle') {\n      const fallbackValue = this._base.queryInput(baseKey);\n      this._base.listenForMediaQueryChanges(baseKey, fallbackValue, (changes: MediaChange) => {\n        this._ngStyleInstance.ngStyle = changes.value || '';\n        this._ngStyleInstance.ngDoCheck();\n      });\n    }\n\n  // ************************************************************************\n  // Private Internal Methods\n  // ************************************************************************\n\n  /**\n   * Build intercept to convert raw strings to ngStyleMap\n   */\n  protected _buildCacheInterceptor() {\n    let cacheInput = this._base.cacheInput.bind(this._base);\n    this._base.cacheInput = (key?: string, source?: any, cacheRaw = false, merge = true) => {\n      let styles = this._buildStyleMap(source);\n      if (merge) {\n        styles = extendObject({}, this._base.inputMap['ngStyle'], styles);\n      }\n      cacheInput(key, styles, cacheRaw);\n    };\n  }\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected _buildStyleMap(styles: NgStyleType) {\n    let sanitizer: NgStyleSanitizer = (val: any) => {\n      // Always safe-guard (aka sanitize) style property values\n      return this._sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    };\n    if (styles) {\n      switch ( _.getType(styles) ) {\n        case 'string':  return _.buildMapFromList(_.buildRawList(styles), sanitizer);\n        case 'array' :  return _.buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return _.buildMapFromSet(styles, sanitizer);\n        default      :  return _.buildMapFromSet(styles, sanitizer);\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * Initial lookup of raw 'class' value (if any)\n   */\n  protected _fallbackToStyle() {\n    if (!this._base.queryInput('ngStyle')) {\n      this.ngStyleBase = this._getAttributeValue('style') || '';\n    }\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the StyleDirective\n   */\n  protected _base: BaseFxDirectiveAdapter;\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {ImgSrcDirective} from './img-src/img-src';\nimport {ClassDirective} from './class/class';\nimport {ShowHideDirective} from './show-hide/show-hide';\nimport {StyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  ShowHideDirective,\n  ClassDirective,\n  StyleDirective,\n  ImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {BEFORE_APP_SERIALIZED} from '@angular/platform-server';\nimport {\n  BREAKPOINTS,\n  CLASS_NAME,\n  SERVER_TOKEN,\n  BreakPoint,\n  MatchMedia,\n  StylesheetMap,\n  ServerMatchMedia\n} from '@angular/flex-layout/core';\n\n\n/**\n * Activate all of the registered breakpoints in sequence, and then\n * retrieve the associated stylings from the virtual stylesheet\n * @param serverSheet the virtual stylesheet that stores styles for each\n *        element\n * @param matchMedia the service to activate/deactive breakpoints\n * @param breakpoints the registered breakpoints to activate/deactivate\n */\nexport function generateStaticFlexLayoutStyles(serverSheet: StylesheetMap,\n                                               matchMedia: MatchMedia,\n                                               breakpoints: BreakPoint[]) {\n  // Store the custom classes in the following map, that way only\n  // one class gets allocated per HTMLElement, and each class can\n  // be referenced in the static media queries\n  const classMap = new Map<HTMLElement, string>();\n\n  // Get the initial stylings for all of the directives, and initialize\n  // the fallback block of stylings, then reverse the breakpoints list\n  // to traverse in the proper order\n  const defaultStyles = new Map(serverSheet.stylesheet);\n  let styleText = generateCss(defaultStyles, 'all', classMap);\n\n  breakpoints.reverse();\n  breakpoints.forEach((bp, i) => {\n    serverSheet.clearStyles();\n    (matchMedia as ServerMatchMedia).activateBreakpoint(bp);\n    const stylesheet = new Map(serverSheet.stylesheet);\n    if (stylesheet.size > 0) {\n      styleText += generateCss(stylesheet, bp.mediaQuery, classMap);\n    }\n    (matchMedia as ServerMatchMedia).deactivateBreakpoint(breakpoints[i]);\n  });\n\n  return styleText;\n}\n\n/**\n * Create a style tag populated with the dynamic stylings from Flex\n * components and attach it to the head of the DOM\n */\nexport function FLEX_SSR_SERIALIZER_FACTORY(serverSheet: StylesheetMap,\n                                            matchMedia: MatchMedia,\n                                            _document: Document,\n                                            breakpoints: BreakPoint[]) {\n  return () => {\n    // This is the style tag that gets inserted into the head of the DOM,\n    // populated with the manual media queries\n    const styleTag = _document.createElement('style');\n    const styleText = generateStaticFlexLayoutStyles(serverSheet, matchMedia, breakpoints);\n    styleTag.classList.add(`${CLASS_NAME}ssr`);\n    styleTag.textContent = styleText;\n    _document.head.appendChild(styleTag);\n  };\n}\n\n/**\n *  Provider to set static styles on the server\n */\nexport const SERVER_PROVIDERS = [\n  {\n    provide: <InjectionToken<() => void>>BEFORE_APP_SERIALIZED,\n    useFactory: FLEX_SSR_SERIALIZER_FACTORY,\n    deps: [\n      StylesheetMap,\n      MatchMedia,\n      DOCUMENT,\n      BREAKPOINTS,\n    ],\n    multi: true\n  },\n  {\n    provide: SERVER_TOKEN,\n    useValue: true\n  },\n  {\n    provide: MatchMedia,\n    useClass: ServerMatchMedia\n  }\n];\n\n\nlet nextId = 0;\nconst IS_DEBUG_MODE = false;\n\nexport type StyleSheet = Map<HTMLElement, Map<string, string|number>>;\nexport type ClassMap = Map<HTMLElement, string>;\n\n/**\n * create @media queries based on a virtual stylesheet\n * * Adds a unique class to each element and stores it\n *   in a shared classMap for later reuse\n * @param stylesheet the virtual stylesheet that stores styles for each\n *        element\n * @param mediaQuery the given @media CSS selector for the current breakpoint\n * @param classMap the map of HTML elements to class names to avoid duplications\n */\nfunction generateCss(stylesheet: StyleSheet, mediaQuery: string, classMap: ClassMap) {\n  let css = '';\n  stylesheet.forEach((styles, el) => {\n    let keyVals = '', className = getClassName(el, classMap);\n\n    styles.forEach((v, k) => {\n      keyVals += v ? format(`${k}:${v};`) : '';\n    });\n\n    // Build list of CSS styles; each with a className\n    css += format(`.${className} {`, keyVals, '}');\n  });\n\n  // Group 1 or more styles (each with className) in a specific mediaQuery\n  return format(`@media ${mediaQuery} {`, css, '}');\n}\n\n/**\n * For debugging purposes, prefix css segment with linefeed(s) for easy\n  * debugging purposes.\n */\nfunction format(...list: string[]): string {\n  let result = '';\n  list.forEach((css, i) => {\n    result += IS_DEBUG_MODE ? formatSegment(css, i != 0) : css;\n  });\n  return result;\n}\n\nfunction formatSegment(css: string, asPrefix: boolean = true): string {\n  return asPrefix ? '\\n' + css : css + '\\n';\n}\n\n/**\n * Get className associated with CSS styling\n * If not found, generate global className and set\n * association.\n */\nfunction  getClassName(stylesheet, classMap) {\n  let className = classMap.get(stylesheet);\n   if (!className) {\n     className = `${CLASS_NAME}${nextId++}`;\n     classMap.set(stylesheet, className);\n   }\n   stylesheet.classList.add(className);\n\n   return className;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {SERVER_PROVIDERS} from './server-provider';\n\n@NgModule({\n  providers: [SERVER_PROVIDERS]\n})\nexport class FlexLayoutServerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('5.0.0-beta.13-a425035');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, ModuleWithProviders, NgModule, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BreakPoint,\n  BreakPointProviderOptions,\n  CUSTOM_BREAKPOINTS_PROVIDER_FACTORY,\n  CoreModule,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\n\n\n/**\n * Since the equivalent results are easily achieved with a css class attached to each\n * layout child, these have been deprecated and removed from the API.\n *\n *  import {LayoutPaddingDirective} from './api/flexbox/layout-padding';\n *  import {LayoutMarginDirective} from './api/flexbox/layout-margin';\n */\n\n/**\n *\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, CoreModule],\n  exports: [FlexModule, ExtendedModule, CoreModule]\n})\nexport class FlexLayoutModule {\n\n  constructor (\n    @Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n\n  /**\n   * External uses can easily add custom breakpoints AND include internal orientations\n   * breakpoints; which are not available by default.\n   *\n   * !! Selector aliases are not auto-configured. Developers must subclass\n   * the API directives to support extra selectors for the orientations breakpoints !!\n   */\n  static provideBreakPoints(breakpoints: BreakPoint[],\n                            options?: BreakPointProviderOptions): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: [\n        CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(breakpoints, options || {orientations: false})\n      ]\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\nimport {Observable} from 'rxjs/Observable';\nimport {ReplaySubject} from 'rxjs/ReplaySubject';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive({selector: `\n  [fxLayout],\n  [fxLayout.xs], [fxLayout.sm], [fxLayout.md], [fxLayout.lg], [fxLayout.xl],\n  [fxLayout.lt-sm], [fxLayout.lt-md], [fxLayout.lt-lg], [fxLayout.lt-xl],\n  [fxLayout.gt-xs], [fxLayout.gt-sm], [fxLayout.gt-md], [fxLayout.gt-lg]\n`})\nexport class LayoutDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Create Observable for nested/child 'flex' directives. This allows\n   * child flex directives to subscribe/listen for flexbox direction changes.\n   */\n  protected _announcer: ReplaySubject<string>;\n\n  /**\n   * Publish observer to enabled nested, dependent directives to listen\n   * to parent 'layout' direction changes\n   */\n  layout$: Observable<string>;\n\n  /* tslint:disable */\n  @Input('fxLayout')       set layout(val)     { this._cacheInput('layout', val); };\n  @Input('fxLayout.xs')    set layoutXs(val)   { this._cacheInput('layoutXs', val); };\n  @Input('fxLayout.sm')    set layoutSm(val)   { this._cacheInput('layoutSm', val); };\n  @Input('fxLayout.md')    set layoutMd(val)   { this._cacheInput('layoutMd', val); };\n  @Input('fxLayout.lg')    set layoutLg(val)   { this._cacheInput('layoutLg', val); };\n  @Input('fxLayout.xl')    set layoutXl(val)   { this._cacheInput('layoutXl', val); };\n\n  @Input('fxLayout.gt-xs') set layoutGtXs(val) { this._cacheInput('layoutGtXs', val); };\n  @Input('fxLayout.gt-sm') set layoutGtSm(val) { this._cacheInput('layoutGtSm', val); };\n  @Input('fxLayout.gt-md') set layoutGtMd(val) { this._cacheInput('layoutGtMd', val); };\n  @Input('fxLayout.gt-lg') set layoutGtLg(val) { this._cacheInput('layoutGtLg', val); };\n\n  @Input('fxLayout.lt-sm') set layoutLtSm(val) { this._cacheInput('layoutLtSm', val); };\n  @Input('fxLayout.lt-md') set layoutLtMd(val) { this._cacheInput('layoutLtMd', val); };\n  @Input('fxLayout.lt-lg') set layoutLtLg(val) { this._cacheInput('layoutLtLg', val); };\n  @Input('fxLayout.lt-xl') set layoutLtXl(val) { this._cacheInput('layoutLtXl', val); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n    this._announcer = new ReplaySubject<string>(1);\n    this.layout$ = this._announcer.asObservable();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxLayout')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['layout'] != null || this._mqActivation) {\n      this._updateWithDirection();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('layout', 'row', (changes: MediaChange) => {\n      this._updateWithDirection(changes.value);\n    });\n    this._updateWithDirection();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Validate the direction value and then update the host's inline flexbox styles\n   */\n  protected _updateWithDirection(value?: string) {\n    value = value || this._queryInput('layout') || 'row';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Update styles and announce to subscribers the *new* direction\n    let css = buildLayoutCSS(!!value ? value : '');\n\n    this._applyStyleToElement(css);\n    this._announcer.next(css['flex-direction']);\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  Self,\n  AfterContentInit,\n  Optional,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {LayoutDirective} from '../layout/layout';\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n@Directive({\n  selector: `\n  [fxLayoutGap],\n  [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md], [fxLayoutGap.lg], [fxLayoutGap.xl],\n  [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md], [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl],\n  [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm], [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`\n})\nexport class LayoutGapDirective extends BaseFxDirective\n  implements AfterContentInit, OnChanges, OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n  protected _observer: MutationObserver;\n  private _directionWatcher: Subscription;\n\n  /* tslint:disable */\n @Input('fxLayoutGap')       set gap(val) { this._cacheInput('gap', val); }\n @Input('fxLayoutGap.xs')    set gapXs(val) { this._cacheInput('gapXs', val); }\n @Input('fxLayoutGap.sm')    set gapSm(val) { this._cacheInput('gapSm', val); };\n @Input('fxLayoutGap.md')    set gapMd(val) { this._cacheInput('gapMd', val); };\n @Input('fxLayoutGap.lg')    set gapLg(val) { this._cacheInput('gapLg', val); };\n @Input('fxLayoutGap.xl')    set gapXl(val) { this._cacheInput('gapXl', val); };\n\n @Input('fxLayoutGap.gt-xs') set gapGtXs(val) { this._cacheInput('gapGtXs', val); };\n @Input('fxLayoutGap.gt-sm') set gapGtSm(val) { this._cacheInput('gapGtSm', val); };\n @Input('fxLayoutGap.gt-md') set gapGtMd(val) { this._cacheInput('gapGtMd', val); };\n @Input('fxLayoutGap.gt-lg') set gapGtLg(val) { this._cacheInput('gapGtLg', val); };\n\n @Input('fxLayoutGap.lt-sm') set gapLtSm(val) { this._cacheInput('gapLtSm', val); };\n @Input('fxLayoutGap.lt-md') set gapLtMd(val) { this._cacheInput('gapLtMd', val); };\n @Input('fxLayoutGap.lt-lg') set gapLtLg(val) { this._cacheInput('gapLtLg', val); };\n @Input('fxLayoutGap.lt-xl') set gapLtXl(val) { this._cacheInput('gapLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              @Optional() @Self() container: LayoutDirective,\n              private _zone: NgZone,\n              private _directionality: Directionality,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n    this._directionWatcher =\n        this._directionality.change.subscribe(this._updateWithValue.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['gap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngAfterContentInit() {\n    this._watchContentChanges();\n    this._listenForMediaQueryChanges('gap', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n    if (this._directionWatcher) {\n      this._directionWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Watch for child nodes to be added... and apply the layout gap styles to each.\n   * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n   */\n  protected _watchContentChanges() {\n    this._zone.runOutsideAngular(() => {\n\n      if (typeof MutationObserver !== 'undefined') {\n        this._observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n                (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this._updateWithValue();\n          }\n        });\n        this._observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n    this._updateWithValue();\n  }\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('gap') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this._getDisplayStyle(el) != 'none')\n      .sort((a, b) => {\n        const orderA = +this._styler.lookupStyle(a, 'order');\n        const orderB = +this._styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const lastItem = items.pop();\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      this._applyStyleToElements(this._buildCSS(value), items);\n\n      // Clear all gaps for all visible elements\n      this._applyStyleToElements(this._buildCSS(), [lastItem]);\n    }\n  }\n\n  /**\n   * Prepare margin CSS, remove any previous explicitly\n   * assigned margin assignments\n   */\n  private _buildCSS(value: any = null) {\n    let key, margins = {\n      'margin-left': null,\n      'margin-right': null,\n      'margin-top': null,\n      'margin-bottom': null\n    };\n\n    switch (this._layout) {\n      case 'column':\n      case 'column-reverse':\n        key = 'margin-bottom';\n        break;\n      case 'row' :\n      case 'row-reverse':\n      default :\n        key = this._directionality.value === 'rtl' ? 'margin-left' : 'margin-right';\n        break;\n    }\n    margins[key] = value;\n\n    return margins;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  ADD_FLEX_STYLES,\n  BaseFxDirective,\n  MediaChange,\n  MediaMonitor,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LayoutDirective} from '../layout/layout';\nimport {validateBasis} from '../../utils/basis-validator';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\n\n/** Built-in aliases for different flex-basis values. */\nexport type FlexBasisAlias = 'grow' | 'initial' | 'auto' | 'none' | 'nogrow' | 'noshrink';\n\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive({selector: `\n  [fxFlex],\n  [fxFlex.xs], [fxFlex.sm], [fxFlex.md], [fxFlex.lg], [fxFlex.xl],\n  [fxFlex.lt-sm], [fxFlex.lt-md], [fxFlex.lt-lg], [fxFlex.lt-xl],\n  [fxFlex.gt-xs], [fxFlex.gt-sm], [fxFlex.gt-md], [fxFlex.gt-lg],\n`\n})\nexport class FlexDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /** The flex-direction of this element's flex container. Defaults to 'row'. */\n  protected _layout: string;\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShrink')     set shrink(val)    { this._cacheInput('shrink', val); };\n  @Input('fxGrow')       set grow(val)      { this._cacheInput('grow', val); };\n\n  @Input('fxFlex')       set flex(val)      { this._cacheInput('flex', val); };\n  @Input('fxFlex.xs')    set flexXs(val)    { this._cacheInput('flexXs', val); };\n  @Input('fxFlex.sm')    set flexSm(val)    { this._cacheInput('flexSm', val); };\n  @Input('fxFlex.md')    set flexMd(val)    { this._cacheInput('flexMd', val); };\n  @Input('fxFlex.lg')    set flexLg(val)    { this._cacheInput('flexLg', val); };\n  @Input('fxFlex.xl')    set flexXl(val)    { this._cacheInput('flexXl', val); };\n\n  @Input('fxFlex.gt-xs') set flexGtXs(val)  { this._cacheInput('flexGtXs', val); };\n  @Input('fxFlex.gt-sm') set flexGtSm(val)  { this._cacheInput('flexGtSm', val); };\n  @Input('fxFlex.gt-md') set flexGtMd(val)  { this._cacheInput('flexGtMd', val); };\n  @Input('fxFlex.gt-lg') set flexGtLg(val)  { this._cacheInput('flexGtLg', val); };\n\n  @Input('fxFlex.lt-sm') set flexLtSm(val) { this._cacheInput('flexLtSm', val); };\n  @Input('fxFlex.lt-md') set flexLtMd(val) { this._cacheInput('flexLtMd', val); };\n  @Input('fxFlex.lt-lg') set flexLtLg(val) { this._cacheInput('flexLtLg', val); };\n  @Input('fxFlex.lt-xl') set flexLtXl(val) { this._cacheInput('flexLtXl', val); };\n  /* tslint:enable */\n\n  // Note: Explicitly @SkipSelf on LayoutDirective because we are looking\n  //       for the parent flex container for this flex item.\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              protected styleUtils: StyleUtils,\n              @Optional() @Inject(ADD_FLEX_STYLES) protected addFlexStyles: boolean|null) {\n    super(monitor, elRef, styleUtils);\n\n    this._cacheInput('flex', '');\n    this._cacheInput('shrink', 1);\n    this._cacheInput('grow', 1);\n\n    if (_container) {\n      // If this flex item is inside of a flex container marked with\n      // Subscribe to layout immediate parent direction changes\n      this._layoutWatcher = _container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['flex'] != null || this._mqActivation) {\n      this._updateStyle();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('flex', '', (changes: MediaChange) => {\n      this._updateStyle(changes.value);\n    });\n    this._updateStyle();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateStyle();\n  }\n\n  protected _updateStyle(value?: string|number) {\n    let flexBasis = value || this._queryInput('flex') || '';\n    if (this._mqActivation) {\n      flexBasis = this._mqActivation.activatedInput;\n    }\n\n    let basis = String(flexBasis).replace(';', '');\n    let parts = validateBasis(basis, this._queryInput('grow'), this._queryInput('shrink'));\n    this._applyStyleToElement(this._validateValue.apply(this, parts));\n  }\n\n  /**\n   * Validate the value to be one of the acceptable value options\n   * Use default fallback of 'row'\n   */\n  protected _validateValue(grow: number|string,\n                           shrink: number|string,\n                           basis: string|number|FlexBasisAlias) {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    let layout = this._getFlowDirection(this.parentElement, !!this.addFlexStyles);\n    let direction = (layout.indexOf('column') > -1) ? 'column' : 'row';\n\n    let max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    let min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    let hasCalc = String(basis).indexOf('calc') > -1;\n    let usingCalc = hasCalc || (basis == 'auto');\n    let isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    let hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('em') > -1 ||\n      String(basis).indexOf('vw') > -1 || String(basis).indexOf('vh') > -1;\n    let isPx = String(basis).indexOf('px') > -1 || usingCalc;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    let isFixed = !grow && !shrink;\n\n    let css = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    let clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        basis = MIN_FLEX;\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277 and 534\n    // TODO(CaerusKaru): convert this to just width/height\n    if (basis !== '0%' && basis !== MIN_FLEX) {\n      css[min] = isFixed || (isPx && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n        (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n        (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'});\n  }\n}\n\nconst MIN_FLEX = '0.000000001px';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\n\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n@Directive({selector: `\n  [fxFlexOrder],\n  [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md], [fxFlexOrder.lg], [fxFlexOrder.xl],\n  [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md], [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl],\n  [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm], [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`})\nexport class FlexOrderDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOrder')       set order(val)     { this._cacheInput('order', val); }\n  @Input('fxFlexOrder.xs')    set orderXs(val)   { this._cacheInput('orderXs', val); }\n  @Input('fxFlexOrder.sm')    set orderSm(val)   { this._cacheInput('orderSm', val); };\n  @Input('fxFlexOrder.md')    set orderMd(val)   { this._cacheInput('orderMd', val); };\n  @Input('fxFlexOrder.lg')    set orderLg(val)   { this._cacheInput('orderLg', val); };\n  @Input('fxFlexOrder.xl')    set orderXl(val)   { this._cacheInput('orderXl', val); };\n\n  @Input('fxFlexOrder.gt-xs') set orderGtXs(val) { this._cacheInput('orderGtXs', val); };\n  @Input('fxFlexOrder.gt-sm') set orderGtSm(val) { this._cacheInput('orderGtSm', val); };\n  @Input('fxFlexOrder.gt-md') set orderGtMd(val) { this._cacheInput('orderGtMd', val); };\n  @Input('fxFlexOrder.gt-lg') set orderGtLg(val) { this._cacheInput('orderGtLg', val); };\n\n  @Input('fxFlexOrder.lt-sm') set orderLtSm(val) { this._cacheInput('orderLtSm', val); };\n  @Input('fxFlexOrder.lt-md') set orderLtMd(val) { this._cacheInput('orderLtMd', val); };\n  @Input('fxFlexOrder.lt-lg') set orderLtLg(val) { this._cacheInput('orderLtLg', val); };\n  @Input('fxFlexOrder.lt-xl') set orderLtXl(val) { this._cacheInput('orderLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['order'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('order', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('order') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n\n  protected _buildCSS(value) {\n    value = parseInt(value, 10);\n    return {order: isNaN(value) ? 0 : value};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseFxDirective,\n  MediaChange,\n  MediaMonitor,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {LayoutDirective} from '../layout/layout';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive({selector: `\n  [fxFlexOffset],\n  [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md], [fxFlexOffset.lg], [fxFlexOffset.xl],\n  [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md], [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl],\n  [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm], [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`})\nexport class FlexOffsetDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n  private _directionWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxFlexOffset')       set offset(val)     { this._cacheInput('offset', val); }\n  @Input('fxFlexOffset.xs')    set offsetXs(val)   { this._cacheInput('offsetXs', val); }\n  @Input('fxFlexOffset.sm')    set offsetSm(val)   { this._cacheInput('offsetSm', val); };\n  @Input('fxFlexOffset.md')    set offsetMd(val)   { this._cacheInput('offsetMd', val); };\n  @Input('fxFlexOffset.lg')    set offsetLg(val)   { this._cacheInput('offsetLg', val); };\n  @Input('fxFlexOffset.xl')    set offsetXl(val)   { this._cacheInput('offsetXl', val); };\n\n  @Input('fxFlexOffset.lt-sm') set offsetLtSm(val) { this._cacheInput('offsetLtSm', val); };\n  @Input('fxFlexOffset.lt-md') set offsetLtMd(val) { this._cacheInput('offsetLtMd', val); };\n  @Input('fxFlexOffset.lt-lg') set offsetLtLg(val) { this._cacheInput('offsetLtLg', val); };\n  @Input('fxFlexOffset.lt-xl') set offsetLtXl(val) { this._cacheInput('offsetLtXl', val); };\n\n  @Input('fxFlexOffset.gt-xs') set offsetGtXs(val) { this._cacheInput('offsetGtXs', val); };\n  @Input('fxFlexOffset.gt-sm') set offsetGtSm(val) { this._cacheInput('offsetGtSm', val); };\n  @Input('fxFlexOffset.gt-md') set offsetGtMd(val) { this._cacheInput('offsetGtMd', val); };\n  @Input('fxFlexOffset.gt-lg') set offsetGtLg(val) { this._cacheInput('offsetGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              private _directionality: Directionality,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    this._directionWatcher =\n        this._directionality.change.subscribe(this._updateWithValue.bind(this));\n\n    this.watchParentFlow();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['offset'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * Cleanup\n   */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._directionWatcher) {\n      this._directionWatcher.unsubscribe();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('offset', 0 , (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** The flex-direction of this element's host container. Defaults to 'row'. */\n  protected _layout = 'row';\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /**\n   * If parent flow-direction changes, then update the margin property\n   * used to offset\n   */\n  protected watchParentFlow() {\n    if (this._container) {\n      // Subscribe to layout immediate parent direction changes (if any)\n      this._layoutWatcher = this._container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateWithValue();\n  }\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('offset') || 0;\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(offset): StyleDefinition {\n    let isPercent = String(offset).indexOf('%') > -1;\n    let isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(offset)) {\n      offset = offset + '%';\n    }\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const isRtl = this._directionality.value === 'rtl';\n    const layout = this._getFlowDirection(this.parentElement, true);\n    const horizontalLayoutKey = isRtl ? 'margin-right' : 'margin-left';\n\n    return isFlowHorizontal(layout) ? {[horizontalLayoutKey]: `${offset}`} :\n                                      {'margin-top': `${offset}`};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\n\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n@Directive({\n  selector: `\n  [fxFlexAlign],\n  [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md], [fxFlexAlign.lg], [fxFlexAlign.xl],\n  [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md], [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl],\n  [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm], [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`\n})\nexport class FlexAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexAlign')       set align(val)  { this._cacheInput('align', val);  };\n  @Input('fxFlexAlign.xs')    set alignXs(val)  { this._cacheInput('alignXs', val);  };\n  @Input('fxFlexAlign.sm')    set alignSm(val)  { this._cacheInput('alignSm', val); };\n  @Input('fxFlexAlign.md')    set alignMd(val)  { this._cacheInput('alignMd', val); };\n  @Input('fxFlexAlign.lg')    set alignLg(val)  { this._cacheInput('alignLg', val); };\n  @Input('fxFlexAlign.xl')    set alignXl(val)  { this._cacheInput('alignXl', val); };\n\n  @Input('fxFlexAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxFlexAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxFlexAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxFlexAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  @Input('fxFlexAlign.gt-xs') set alignGtXs(val)  { this._cacheInput('alignGtXs', val); };\n  @Input('fxFlexAlign.gt-sm') set alignGtSm(val)  { this._cacheInput('alignGtSm', val); };\n  @Input('fxFlexAlign.gt-md') set alignGtMd(val)  { this._cacheInput('alignGtMd', val); };\n  @Input('fxFlexAlign.gt-lg') set alignGtLg(val)  { this._cacheInput('alignGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('align', 'stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('align') || 'stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(align) {\n    let css = {};\n\n    // Cross-axis\n    switch (align) {\n      case 'start':\n        css['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        css['align-self'] = 'flex-end';\n        break;\n      default:\n        css['align-self'] = align;\n        break;\n    }\n\n    return css;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef} from '@angular/core';\nimport {BaseFxDirective, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\n\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `\n  [fxFill],\n  [fxFlexFill]\n`})\nexport class FlexFillDirective extends BaseFxDirective {\n  constructor(monitor: MediaMonitor,\n              public elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n    this._applyStyleToElement(FLEX_FILL_CSS);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  Self,\n} from '@angular/core';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LayoutDirective} from '../layout/layout';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n@Directive({selector: `\n  [fxLayoutAlign],\n  [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md], [fxLayoutAlign.lg],[fxLayoutAlign.xl],\n  [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md], [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl],\n  [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm], [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`})\nexport class LayoutAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxLayoutAlign')       set align(val)     { this._cacheInput('align', val); }\n  @Input('fxLayoutAlign.xs')    set alignXs(val)   { this._cacheInput('alignXs', val); }\n  @Input('fxLayoutAlign.sm')    set alignSm(val)   { this._cacheInput('alignSm', val); };\n  @Input('fxLayoutAlign.md')    set alignMd(val)   { this._cacheInput('alignMd', val); };\n  @Input('fxLayoutAlign.lg')    set alignLg(val)   { this._cacheInput('alignLg', val); };\n  @Input('fxLayoutAlign.xl')    set alignXl(val)   { this._cacheInput('alignXl', val); };\n\n  @Input('fxLayoutAlign.gt-xs') set alignGtXs(val) { this._cacheInput('alignGtXs', val); };\n  @Input('fxLayoutAlign.gt-sm') set alignGtSm(val) { this._cacheInput('alignGtSm', val); };\n  @Input('fxLayoutAlign.gt-md') set alignGtMd(val) { this._cacheInput('alignGtMd', val); };\n  @Input('fxLayoutAlign.gt-lg') set alignGtLg(val) { this._cacheInput('alignGtLg', val); };\n\n  @Input('fxLayoutAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxLayoutAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxLayoutAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxLayoutAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  /* tslint:enable */\n  constructor(\n      monitor: MediaMonitor,\n      elRef: ElementRef,\n      @Optional() @Self() container: LayoutDirective,\n      styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('align', 'start stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if ( this._layoutWatcher ) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n    this._allowStretching(value, !this._layout ? 'row' : this._layout);\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n\n    let value = this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n    this._allowStretching(value, this._layout || 'row');\n  }\n\n  protected _buildCSS(align) {\n    let css = {}, [main_axis, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    // Main axis\n    switch (main_axis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (cross_axis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'baseline':\n        css['align-items'] = 'baseline';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : this._layout || 'row',\n      'box-sizing' : 'border-box'\n    });\n  }\n\n\n  /**\n   * Update container element to 'stretch' as needed...\n   * NOTE: this is only done if the crossAxis is explicitly set to 'stretch'\n   */\n  protected _allowStretching(align, layout) {\n    let [, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    if (cross_axis == 'stretch') {\n      // Use `null` values to remove style\n      this._applyStyleToElement({\n        'box-sizing': 'border-box',\n        'max-width': !isFlowHorizontal(layout) ? '100%' : null,\n        'max-height': isFlowHorizontal(layout) ? '100%' : null\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {LayoutDirective} from './layout/layout';\nimport {LayoutGapDirective} from './layout-gap/layout-gap';\nimport {FlexDirective} from './flex/flex';\nimport {FlexOrderDirective} from './flex-order/flex-order';\nimport {FlexOffsetDirective} from './flex-offset/flex-offset';\nimport {FlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {LayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  LayoutDirective,\n  LayoutGapDirective,\n  LayoutAlignDirective,\n  FlexDirective,\n  FlexOrderDirective,\n  FlexOffsetDirective,\n  FlexFillDirective,\n  FlexAlignDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operators/filter';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable()\nexport class MatchMedia {\n  protected _registry: Map<string, MediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    this._registry = new Map<string, MediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    let mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    if (mediaQuery) {\n      this.registerQuery(mediaQuery);\n    }\n\n    return this._observable$.pipe(\n      filter((change: MediaChange) => {\n        return mediaQuery ? (change.mediaQuery === mediaQuery) : true;\n      })\n    );\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    let list = normalizeQuery(mediaQuery);\n\n    if (list.length > 0) {\n      this._prepareQueryCSS(list, this._document);\n\n      list.forEach(query => {\n        let mql = this._registry.get(query);\n        let onMQLEvent = (e: MediaQueryList) => {\n          this._zone.run(() => {\n            let change = new MediaChange(e.matches, query);\n            this._source.next(change);\n          });\n        };\n\n        if (!mql) {\n          mql = this._buildMQL(query);\n          mql.addListener(onMQLEvent);\n          this._registry.set(query, mql);\n        }\n\n        if (mql.matches) {\n          onMQLEvent(mql);  // Announce activate range for initial subscribers\n        }\n      });\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    let canListen = isPlatformBrowser(this._platformId) &&\n      !!(<any>window).matchMedia('all').addListener;\n\n    return canListen ? (<any>window).matchMedia(query) : <MediaQueryList>{\n      matches: query === 'all' || query === '',\n      media: query,\n      addListener: () => {\n      },\n      removeListener: () => {\n      }\n    };\n  }\n\n  /**\n   * For Webkit engines that only trigger the MediaQueryList Listener\n   * when there is at least one CSS selector for the respective media query.\n   *\n   * @param query string The mediaQuery used to create a faux CSS selector\n   *\n   */\n  protected _prepareQueryCSS(mediaQueries: string[], _document: Document) {\n    let list = mediaQueries.filter(it => !ALL_STYLES[it]);\n    if (list.length > 0) {\n      let query = list.join(', ');\n\n      try {\n        let styleEl = _document.createElement('style');\n\n        styleEl.setAttribute('type', 'text/css');\n        if (!styleEl['styleSheet']) {\n          let cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n` ;\n          styleEl.appendChild(_document.createTextNode(cssText));\n        }\n\n        _document.head.appendChild(styleEl);\n\n        // Store in private global registry\n        list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n\n/**\n * Always convert to unique list of queries; for iteration in ::registerQuery()\n */\nfunction normalizeQuery(mediaQuery: string | string[]): string[] {\n  return (typeof mediaQuery === 'undefined') ? [] :\n      (typeof mediaQuery === 'string') ? [mediaQuery] : unique(mediaQuery as string[]);\n}\n\n/**\n * Filter duplicate mediaQueries in the list\n */\nfunction unique(list: string[]): string[] {\n  let seen = {};\n  return list.filter(item => {\n    return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n  });\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {extendObject} from '../utils/object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null) {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {ObservableMedia, MediaService} from './observable-media';\n\n/**\n * Ensure a single global ObservableMedia service provider\n */\nexport function OBSERVABLE_MEDIA_PROVIDER_FACTORY(parentService: ObservableMedia,\n                                                  matchMedia: MatchMedia,\n                                                  breakpoints: BreakPointRegistry) {\n  return parentService || new MediaService(breakpoints, matchMedia);\n}\n/**\n *  Provider to return global service for observable service for all MediaQuery activations\n */\nexport const OBSERVABLE_MEDIA_PROVIDER = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  deps: [\n    [ new Optional(), new SkipSelf(), ObservableMedia ],\n    MatchMedia,\n    BreakPointRegistry\n  ],\n  useFactory: OBSERVABLE_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken, Optional, SkipSelf} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {DEFAULT_BREAKPOINTS} from './data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from './data/orientation-break-points';\nimport {extendObject} from '../../utils/object-extend';\nimport {mergeByAlias, validateSuffixes} from './breakpoint-tools';\nimport {\n  ADD_ORIENTATION_BREAKPOINTS,\n  BREAKPOINT,\n  DISABLE_DEFAULT_BREAKPOINTS,\n} from '../tokens/breakpoint-token';\n\n\n/**\n * Options to identify which breakpoint types to include as part of\n * a BreakPoint provider\n * @deprecated\n * @deletion-target v6.0.0-beta.15\n */\nexport interface BreakPointProviderOptions {\n  /**\n   * include pre-configured, internal default breakpoints.\n   * @default 'true'\n   */\n  defaults ?: boolean;\n  /**\n   * include pre-configured, internal orientations breakpoints.\n   * @default 'false'\n   */\n  orientations ?: boolean;\n}\n\n/**\n * Add new custom items to the default list or override existing default with custom overrides\n * @deprecated\n * @deletion-target v6.0.0-beta.15\n */\nexport function buildMergedBreakPoints(_custom?: BreakPoint[],\n                                       options?: BreakPointProviderOptions) {\n  options = extendObject({}, {\n        defaults: true,         // exclude pre-configured, internal default breakpoints\n        orientation: false      // exclude pre-configured, internal orientations breakpoints\n  }, options || {});\n\n  return () => {\n    // Order so the defaults are loaded last; so ObservableMedia will report these last!\n    let defaults = (options && options.orientations) ?\n      ORIENTATION_BREAKPOINTS.concat(DEFAULT_BREAKPOINTS) : DEFAULT_BREAKPOINTS;\n\n    return (options && options.defaults) ?\n      mergeByAlias(defaults, _custom || []) : mergeByAlias(_custom || []);\n  };\n}\n\n/**\n *  Ensure that only a single global BreakPoint list is instantiated...\n *  @deprecated\n *  @deletion-target v6.0.0-beta.15\n */\nexport function DEFAULT_BREAKPOINTS_PROVIDER_FACTORY() {\n  return validateSuffixes(DEFAULT_BREAKPOINTS);\n}\n/**\n * Default Provider that does not support external customization nor provide\n * the extra extended breakpoints:   \"handset\", \"tablet\", and \"web\"\n *\n *  NOTE: !! breakpoints are considered to have unique 'alias' properties,\n *        custom breakpoints matching existing breakpoints will override the properties\n *        of the existing (and not be added as an extra breakpoint entry).\n *        [xs, gt-xs, sm, gt-sm, md, gt-md, lg, gt-lg, xl]\n * @deprecated\n * @deletion-target v6.0.0-beta.15\n */\nexport const DEFAULT_BREAKPOINTS_PROVIDER = {\n  provide: BREAKPOINTS,\n  useFactory: DEFAULT_BREAKPOINTS_PROVIDER_FACTORY\n};\n\n/**\n * Factory that combines the configured breakpoints into one array and then merges\n * them using a utility function\n */\nexport function BREAKPOINTS_PROVIDER_FACTORY(parentBreakpoints: BreakPoint[],\n                                             breakpoints: (BreakPoint|BreakPoint[])[],\n                                             disableDefaults: boolean,\n                                             addOrientation: boolean) {\n  const bpFlattenArray = [].concat.apply([], (breakpoints || [])\n    .map(v => Array.isArray(v) ? v : [v]));\n  const builtIns = DEFAULT_BREAKPOINTS.concat(addOrientation ? ORIENTATION_BREAKPOINTS : []);\n  return parentBreakpoints || disableDefaults ?\n     mergeByAlias(bpFlattenArray) : mergeByAlias(builtIns, bpFlattenArray);\n}\n\n/**\n * Provider that combines the provided extra breakpoints with the default and\n * orientation breakpoints based on configuration\n */\nexport const BREAKPOINTS_PROVIDER = {\n  provide: BREAKPOINTS,\n  useFactory: BREAKPOINTS_PROVIDER_FACTORY,\n  deps: [\n    [new Optional(), new SkipSelf(), BREAKPOINTS],\n    [new Optional(), BREAKPOINT],\n    [new Optional(), DISABLE_DEFAULT_BREAKPOINTS],\n    [new Optional(), ADD_ORIENTATION_BREAKPOINTS],\n  ]\n};\n\n/**\n * Use with FlexLayoutModule.CUSTOM_BREAKPOINTS_PROVIDER_FACTORY!\n * @deprecated\n * @deletion-target v6.0.0-beta.15\n */\nexport function CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(custom?: BreakPoint[],\n                                                    options?: BreakPointProviderOptions) {\n  return {\n    provide: <InjectionToken<BreakPoint[]>>BREAKPOINTS,\n    useFactory: buildMergedBreakPoints(custom, options)\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken, NgZone, Optional, PLATFORM_ID, SkipSelf} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media/match-media';\n\n/**\n * Ensure a single global service provider\n */\nexport function MATCH_MEDIA_PROVIDER_FACTORY(parentMedia: MatchMedia,\n                                             ngZone: NgZone,\n                                             platformId: Object,\n                                             _document: Document) {\n  return parentMedia || new MatchMedia(ngZone, platformId, _document);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const MATCH_MEDIA_PROVIDER = {\n  provide: MatchMedia,\n  deps: [\n    [new Optional(), new SkipSelf(), MatchMedia],\n    NgZone,\n    <InjectionToken<Object>>PLATFORM_ID,\n    <InjectionToken<Document>>DOCUMENT,\n  ],\n  useFactory: MATCH_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {StylesheetMap} from './stylesheet-map';\n\n/**\n * Ensure a single global service provider\n */\nexport function STYLESHEET_MAP_PROVIDER_FACTORY(parentSheet: StylesheetMap) {\n  return parentSheet || new StylesheetMap();\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const STYLESHEET_MAP_PROVIDER = {\n  provide: StylesheetMap,\n  deps: [\n    [new Optional(), new SkipSelf(), StylesheetMap],\n  ],\n  useFactory: STYLESHEET_MAP_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\n\n/**\n * Ensure a single global service provider\n */\nexport function MEDIA_MONITOR_PROVIDER_FACTORY(parentMonitor: MediaMonitor,\n                                               breakpoints: BreakPointRegistry,\n                                               matchMedia: MatchMedia) {\n  return parentMonitor || new MediaMonitor(breakpoints, matchMedia);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const MEDIA_MONITOR_PROVIDER = {\n  provide : MediaMonitor,\n  deps : [\n    [ new Optional(), new SkipSelf(), MediaMonitor ],\n    BreakPointRegistry,\n    MatchMedia,\n  ],\n  useFactory : MEDIA_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n    new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable()\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint | null {\n    return this._registry.find(bp => bp.alias == alias) || null;\n  }\n\n  findByQuery(query: string): BreakPoint | null {\n    return this._registry.find(bp => bp.mediaQuery == query) || null;\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => !!it.suffix ? it.suffix : '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string;\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operators/filter';\nimport {map} from 'rxjs/operators/map';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\nimport {mergeAlias} from '../add-alias';\n\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n */\n@Injectable()\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    let items: BreakPoint[] = this._breakpoints.overlappings.reverse();\n    return items.filter((bp: BreakPoint) => {\n      return this._matchMedia.isActive(bp.mediaQuery);\n    });\n  }\n\n  get active(): BreakPoint | null {\n    let found: BreakPoint | null = null, items = this.breakpoints.reverse();\n    items.forEach(bp => {\n      if (bp.alias !== '') {\n        if (!found && this._matchMedia.isActive(bp.mediaQuery)) {\n          found = bp;\n        }\n      }\n    });\n\n    let first = this.breakpoints[0];\n    return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias?: string): Observable<MediaChange> {\n    let bp = this._breakpoints.findByAlias(alias || '') ||\n      this._breakpoints.findByQuery(alias || '');\n    let hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    let media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return media$.pipe(\n      map(change => mergeAlias(change, bp)),\n      filter(hasAlias)\n    );\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    let queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {Observable, Subscribable} from 'rxjs/Observable';\nimport {map} from 'rxjs/operators/map';\nimport {filter} from 'rxjs/operators/filter';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {mergeAlias} from '../add-alias';\nimport {BreakPoint} from '../breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import {filter} from 'rxjs/operators/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .pipe(\n *          filter((change:MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable()\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias): boolean {\n    let query = this._toMediaQuery(alias);\n    return this.mediaWatcher.isActive(query);\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(next?: (value: MediaChange) => void,\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    return this.observable$.subscribe(next, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    let queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const self = this;\n    const media$ = this.mediaWatcher.observe();\n    const activationsOnly = (change: MediaChange) => {\n      return change.matches === true;\n    };\n    const addAliasInformation = (change: MediaChange) => {\n      return mergeAlias(change, this._findByQuery(change.mediaQuery));\n    };\n    const excludeOverlaps = (change: MediaChange) => {\n      let bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(self.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return media$.pipe(\n      filter(activationsOnly),\n      filter(excludeOverlaps),\n      map(addAliasInformation)\n    );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query) {\n    let bp: BreakPoint | null = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private observable$: Observable<MediaChange>;\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(min-width: 0px) and (max-width: 599px)'\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)'\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)'\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)'\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)'\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)'\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)'\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)'\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)'\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)'\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1920px)'\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)'\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientations: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientations: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientations: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientations: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientations: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientations: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const DISABLE_DEFAULT_BREAKPOINTS = new InjectionToken<boolean>(\n  'Flex Layout token, disable the default breakpoints');\n\nexport const ADD_ORIENTATION_BREAKPOINTS = new InjectionToken<boolean>(\n  'Flex Layout token, add the orientation breakpoints');\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]>(\n  'Flex Layout token, collect all breakpoints into one provider');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable()\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>('FlexLayoutServerLoaded');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\nexport const DISABLE_VENDOR_PREFIXES = new InjectionToken<boolean>(\n  'Flex Layout token, whether to add vendor prefix styles inline for elements');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {DISABLE_VENDOR_PREFIXES} from '../tokens/vendor-prefixes-token';\n\n@Injectable()\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId,\n              @Optional() @Inject(DISABLE_VENDOR_PREFIXES) private noVendorPrefixes: boolean) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement, style: StyleDefinition, value?: string | number) {\n    let styles = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.noVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.noVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    if (value === FALLBACK_STYLE) {\n      value = '';\n    }\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return element.style[styleName] || element.style.getPropertyValue(styleName) || '';\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : FALLBACK_STYLE;\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: {}, element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n      values.sort();\n      for (let value of values) {\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          element.style.setProperty(key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n\nconst FALLBACK_STYLE = 'block';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor/media-monitor';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {OBSERVABLE_MEDIA_PROVIDER} from './observable-media/observable-media-provider';\nimport {BREAKPOINTS_PROVIDER} from './breakpoints/break-points-provider';\nimport {MATCH_MEDIA_PROVIDER} from './match-media/match-media-provider';\nimport {BROWSER_PROVIDER} from './browser-provider';\nimport {StyleUtils} from './style-utils/style-utils';\nimport {STYLESHEET_MAP_PROVIDER} from './stylesheet-map/stylesheet-map-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [\n    BREAKPOINTS_PROVIDER,    // Supports developer overrides of list of known breakpoints\n    BreakPointRegistry,      // Registry of known/used BreakPoint(s)\n    MATCH_MEDIA_PROVIDER,    // Low-level service to publish observables w/ window.matchMedia()\n    MediaMonitor,            // MediaQuery monitor service observes all known breakpoints\n    OBSERVABLE_MEDIA_PROVIDER,  // easy subscription injectable `media$` matchMedia observable]\n    STYLESHEET_MAP_PROVIDER,\n    StyleUtils,\n    BROWSER_PROVIDER,\n  ]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from './module';\n\n\n/**\n * @deprecated use Core Module instead\n * @deletion-target 5.0.0-beta.15\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n@NgModule({\n  imports: [CoreModule],\n  exports: [CoreModule],\n})\nexport class MediaQueriesModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\nexport const ADD_FLEX_STYLES = new InjectionToken<boolean>(\n  'Flex Layout token, should flex stylings be applied to parents automatically');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs/Subscription';\nimport {map} from 'rxjs/operators/map';\n\nimport {MediaChange, MediaQuerySubscriber} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\n\nexport declare type SubscriptionList = Subscription[];\n\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nexport class ResponsiveActivation {\n  private _subscribers: SubscriptionList = [];\n  private _activatedInputKey: string;\n  private _registryMap: BreakPointX[];\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n    this._registryMap = this._buildRegistryMap();\n    this._subscribers = this._configureChangeObservers();\n  }\n\n  /**\n   * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n   * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n   * important when several media queries are 'registered' and from which, the browser uses the\n   * first matching media query.\n   */\n  get registryFromLargest(): BreakPointX[] {\n    return [...this._registryMap].reverse();\n  }\n\n  /**\n   * Accessor to the DI'ed directive property\n   * Each directive instance has a reference to the MediaMonitor which is\n   * used HERE to subscribe to mediaQuery change notifications.\n   */\n  get mediaMonitor(): MediaMonitor {\n    return this._mediaMonitor;\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    let key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  hasKeyValue(key) {\n    let value = this._options.inputKeys[key];\n    return typeof value !== 'undefined';\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach((link: Subscription) => {\n      link.unsubscribe();\n    });\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): SubscriptionList {\n    let subscriptions: Subscription[] = [];\n\n    this._registryMap.forEach((bp: BreakPointX) => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        let buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n          this.mediaMonitor\n              .observe(bp.alias)\n              .pipe(map(buildChanges))\n              .subscribe(change => {\n                this._onMonitorEvents(change);\n              })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this.mediaMonitor.breakpoints\n        .map(bp => {\n          return <BreakPointX> extendObject({}, bp, {\n            baseKey: this._options.baseKey,             // e.g. layout, hide, self-align, flex-wrap\n            key: this._options.baseKey + bp.suffix  // e.g.  layoutGtSm, layoutMd, layoutGtLg\n          });\n        })\n        .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property == this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                     // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey == currentKey) ? '' : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey) {\n    let isMissingKey = (key) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      this.mediaMonitor.activeOverlaps.some(bp => {\n        let key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  SimpleChange,\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  StyleUtils,\n} from '../style-utils/style-utils';\n\nimport {ResponsiveActivation, KeyOptions} from '../responsive-activation/responsive-activation';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {MediaQuerySubscriber} from '../media-change';\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective implements OnDestroy, OnChanges {\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access to host element's parent DOM node\n   */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  protected get nativeElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._display = this._getDisplayStyle();\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseFxDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    delete this._mediaMonitor;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows us to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source: HTMLElement = this.nativeElement): string {\n    const query = 'display';\n    return this._styler.lookupStyle(source, query);\n  }\n\n  /**\n   * Quick accessor to raw attribute value on the target DOM element\n   */\n  protected _getAttributeValue(attribute: string,\n                               source: HTMLElement = this.nativeElement): string {\n    return this._styler.lookupAttributeValue(source, attribute);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    let value = 'row';\n    let hasInlineValue = '';\n\n    if (target) {\n      [value, hasInlineValue] = this._styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this._styler.applyStyleToElements(style, elements);\n      }\n    }\n\n    return value.trim() || 'row';\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 element: HTMLElement = this.nativeElement) {\n    this._styler.applyStyleToElement(element, style, value);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[]) {\n    this._styler.applyStyleToElements(style, elements);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      if (!!key) {\n        this._inputMap[key] = source;\n      }\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(\n          keyOptions,\n          this._mediaMonitor,\n          (change) => onMediaQueryChange(change)\n      );\n    }\n    return this._mqActivation;\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /**\n   * Does this directive have 1 or more responsive keys defined\n   * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n   */\n  hasResponsiveAPI(baseKey: string) {\n    const totalKeys = Object.keys(this._inputMap).length;\n    const baseValue = this._inputMap[baseKey];\n    return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n  }\n\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** Original dom Elements CSS display style */\n  protected _display;\n\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {ResponsiveActivation} from '../responsive-activation/responsive-activation';\nimport {MediaQuerySubscriber} from '../media-change';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {StyleUtils} from '../style-utils/style-utils';\n\n\n/**\n * Adapter to the BaseFxDirective abstract class so it can be used via composition.\n * @see BaseFxDirective\n */\nexport class BaseFxDirectiveAdapter extends BaseFxDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseFxDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation;\n  }\n\n  /**\n   * BaseFxDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n    super(_mediaMonitor, _elementRef, _styler);\n  }\n\n  /**\n    * Does this directive have 1 or more responsive keys defined\n    * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n    */\n  hasResponsiveAPI() {\n   return super.hasResponsiveAPI(this._baseKey);\n  }\n\n  /**\n   * @see BaseFxDirective._queryInput\n   */\n  queryInput(key) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error(\n        `Invalid class value '${key}' provided. Did you want to cache the raw value?`\n      );\n    }\n  }\n\n  /**\n   * @see BaseFxDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    if (key) {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source ? source.join(' ') : '';\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes: string[] = [];\n    if (source) {\n      for (let prop in source) {\n        if (!!source[prop]) {\n          classes.push(prop);\n        }\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n    this._actives = [];\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList, _) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias) {\n    let bp = this._breakpoints.findByAlias(queryOrAlias);\n    if (bp) {\n      queryOrAlias = bp.mediaQuery;\n    }\n    return queryOrAlias;\n  }\n\n  /**\n   * Manually activate any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      let bp = this._breakpoints.findByQuery(mediaQuery);\n      let alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activate of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases) {\n    let activate = (alias) => {\n      let bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery) {\n    let mql = <MockMediaQueryList> this._registry.get(mediaQuery);\n    let alreadyAdded = this._actives.reduce((found, it) => {\n      return found || (mql && (it.media === mql.media));\n    }, false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current Mock MQLs */\n  private _deactivateAll() {\n    if (this._actives.length) {\n      // Deactivate all current MQLs and reset the buffer\n      for (const it of this._actives) {\n        it.deactivate();\n      }\n      this._actives = [];\n    }\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return (this._actives.length > 0);\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\nimport {MediaChange} from '../media-change';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n    this._registry = new Map<string, ServerMediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n"],"names":["Object","defineProperty","ImgSrcDirective","prototype","val","this","_cacheInput","ngOnInit","_this","_super","call","hasResponsiveKeys","_listenForMediaQueryChanges","defaultSrc","_updateSrcFor","ngOnChanges","hasInitialized","url","activatedValue","isPlatformServer","_platformId","_serverModuleLoaded","_styler","applyStyleToElement","nativeElement","content","setAttribute","String","cacheDefaultSrc","value","_queryInput","keys","_inputMap","length","type","Directive","args","selector","ElementRef","MediaMonitor","StyleUtils","decorators","Inject","PLATFORM_ID","undefined","Optional","SERVER_TOKEN","srcBase","Input","srcXs","srcSm","srcMd","srcLg","srcXl","srcLtSm","srcLtMd","srcLtLg","srcLtXl","srcGtXs","srcGtSm","srcGtMd","srcGtLg","BaseFxDirective","ClassDirective","monitor","_iterableDiffers","_keyValueDiffers","_ngEl","_renderer","_ngClassInstance","_configureAdapters","tslib_1.__extends","_base","cacheInput","ngClass","queryInput","klass","changes","activeKey","mqActivation","activatedInput","_configureMQListener","ngDoCheck","ngOnDestroy","BaseFxDirectiveAdapter","NgClass","baseKey","fallbackValue","listenForMediaQueryChanges","IterableDiffers","KeyValueDiffers","Renderer2","Self","ngClassBase","klazz","ngClassXs","ngClassSm","ngClassMd","ngClassLg","ngClassXl","ngClassLtSm","ngClassLtMd","ngClassLtLg","ngClassLtXl","ngClassGtXs","ngClassGtSm","ngClassGtMd","ngClassGtLg","FALSY","ShowHideDirective","layout","elRef","styleUtils","platformId","serverModuleLoaded","_layoutWatcher","layout$","subscribe","_updateWithValue","negativeOf","_getDisplayStyle","_mqActivation","_getDefaultVal","unsubscribe","shouldShow","_validateTruthy","_applyStyleToElement","_buildCSS","style","setProperty","show","display","_display","indexOf","LayoutDirective","showXs","showSm","showMd","showLg","showXl","showLtSm","showLtMd","showLtLg","showLtXl","showGtXs","showGtSm","showGtMd","showGtLg","hide","hideXs","hideSm","hideMd","hideLg","hideXl","hideLtSm","hideLtMd","hideLtLg","hideLtXl","hideGtXs","hideGtSm","hideGtMd","hideGtLg","NgStyleKeyValue","key","noQuotes","replace","trim","ngStyleUtils","getType","buildRawList","buildMapFromList","buildMapFromSet","StyleDirective","_sanitizer","_differs","_ngStyleInstance","ngStyle","NgStyle","_buildCacheInterceptor","_fallbackToStyle","bind","source","cacheRaw","merge","styles","_buildStyleMap","extendObject","inputMap","sanitizer","sanitize","SecurityContext","STYLE","_","ngStyleBase","_getAttributeValue","DomSanitizer","ngStyleXs","ngStyleSm","ngStyleMd","ngStyleLg","ngStyleXl","ngStyleLtSm","ngStyleLtMd","ngStyleLtLg","ngStyleLtXl","ngStyleGtXs","ngStyleGtSm","ngStyleGtMd","ngStyleGtLg","ALL_DIRECTIVES","NgModule","imports","CoreModule","declarations","slice","exports","ExtendedModule","SERVER_PROVIDERS","provide","BEFORE_APP_SERIALIZED","useFactory","FLEX_SSR_SERIALIZER_FACTORY","deps","StylesheetMap","MatchMedia","DOCUMENT","BREAKPOINTS","multi","useValue","useClass","ServerMatchMedia","nextId","IS_DEBUG_MODE","FlexLayoutServerModule","providers","VERSION","Version","FlexLayoutModule","console","warn","provideBreakPoints","breakpoints","options","ngModule","CUSTOM_BREAKPOINTS_PROVIDER_FACTORY","orientations","FlexModule","_updateWithDirection","css","buildLayoutCSS","_announcer","next","layoutXs","layoutSm","layoutMd","layoutLg","layoutXl","layoutGtXs","layoutGtSm","layoutGtMd","layoutGtLg","layoutLtSm","layoutLtMd","layoutLtLg","layoutLtXl","LayoutGapDirective","container","_zone","_directionality","_layout","_onLayoutChange","_directionWatcher","change","ngAfterContentInit","_watchContentChanges","_observer","disconnect","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","observe","childList","direction","toLowerCase","LAYOUT_VALUES","find","x","items","childrenNodes","filter","el","nodeType","sort","a","b","orderA","lookupStyle","orderB","isNaN","lastItem","pop","_applyStyleToElements","margins","margin-left","margin-right","margin-top","margin-bottom","NgZone","Directionality","gap","gapXs","gapSm","gapMd","gapLg","gapXl","gapGtXs","gapGtSm","gapGtMd","gapGtLg","gapLtSm","gapLtMd","gapLtLg","gapLtXl","FlexDirective","_container","addFlexStyles","_updateStyle","flexBasis","basis","parts","validateBasis","_validateValue","apply","grow","shrink","_getFlowDirection","parentElement","max","isFlowHorizontal","min","hasCalc","usingCalc","isPercent","hasUnits","isPx","isValue","isFixed","clearStyles","max-width","max-height","min-width","min-height","MIN_FLEX","flex-grow","flex-shrink","flex-basis","flex","box-sizing","SkipSelf","ADD_FLEX_STYLES","flexXs","flexSm","flexMd","flexLg","flexXl","flexGtXs","flexGtSm","flexGtMd","flexGtLg","flexLtSm","flexLtMd","flexLtLg","flexLtXl","FlexOrderDirective","parseInt","order","orderXs","orderSm","orderMd","orderLg","orderXl","orderGtXs","orderGtSm","orderGtMd","orderGtLg","orderLtSm","orderLtMd","orderLtLg","orderLtXl","FlexOffsetDirective","watchParentFlow","offset","isRtl","horizontalLayoutKey","_a","offsetXs","offsetSm","offsetMd","offsetLg","offsetXl","offsetLtSm","offsetLtMd","offsetLtLg","offsetLtXl","offsetGtXs","offsetGtSm","offsetGtMd","offsetGtLg","FlexAlignDirective","align","alignXs","alignSm","alignMd","alignLg","alignXl","alignLtSm","alignLtMd","alignLtLg","alignLtXl","alignGtXs","alignGtSm","alignGtMd","alignGtLg","FLEX_FILL_CSS","margin","width","height","FlexFillDirective","LayoutAlignDirective","_allowStretching","split","main_axis","cross_axis","flex-direction","BidiModule","_elRef","_monitor","getAttribute","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","Array","from","querySelectorAll","CLASS_NAME","forEach","classList","contains","parentNode","removeChild","className","normalizeQuery","mediaQuery","unique","list","seen","item","hasOwnProperty","dest","sources","_i","arguments","TypeError","sources_1","mergeAlias","mqAlias","alias","suffix","OBSERVABLE_MEDIA_PROVIDER_FACTORY","parentService","matchMedia","MediaService","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","map","join","validateSuffixes","bp","overlapping","mergeByAlias","defaults","custom","dict","k","buildMergedBreakPoints","_custom","orientation","ORIENTATION_BREAKPOINTS","concat","DEFAULT_BREAKPOINTS","DEFAULT_BREAKPOINTS_PROVIDER_FACTORY","BREAKPOINTS_PROVIDER_FACTORY","parentBreakpoints","disableDefaults","addOrientation","bpFlattenArray","v","isArray","builtIns","MATCH_MEDIA_PROVIDER_FACTORY","parentMedia","ngZone","applyCssPrefixes","target","STYLESHEET_MAP_PROVIDER_FACTORY","parentSheet","validateValue","buildCSS","wrap","inline","INLINE","validateWrapValue","flex-wrap","MEDIA_MONITOR_PROVIDER_FACTORY","parentMonitor","j","_validateCalcValue","substring","matches","substr","calc","what","Set","delimiter","sanitizeValue","stringToKeyValue","entry","reduce","keyValuesToMap","push","generateStaticFlexLayoutStyles","serverSheet","classMap","Map","defaultStyles","stylesheet","styleText","generateCss","reverse","i","activateBreakpoint","size","deactivateBreakpoint","styleTag","createElement","add","textContent","head","appendChild","keyVals","getClassName","format","result","formatSegment","asPrefix","get","set","setPrototypeOf","__proto__","p","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","InjectionToken","BreakPointRegistry","_registry","overlaps","nonOverlaps","findByAlias","findByQuery","query","Injectable","MediaChange","clone","_source","BehaviorSubject","_observable$","asObservable","isActive","mql","registerQuery","pipe","_prepareQueryCSS","onMQLEvent","e","run","_buildMQL","addListener","media","removeListener","mediaQueries","ALL_STYLES","styleEl_1","cssText","createTextNode","mq","error","_breakpoints","_matchMedia","_registerBreakpoints","overlappings","found","hasAlias","queries","sortedItems","ObservableMedia","mediaWatcher","filterOverlaps","_registerBreakPoints","observable$","_buildObservable","_toMediaQuery","complete","self","media$","activationsOnly","addAliasInformation","_findByQuery","excludeOverlaps","_findByAlias","OBSERVABLE_MEDIA_PROVIDER","RESPONSIVE_ALIASES","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","DISABLE_DEFAULT_BREAKPOINTS","ADD_ORIENTATION_BREAKPOINTS","BREAKPOINT","DEFAULT_BREAKPOINTS_PROVIDER","BREAKPOINTS_PROVIDER","MATCH_MEDIA_PROVIDER","addStyleToElement","element","clear","getStyleForElement","styleName","DISABLE_VENDOR_PREFIXES","_serverStylesheet","noVendorPrefixes","_applyMultiValueStyleToElement","applyStyleToElements","elements","getFlowDirection","FALLBACK_STYLE","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","inlineOnly","getComputedStyle","values","values_1","STYLESHEET_MAP_PROVIDER","MediaQueriesModule","KeyOptions","defaultValue","inputKeys","ResponsiveActivation","_options","_mediaMonitor","_onMediaChanges","_subscribers","_registryMap","_buildRegistryMap","_configureChangeObservers","_activatedInputKey","activatedInputKey","hasKeyValue","_lookupKeyValue","destroy","link","subscriptions","_keyInUse","buildChanges","property","mediaMonitor","_onMonitorEvents","_calculateActivatedValue","current","currentKey","newKey","_validateInputKey","inputKey","isMissingKey","activeOverlaps","_elementRef","_hasInitialized","previousVal","SimpleChange","Error","fallbackVal","addIfMissing","prop","onMediaQueryChange","keyOptions","obj","children","buffer","hasResponsiveAPI","_baseKey","mqa","_cacheInputRaw","_cacheInputArray","_cacheInputObject","_cacheInputString","classes","MockMatchMedia","autoRegisterQueries","useOverlaps","_actives","clearAll","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","deactivate","has","MockMediaQueryList","_mediaQuery","_isActive","_listeners","callback","listener","MockMatchMediaProvider","ServerMediaQueryList","lookupBreakpoint","MEDIA_MONITOR_PROVIDER","ReplaySubject"],"mappings":"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"}