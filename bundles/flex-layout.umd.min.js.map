{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../src/lib/grid/grid-align/grid-align.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/add-alias.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/match-media/server-match-media.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('7.0.0-beta.23-f4eb901');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../breakpoints/breakpoint-tools';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue('', this.defaultSrc);\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue('', this.nativeElement.getAttribute('src') || '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue() {\n    let url = this.activatedValue || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', String(url));\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected iterableDiffers: IterableDiffers,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(\n        this.iterableDiffers, this.keyValueDiffers, this.elementRef, this.renderer\n      );\n    }\n    this.init();\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  KeyValueDiffers,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.keyValueDiffers, this.elementRef, this.renderer);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop();\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem!]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  let key, margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n\n  switch (parent.layout) {\n    case 'column':\n      key = 'margin-bottom';\n      break;\n    case 'column-reverse':\n      key = 'margin-top';\n      break;\n    case 'row':\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n    case 'row-reverse':\n      key = parent.directionality === 'rtl' ? 'margin-right' : 'margin-left';\n      break;\n    default :\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n  }\n  margins[key] = gapValue;\n\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue, this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    if (layout === 'row') {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse') {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column') {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse') {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    this.layout = layout.split(' ')[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OptionalBreakPoint} from './break-point-registry';\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n/** HOF to sort the breakpoints by priority */\nexport function sortDescendingPriority(a: OptionalBreakPoint, b: OptionalBreakPoint): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\nexport function sortAscendingPriority(a: BreakPoint, b: BreakPoint): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize with 'all' so all non-responsive APIs trigger style updates */\n  protected _source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n\n  protected _registry = new Map<string, MediaQueryList>();\n  protected _observable$ = this._source.asObservable();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this._source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this._source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this._registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this._registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<any>window).matchMedia('all').addListener;\n\n  return canListen ? (<any>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {extendObject} from '../utils/object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  return extendObject(dest || {}, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../breakpoints/breakpoint-tools';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is not supported; so 'print' mediaQuery activations must be used.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else {\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '') {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: []\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n  'Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    const val = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n    if (val !== undefined) {\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, val);\n    }\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 5000px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from './breakpoint-tools';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  protected _registry: Map<string, MockMediaQueryList> = new Map();\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql = this._registry.get(mediaQuery);\n    const alreadyAdded = this._actives\n        .reduce((found, it) => (found || (mql ? (it.media === mql.media) : false)), false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this._actives.forEach(it => it.deactivate());\n    this._actives = [];\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this._actives.length > 0;\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | AddEventListenerOptions): void;\n  addEventListener(_: string,\n                   __: EventListenerOrEventListenerObject,\n                   ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | EventListenerOptions): void;\n  removeEventListener(_: string,\n                      __: EventListenerOrEventListenerObject,\n                      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList> = new Map();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\n\n/**\n * Class internalizes a MatchMedia service and exposes an Observable interface.\n\n * This exposes an Observable with a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the MediaObserver\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.media$` with syntax like mediaObserver.media$.map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const onChange = (change: MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g. mediaObserver.media$.subscribe(onChange);\n *\n *      mediaObserver.media$()\n *        .pipe(\n *          filter((change: MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver {\n  /**\n   * Whether to announce gt-<xxx> breakpoint activations\n   */\n  filterOverlaps = true;\n  readonly media$: Observable<MediaChange>;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n      protected mediaWatcher: MatchMedia,\n      protected hook: PrintHook) {\n    this.media$ = this.watchActivations();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    return this.mediaWatcher.isActive(this.toMediaQuery(alias));\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange> {\n    const locator = this.breakpoints;\n    const onlyActivations = (change: MediaChange) => change.matches;\n    const excludeUnknown = (change: MediaChange) => change.mediaQuery !== '';\n    const excludeCustomPrints = (change: MediaChange) => !change.mediaQuery.startsWith('print');\n    const excludeOverlaps = (change: MediaChange) => {\n      const bp = locator.findByQuery(change.mediaQuery);\n      return !bp ? true : !(this.filterOverlaps && bp.overlapping);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      if (this.hook.isPrintEvent(change)) {\n        // replace with aliased substitute (if configured)\n        return this.hook.updateEvent(change);\n      }\n      let bp: OptionalBreakPoint = locator.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     *\n     * Inject associated (if any) alias information into the MediaChange event\n     * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     * - Exclude print activations that do not have an associated mediaQuery\n     */\n    return this.mediaWatcher.observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter(onlyActivations),\n            filter(excludeOverlaps),\n            map(replaceWithPrintAlias),\n            filter(excludeCustomPrints),\n            filter(excludeUnknown)\n        );\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private toMediaQuery(query: string) {\n    const locator = this.breakpoints;\n    const bp = locator.findByAlias(query) || locator.findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value.trim();\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n"],"names":["_this","inputs","tslib_1.__extends","DefaultGridAlignColumnsDirective","_super","type","Directive","args","selector","GridAlignColumnsDirective","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignRowsStyleBuilder","prototype","buildStyles","input","parent","buildCss","inline","Injectable","providedIn","StyleBuilder","GridAlignRowsDirective","elementRef","styleBuilder","styler","marshal","call","this","DIRECTIVE_KEY","_inline","init","Object","defineProperty","val","coerceBooleanProperty","updateWithValue","value","styleCache","alignRowsInlineCache","alignRowsCache","addStyles","ElementRef","decorators","Optional","StyleUtils","MediaMarshaller","Input","BaseDirective2","Map","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","split","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","ALL_DIRECTIVES","DefaultGridAlignDirective","NgModule","imports","CoreModule","declarations","slice","exports","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","tslib_1.__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","FlexModule","ExtendedModule","Boolean","Inject","PLATFORM_ID","element","key","updateElement","builders","updateMap","get","updateFn","subject","next","releaseElement","watcherMap","forEach","s","unsubscribe","delete","elementMap","_","buildElementKeyMap","keyMap","elementKeyMap","Set","set","add","watchExtraTriggers","triggers","length","watchers","newSubscription","merge","apply","subscribe","currentValue","getValue","findByQuery","query","getActivatedValues","bpMap","i","activatedBreakpoints","activatedBp","valueMap","alias","undefined","has","lastHope","observeActivations","target","queries","items","bp","mediaQuery","matchMedia","observe","hook","withPrintQuery","pipe","tap","interceptEvents","filter","blockPropagation","onMediaChange","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","setValue","nativeElement","getAttribute","setAttribute","activatedValue","String","src","DefaultImgSrcDirective","ClassDirective","iterableDiffers","keyValueDiffers","renderer","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","IterableDiffers","KeyValueDiffers","Renderer2","Self","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","hasValue","DISPLAY_MAP","getDisplayStyle","defaultValue","triggerUpdate","ngOnChanges","changes","keys","inputKey","inputValue","shouldShow","trackValue","takeUntil","destroySubject","addFlexToParent","lookupStyle","style","setProperty","WeakMap","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","DomSanitizer","DefaultStyleDirective","INLINE","LAYOUT_VALUES","LayoutStyleBuilder","buildLayoutCSS","LayoutDirective","layoutCache","DefaultLayoutDirective","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","sideEffect","_styles","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapDirective","zone","layout","observerSubject","Subject","extraTriggers","change","asObservable","onLayoutChange","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","matcher","find","x","childrenNodes","el","nodeType","willDisplay","sort","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","DefaultLayoutGapDirective","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","FlexDirective","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","DefaultFlexDirective","FlexOrderStyleBuilder","order","parseInt","FlexOrderDirective","flexOrderCache","DefaultFlexOrderDirective","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","DefaultFlexOffsetDirective","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","DefaultFlexAlignDirective","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","_input","FlexFillDirective","flexFillCache","LayoutAlignStyleBuilder","align","mainAxis","crossAxis","flex-direction","LayoutAlignDirective","layoutAlignHorizontalCache","layoutAlignHorizontalRevCache","layoutAlignVerticalCache","layoutAlignVerticalRevCache","DefaultLayoutAlignDirective","BidiModule","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","GridAlignDirective","alignCache","GridAlignColumnsStyleBuilder","alignColumnsInlineCache","alignColumnsCache","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","dest","sources","_i","arguments","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","suffix","overlapping","mergeByAlias","defaults","custom","dict","k","sortDescendingPriority","priorityA","priority","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","matches","media","removeListener","mergeAlias","mqAlias","isPrintBreakPoint","PRINT","applyCssPrefixes","j","_validateCalcValue","substr","calc","initBuilderMap","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","reduce","keyValuesToMap","push","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","__assign","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","MediaChange","property","clone","stylesheet","StylesheetMap","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","InjectionToken","factory","mru","activatedAlias","complete","builder","useCache","shouldCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","concat","isArray","findByMap","findByAlias","findWithPredicate","searchFn","response","_zone","_platformId","_source","BehaviorSubject","_registry","_observable$","isActive","mql","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","_actives","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","found","deactivate","MockMediaQueryList","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","useClass","ServerMediaQueryList","ServerMatchMedia","activateBreakpoint","lookupBreakpoint","deactivateBreakpoint","BREAKPOINT_PRINT","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","startPrinting","updateStyles","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","mediaWatcher","filterOverlaps","media$","watchActivations","toMediaQuery","buildObservable","locator","onlyActivations","excludeUnknown","excludeCustomPrints","excludeOverlaps","replaceWithPrintAlias","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values","values_1","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","Error","name_1","styleAttrValue","_parent","clearMap","mc","splice","clearFn","clearElement"],"mappings":"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"}