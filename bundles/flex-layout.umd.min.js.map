{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../src/lib/grid/grid-align/grid-align.ts","../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/utils/sort.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/utils/array.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/media-trigger/media-trigger.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : parent.inline ? 'inline-flex' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n@Directive()\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n  protected inline = false;  // default inline value\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    const inline = this.inline;\n    if (layout === 'row' && inline) {\n      this.styleCache = layoutAlignHorizontalInlineCache;\n    } else if (layout === 'row' && !inline) {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse' && inline) {\n      this.styleCache = layoutAlignHorizontalRevInlineCache;\n    } else if (layout === 'row-reverse' && !inline) {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column' && inline) {\n      this.styleCache = layoutAlignVerticalInlineCache;\n    } else if (layout === 'column' && !inline) {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse' && inline) {\n      this.styleCache = layoutAlignVerticalRevInlineCache;\n    } else if (layout === 'column-reverse' && !inline) {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout, inline});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layoutKeys: string[] = matcher.value.split(' ');\n    this.layout = layoutKeys[0];\n    this.inline = matcher.value.includes('inline');\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevInlineCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevInlineCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\n@Directive()\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive()\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive()\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\n@Directive()\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\n@Directive()\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive()\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\n@Directive()\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive()\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('8.0.0-beta.27-c2e9686');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : '';\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\n@Directive()\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, DoCheck, ElementRef, Input, Optional, Self} from '@angular/core';\nimport {NgClass, ɵNgClassImpl, ɵNgClassR2Impl} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\n@Directive()\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected delegate: ɵNgClassImpl,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(this.delegate);\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n// tslint:disable-next-line:variable-name\nexport const LayoutNgClassImplProvider = {\n  provide: ɵNgClassImpl,\n  useClass: ɵNgClassR2Impl\n};\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs, providers: [LayoutNgClassImplProvider]})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\n@Directive()\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  Optional,\n  PLATFORM_ID,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle, ɵNgStyleImpl, ɵNgStyleR2Impl} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\n@Directive()\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected delegate: ɵNgStyleImpl,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.delegate);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n// tslint:disable-next-line:variable-name\nexport const LayoutNgStyleImplProvider = {\n  provide: ɵNgStyleImpl,\n  useClass: ɵNgStyleR2Impl\n};\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs, providers: [LayoutNgStyleImplProvider]})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive()\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n@Directive()\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** We need to override clearStyles because in most cases mru isn't populated */\n  protected clearStyles() {\n    const gridMode = Object.keys(this.mru).length > 0;\n    const childrenStyle = gridMode ? 'padding' :\n      getMarginType(this.directionality.value, this.layout);\n\n    // If there are styles on the parent remove them\n    if (gridMode) {\n      super.clearStyles();\n    }\n\n    // Then remove the children styles too\n    this.styleUtils.applyStyleToElements({[childrenStyle]: ''}, this.childrenNodes);\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction getMarginType(directionality: string, layout: string) {\n  switch (layout) {\n    case 'column':\n      return 'margin-bottom';\n    case 'column-reverse':\n      return 'margin-top';\n    case 'row':\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n    case 'row-reverse':\n      return directionality === 'rtl' ? 'margin-right' : 'margin-left';\n    default :\n      return directionality === 'rtl' ? 'margin-left' : 'margin-right';\n  }\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  const key = getMarginType(parent.directionality, parent.layout);\n  const margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n  margins[key] = gapValue;\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive()\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n      this.marshal.trackValue(this.nativeElement, 'layout-align')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerReflow.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue + '', this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n@Directive()\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive()\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n@Directive()\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n  readonly source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  registry = new Map<string, MediaQueryList>();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this.registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this.registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this.source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this.registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this.registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n\n  protected _observable$ = this.source.asObservable();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is not supported; so 'print' mediaQuery activations must be used.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else {\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Wraps the provided value in an array, unless the provided value is an array. */\nexport function coerceArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, OnDestroy} from '@angular/core';\nimport {Subject, asapScheduler, Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\n\nimport {sortDescendingPriority} from '../utils/sort';\nimport {coerceArray} from '../utils/array';\n\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver implements OnDestroy {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 8.0.0-beta.25\n   * @deletion-target v8.0.0-beta.26\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n  /**\n   * Completes the active subject, signalling to all complete for all\n   * MediaObserver subscribers\n   */\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if one or more media query/alias match\n   * the current viewport size.\n   * @param value One or more media queries (or aliases) to check.\n   * @returns Whether any of the media queries match.\n   */\n  isActive(value: string | string[]): boolean {\n    const aliases = splitQueries(coerceArray(value));\n    return aliases.some(alias => {\n      const query = toMediaQuery(alias, this.breakpoints);\n      return this.matchMedia.isActive(query);\n    });\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(0, asapScheduler),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges),\n            takeUntil(this.destroyed$)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n  private readonly destroyed$ = new Subject<void>();\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries: string[]): string[] {\n  return queries.map((query: string) => query.split(','))\n                .reduce((a1: string[], a2: string[]) => a1.concat(a2))\n                .map(query => query.trim());\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n\n/**\n * *****************************************************************\n * Define module for common Angular Layout utilities\n * *****************************************************************\n */\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n  mediaTriggerAutoRestore?: boolean;\n  ssrObserveBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: [],\n  mediaTriggerAutoRestore: true,\n  ssrObserveBreakpoints: [],\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n    'Flex Layout token, config options for the library', {\n      providedIn: 'root',\n      factory: () => DEFAULT_CONFIG\n    });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.9px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.9px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.9px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.9px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.9px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599.9px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959.9px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279.9px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919.9px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599.9px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.9px)';\n\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.9px)';\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.9px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n\n  autoRegisterQueries = true;   // Used for testing BreakPoint registrations\n  useOverlaps = false;          // Allow fallback to overlapping mediaQueries\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this.registry.forEach((mql: MediaQueryList) => {\n      (mql as MockMediaQueryList).destroy();\n    });\n    this.registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql: MockMediaQueryList = this.registry.get(mediaQuery) as MockMediaQueryList;\n\n    if (mql && !this.isActive(mediaQuery)) {\n      this.registry.set(mediaQuery, mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this.registry.forEach((it: MediaQueryList) => {\n      (it as MockMediaQueryList).deactivate();\n    });\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this.activations.length > 0;\n  }\n\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\nimport {fromEvent, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n/**\n * Class\n */\n@Injectable({providedIn: 'root'})\nexport class MediaTrigger {\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected matchMedia: MatchMedia,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(PLATFORM_ID) protected _platformId: Object,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Manually activate range of breakpoints\n   * @param list array of mediaQuery or alias strings\n   */\n  activate(list: string[]) {\n    list = list.map(it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n\n    this.prepareAutoRestore();\n  }\n\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   */\n  restore() {\n    if (this.hasCachedRegistryMatches) {\n      const extractQuery = (change: MediaChange) => change.mediaQuery;\n      const list = this.originalActivations.map(extractQuery);\n      try {\n\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n\n      } finally {\n        this.originalActivations = [];\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   */\n  private prepareAutoRestore() {\n    const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n    const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n\n    if (enableAutoRestore) {\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   */\n  private deactivateAll() {\n    const list = this.currentActivations;\n\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   */\n  private saveActivations() {\n    if (!this.hasCachedRegistryMatches) {\n      const toMediaChange = (query: string) => new MediaChange(true, query);\n      const mergeMQAlias = (change: MediaChange) => {\n        const bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalActivations = this.currentActivations\n          .map(toMediaChange)\n          .map(mergeMQAlias)\n          .sort(sortDescendingPriority);\n\n      this.cacheRegistryMatches();\n    }\n  }\n\n  /**\n   * Force set manual activations for specified mediaQuery list\n   */\n  private setActivations(list: string[]) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n    this.simulateMediaChanges(list);\n  }\n\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   */\n  private simulateMediaChanges(queries: string[], matches = true) {\n    const toMediaQuery = (query: string) => {\n      const locator = this.breakpoints;\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    const emitChangeEvent = (query: string) => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   */\n  private forceRegistryMatches(queries: string[], matches: boolean) {\n    const registry = new Map<string, MediaQueryList>();\n    queries.forEach(query => {\n      registry.set(query, {matches: matches} as MediaQueryList);\n    });\n\n    this.matchMedia.registry = registry;\n  }\n\n  /**\n   * Save current MatchMedia::registry items.\n   */\n  private cacheRegistryMatches() {\n    const target = this.originalRegistry;\n\n    target.clear();\n    this.matchMedia.registry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n    this.hasCachedRegistryMatches = true;\n  }\n\n  /**\n   * Restore original, 'true' registry\n   */\n  private restoreRegistryMatches() {\n    const target = this.matchMedia.registry;\n\n    target.clear();\n    this.originalRegistry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n\n    this.originalRegistry.clear();\n    this.hasCachedRegistryMatches = false;\n  }\n\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   */\n  private emitChangeEvent(matches: boolean, query: string) {\n    this.matchMedia.source.next(new MediaChange(matches, query));\n  }\n\n  private get currentActivations() {\n    return this.matchMedia.activations;\n  }\n\n  private hasCachedRegistryMatches = false;\n  private originalActivations: MediaChange[] = [];\n  private originalRegistry: Map<string, MediaQueryList> = new Map<string, MediaQueryList>();\n\n  private resizeSubscription!: Subscription;\n}\n\n"],"names":["layout","inline","LayoutAlignDirective","prototype","onLayoutChange","matcher","_this","this","layoutKeys","value","split","includes","LAYOUT_VALUES","find","x","triggerUpdate","type","Directive","ElementRef","StyleUtils","LayoutAlignStyleBuilder","decorators","Optional","MediaMarshaller","BaseDirective2","DefaultLayoutAlignDirective","_super","apply","arguments","inputs","__extends","args","selector","layoutAlignHorizontalCache","Map","layoutAlignVerticalCache","layoutAlignHorizontalRevCache","layoutAlignVerticalRevCache","layoutAlignHorizontalInlineCache","layoutAlignVerticalInlineCache","layoutAlignHorizontalRevInlineCache","layoutAlignVerticalRevInlineCache","ALL_DIRECTIVES","DefaultLayoutDirective","DefaultLayoutGapDirective","DefaultFlexOrderDirective","DefaultFlexOffsetDirective","FlexFillDirective","DefaultFlexAlignDirective","DefaultFlexDirective","FlexModule","NgModule","imports","CoreModule","BidiModule","declarations","__spreadArrays","exports","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","buildStyles","input","buildCss","Injectable","providedIn","StyleBuilder","GridAlignDirective","elementRef","styleBuilder","styler","marshal","call","DIRECTIVE_KEY","styleCache","alignCache","init","DefaultGridAlignDirective","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignColumnsStyleBuilder","parent","GridAlignColumnsDirective","_inline","Object","defineProperty","val","coerceBooleanProperty","updateWithValue","alignColumnsInlineCache","alignColumnsCache","addStyles","Input","DefaultGridAlignColumnsDirective","GridAlignRowsStyleBuilder","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","ExtendedModule","Boolean","Inject","PLATFORM_ID","shouldCache","sideEffect","_input","_styles","_parent","matchMedia","hook","activatedBreakpoints","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","Subject","observeActivations","alias","onMediaChange","mc","bp","findByQuery","mediaQuery","mergeAlias","matches","push","sort","sortDescendingPriority","updateStyles","splice","element","key","updateFn","clearFn","extraTriggers","initBuilderMap","buildElementKeyMap","watchExtraTriggers","getValue","bpMap","get","values","undefined","getActivatedValues","hasValue","setValue","set","updateElement","trackValue","asObservable","pipe","filter","forEach","el","keyMap","Set","valueMap","k","delete","clearElement","builders","next","releaseElement","s","unsubscribe","_","add","triggers","length","watchers","newSubscription","merge","subscribe","currentValue","query","i","activatedBp","has","lastHope","target","queries","items","observe","withPrintQuery","tap","interceptEvents","blockPropagation","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","nativeElement","getAttribute","setAttribute","src","DefaultImgSrcDirective","ClassDirective","delegate","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","ɵNgClassImpl","Self","LayoutNgClassImplProvider","useClass","ɵNgClassR2Impl","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","DISPLAY_MAP","getDisplayStyle","defaultValue","ngOnChanges","changes","keys","inputKey","slice","inputValue","shouldShow","takeUntil","destroySubject","addFlexToParent","lookupStyle","style","setProperty","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","ɵNgStyleImpl","DomSanitizer","LayoutNgStyleImplProvider","ɵNgStyleR2Impl","DefaultStyleDirective","INLINE","LayoutStyleBuilder","buildLayoutCSS","LayoutDirective","layoutCache","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapDirective","zone","observerSubject","change","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","childrenNodes","nodeType","willDisplay","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","gridMode","mru","childrenStyle","getMarginType","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","FlexDirective","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","FlexOrderStyleBuilder","order","parseInt","FlexOrderDirective","flexOrderCache","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","flexFillCache","align","mainAxis","crossAxis","flex-direction","d","__","constructor","extendStatics","create","il","r","j","jl","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","dest","clone","MediaChange","mqAlias","suffix","priority","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","sources","_i","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","overlapping","mergeByAlias","defaults","custom","dict","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","media","removeListener","isPrintBreakPoint","PRINT","coerceArray","isArray","toMediaQuery","locator","findByAlias","splitQueries","reduce","a1","a2","concat","applyCssPrefixes","_validateCalcValue","substr","calc","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","keyValuesToMap","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","property","StylesheetMap","stylesheet","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","mediaTriggerAutoRestore","ssrObserveBreakpoints","InjectionToken","factory","activatedAlias","complete","builder","useCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","TABLET_PORTRAIT","TABLET_LANDSCAPE","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","findByMap","findWithPredicate","searchFn","response","_zone","_platformId","BehaviorSubject","registry","_observable$","results","mql","isActive","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","deactivate","MockMediaQueryList","activations","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","BREAKPOINT_PRINT","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","startPrinting","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","filterOverlaps","destroyed$","_media$","watchActivations","media$","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","asapScheduler","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","MediaTrigger","hasCachedRegistryMatches","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","resize$","fromEvent","window","take","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","cacheRegistryMatches","emitChangeEvent","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","Error","name_1","styleAttrValue"],"mappings":"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"}