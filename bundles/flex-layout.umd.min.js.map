{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../src/lib/grid/grid-align/grid-align.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/match-media/server-match-media.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('7.0.0-beta.23-8307655');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../breakpoints/breakpoint-tools';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected iterableDiffers: IterableDiffers,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(\n        this.iterableDiffers, this.keyValueDiffers, this.elementRef, this.renderer\n      );\n    }\n    this.init();\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  KeyValueDiffers,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.keyValueDiffers, this.elementRef, this.renderer);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  let key, margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n\n  switch (parent.layout) {\n    case 'column':\n      key = 'margin-bottom';\n      break;\n    case 'column-reverse':\n      key = 'margin-top';\n      break;\n    case 'row':\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n    case 'row-reverse':\n      key = parent.directionality === 'rtl' ? 'margin-right' : 'margin-left';\n      break;\n    default :\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n  }\n  margins[key] = gapValue;\n\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue, this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    if (layout === 'row') {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse') {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column') {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse') {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    this.layout = layout.split(' ')[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OptionalBreakPoint} from './break-point-registry';\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n/** HOF to sort the breakpoints by priority */\nexport function sortDescendingPriority(a: OptionalBreakPoint, b: OptionalBreakPoint): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\nexport function sortAscendingPriority(a: BreakPoint, b: BreakPoint): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize with 'all' so all non-responsive APIs trigger style updates */\n  protected _source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n\n  protected _registry = new Map<string, MediaQueryList>();\n  protected _observable$ = this._source.asObservable();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this._registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this._source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this._source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this._registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this._registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../breakpoints/breakpoint-tools';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is not supported; so 'print' mediaQuery activations must be used.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else {\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 7.0.0-beta.24\n   * @deletion-target v7.0.0-beta.25\n   */\n  get media$(): Observable<MediaChange> {\n    return this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n  }\n\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    const query = toMediaQuery(alias, this.breakpoints);\n    return this.matchMedia.isActive(query);\n  }\n\n  /**\n   * Subscribers to activation list can use this function to easily exclude overlaps\n   */\n\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(10),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortChangesByPriority);\n  }\n\n  private _media$: Observable<MediaChange[]>;\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n/** HOF to sort the breakpoints by priority */\nexport function sortChangesByPriority(a: MediaChange, b: MediaChange): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: []\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n  'Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 5000px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from './breakpoint-tools';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  protected _registry: Map<string, MockMediaQueryList> = new Map();\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql = this._registry.get(mediaQuery);\n    const alreadyAdded = this._actives\n        .reduce((found, it) => (found || (mql ? (it.media === mql.media) : false)), false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this._actives.forEach(it => it.deactivate());\n    this._actives = [];\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this._actives.length > 0;\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | AddEventListenerOptions): void;\n  addEventListener(_: string,\n                   __: EventListenerOrEventListenerObject,\n                   ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | EventListenerOptions): void;\n  removeEventListener(_: string,\n                      __: EventListenerOrEventListenerObject,\n                      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList> = new Map();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value.trim();\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n"],"names":["tslib_1.__extends","GridAlignColumnsStyleBuilder","_super","prototype","buildStyles","input","parent","buildCss","DEFAULT_MAIN","DEFAULT_CROSS","inline","type","Injectable","args","providedIn","StyleBuilder","GridAlignColumnsDirective","elementRef","styleBuilder","styler","marshal","_this","call","this","DIRECTIVE_KEY","_inline","init","Object","defineProperty","val","coerceBooleanProperty","updateWithValue","value","styleCache","alignColumnsInlineCache","alignColumnsCache","addStyles","ElementRef","decorators","Optional","StyleUtils","MediaMarshaller","Input","BaseDirective2","Map","inputs","DefaultGridAlignColumnsDirective","Directive","selector","GridAlignRowsStyleBuilder","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","split","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","ALL_DIRECTIVES","DefaultGridAlignDirective","NgModule","imports","CoreModule","declarations","slice","exports","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","tslib_1.__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","FlexModule","ExtendedModule","Boolean","Inject","PLATFORM_ID","elementMap","set","element","bpMap","bp","key","getValue","undefined","updateElement","trackValue","subject","asObservable","pipe","filter","updateStyles","forEach","el","keyMap","Set","elementKeyMap","get","valueMap","getActivatedValues","k","delete","clearElement","builders","clearMap","clearFn","next","updateMap","updateFn","releaseElement","watcherMap","s","unsubscribe","_","triggerUpdate","buildElementKeyMap","add","watchExtraTriggers","triggers","length","watchers","newSubscription","merge","apply","subscribe","currentValue","findByQuery","query","i","activatedBreakpoints","activatedBp","alias","has","lastHope","observeActivations","target","queries","items","mediaQuery","matchMedia","observe","hook","withPrintQuery","tap","interceptEvents","blockPropagation","onMediaChange","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","setValue","nativeElement","getAttribute","setAttribute","src","DefaultImgSrcDirective","ClassDirective","iterableDiffers","keyValueDiffers","renderer","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","IterableDiffers","KeyValueDiffers","Renderer2","Self","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","hasValue","DISPLAY_MAP","getDisplayStyle","defaultValue","ngOnChanges","changes","keys","inputKey","inputValue","shouldShow","takeUntil","destroySubject","addFlexToParent","lookupStyle","style","setProperty","WeakMap","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","DomSanitizer","DefaultStyleDirective","INLINE","LAYOUT_VALUES","LayoutStyleBuilder","buildLayoutCSS","LayoutDirective","layoutCache","DefaultLayoutDirective","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","sideEffect","_styles","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapDirective","zone","layout","observerSubject","Subject","extraTriggers","change","onLayoutChange","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","matcher","find","x","childrenNodes","nodeType","willDisplay","sort","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","DefaultLayoutGapDirective","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","FlexDirective","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","DefaultFlexDirective","FlexOrderStyleBuilder","order","parseInt","FlexOrderDirective","flexOrderCache","DefaultFlexOrderDirective","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","DefaultFlexOffsetDirective","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","DefaultFlexAlignDirective","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","_input","FlexFillDirective","flexFillCache","LayoutAlignStyleBuilder","align","mainAxis","crossAxis","flex-direction","LayoutAlignDirective","layoutAlignHorizontalCache","layoutAlignHorizontalRevCache","layoutAlignVerticalCache","layoutAlignVerticalRevCache","DefaultLayoutAlignDirective","BidiModule","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","GridAlignDirective","alignCache","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","mergeAlias","dest","clone","MediaChange","mqAlias","suffix","priority","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","sources","_i","arguments","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","overlapping","mergeByAlias","defaults","custom","dict","sortDescendingPriority","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","matches","media","removeListener","isPrintBreakPoint","PRINT","toMediaQuery","locator","findByAlias","sortChangesByPriority","applyCssPrefixes","j","_validateCalcValue","substr","calc","initBuilderMap","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","reduce","keyValuesToMap","push","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","__assign","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","property","stylesheet","StylesheetMap","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","InjectionToken","factory","mru","activatedAlias","complete","builder","useCache","shouldCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","concat","isArray","findByMap","findWithPredicate","searchFn","response","_zone","_platformId","_source","BehaviorSubject","_registry","_observable$","results","mql","isActive","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","_actives","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","found","deactivate","MockMediaQueryList","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","useClass","ServerMediaQueryList","ServerMatchMedia","activateBreakpoint","lookupBreakpoint","deactivateBreakpoint","BREAKPOINT_PRINT","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","startPrinting","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","filterOverlaps","_media$","watchActivations","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","activations","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values","values_1","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","Error","name_1","styleAttrValue","_parent","mc","splice"],"mappings":"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"}