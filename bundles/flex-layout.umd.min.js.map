{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../src/lib/grid/grid-align/grid-align.ts","../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/utils/sort.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/match-media/server-match-media.ts","../../src/lib/core/media-trigger/media-trigger.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    if (layout === 'row') {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse') {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column') {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse') {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    this.layout = layout.split(' ')[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('7.0.0-beta.23-03a184c');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value.trim();\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected iterableDiffers: IterableDiffers,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(\n        this.iterableDiffers, this.keyValueDiffers, this.elementRef, this.renderer\n      );\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  KeyValueDiffers,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.keyValueDiffers, this.elementRef, this.renderer);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  let key, margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n\n  switch (parent.layout) {\n    case 'column':\n      key = 'margin-bottom';\n      break;\n    case 'column-reverse':\n      key = 'margin-top';\n      break;\n    case 'row':\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n    case 'row-reverse':\n      key = parent.directionality === 'rtl' ? 'margin-right' : 'margin-left';\n      break;\n    default :\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n  }\n  margins[key] = gapValue;\n\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue, this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize with 'all' so all non-responsive APIs trigger style updates */\n  protected _source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n\n  protected _registry = new Map<string, MediaQueryList>();\n  protected _observable$ = this._source.asObservable();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this._registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this._source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this._source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this._registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this._registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is not supported; so 'print' mediaQuery activations must be used.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else {\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 7.0.0-beta.24\n   * @deletion-target v7.0.0-beta.25\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    const query = toMediaQuery(alias, this.breakpoints);\n    return this.matchMedia.isActive(query);\n  }\n\n  /**\n   * Subscribers to activation list can use this function to easily exclude overlaps\n   */\n\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(10),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: []\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n  'Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 5000px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  protected _registry: Map<string, MockMediaQueryList> = new Map();\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql = this._registry.get(mediaQuery);\n    const alreadyAdded = this._actives\n        .reduce((found, it) => (found || (mql ? (it.media === mql.media) : false)), false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this._actives.forEach(it => it.deactivate());\n    this._actives = [];\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this._actives.length > 0;\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | AddEventListenerOptions): void;\n  addEventListener(_: string,\n                   __: EventListenerOrEventListenerObject,\n                   ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | EventListenerOptions): void;\n  removeEventListener(_: string,\n                      __: EventListenerOrEventListenerObject,\n                      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList> = new Map();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\nimport {BehaviorSubject, fromEvent, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * Class\n */\n@Injectable({providedIn: 'root'})\nexport class MediaTrigger {\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected matchMedia: MatchMedia,\n      @Inject(PLATFORM_ID) protected _platformId: Object,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Manually activate range of breakpoints\n   * @param list array of mediaQuery or alias strings\n   */\n  activate(list: string[]) {\n    list = list.map(it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n\n    this.prepareAutoRestore();\n  }\n\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   */\n  restore() {\n    if (this.hasCachedOriginals) {\n      const extractQuery = (change: MediaChange) => change.mediaQuery;\n      const list = this.originalActivations.map(extractQuery);\n\n      try {\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n\n      } finally {\n        this.hasCachedOriginals = false;\n        this.originalRegistry = null;\n        this.originalActivations = [];\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   */\n  private prepareAutoRestore() {\n    if (isPlatformBrowser(this._platformId) && this._document) {\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   */\n  private deactivateAll() {\n    const list = this.currentActivations;\n\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   */\n  private saveActivations() {\n    if (!this.hasCachedOriginals) {\n      const toMediaChange = (query: string) => new MediaChange(true, query);\n      const mergeMQAlias = (change: MediaChange) => {\n        let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalRegistry = this.matchMedia['_registry'] as Map<string, MediaQueryList>;\n      this.originalActivations = this.currentActivations\n          .map(toMediaChange)\n          .map(mergeMQAlias)\n          .sort(sortDescendingPriority);\n\n      this.hasCachedOriginals = true;\n    }\n  }\n\n  /**\n   * Force set manual activations for specified mediaQuery list\n   */\n  private setActivations(list: string[]) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n    this.simulateMediaChanges(list);\n  }\n\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   */\n  private simulateMediaChanges(queries: string[], matches = true) {\n    const toMediaQuery = (query: string) => {\n      const locator = this.breakpoints;\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    const emitChangeEvent = (query: string) => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n\n  // ****************************************************************\n  // 'Pierce-the-veil' to get access to special, read-only artifacts\n  // ****************************************************************\n\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   */\n  forceRegistryMatches(queries: string[], match: boolean) {\n    const registry = new Map<string, MediaQueryList>();\n    queries.forEach(query => {\n      registry.set(query, {matches: match} as MediaQueryList);\n    });\n\n    this.matchMedia['_registry'] = registry;\n  }\n\n  /**\n   * Restore original, 'true' registry\n   */\n  restoreRegistryMatches() {\n    this.matchMedia['_registry'] = this.originalRegistry as Map<string, MediaQueryList>;\n    this.originalRegistry = null;\n  }\n\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   */\n  emitChangeEvent(matches: boolean, query: string) {\n    const source = this.matchMedia['_source'] as BehaviorSubject<MediaChange>;\n    source.next(new MediaChange(matches, query));\n  }\n\n  private get currentActivations() {\n    return this.matchMedia.activations;\n  }\n\n  private hasCachedOriginals = false;\n  private originalActivations: MediaChange[] = [];\n  private originalRegistry: Map<string, MediaQueryList> | null = null;\n\n  private resizeSubscription!: Subscription;\n}\n\n"],"names":["this","addStyles","value","layout","LayoutAlignDirective","prototype","onLayoutChange","matcher","_this","split","LAYOUT_VALUES","find","x","triggerUpdate","type","ElementRef","StyleUtils","LayoutAlignStyleBuilder","decorators","Optional","MediaMarshaller","BaseDirective2","DefaultLayoutAlignDirective","_super","inputs","tslib_1.__extends","Directive","args","selector","layoutAlignHorizontalCache","Map","layoutAlignVerticalCache","layoutAlignHorizontalRevCache","layoutAlignVerticalRevCache","ALL_DIRECTIVES","DefaultLayoutDirective","DefaultLayoutGapDirective","DefaultFlexOrderDirective","DefaultFlexOffsetDirective","FlexFillDirective","DefaultFlexAlignDirective","DefaultFlexDirective","NgModule","imports","CoreModule","BidiModule","declarations","slice","exports","FlexModule","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","buildStyles","input","buildCss","Injectable","providedIn","StyleBuilder","GridAlignDirective","elementRef","styleBuilder","styler","marshal","call","DIRECTIVE_KEY","styleCache","alignCache","init","DefaultGridAlignDirective","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignColumnsStyleBuilder","parent","inline","GridAlignColumnsDirective","_inline","Object","defineProperty","val","coerceBooleanProperty","updateWithValue","alignColumnsInlineCache","alignColumnsCache","Input","DefaultGridAlignColumnsDirective","GridAlignRowsStyleBuilder","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","tslib_1.__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","ExtendedModule","Boolean","Inject","PLATFORM_ID","_readStyleAttribute","element","styleMap","styleAttribute","getAttribute","styleList","i","length","style","colonIndex","Error","name_1","substr","_writeStyleAttribute","styleAttrValue","key","setAttribute","StylesheetMap","undefined","shouldCache","sideEffect","_input","_styles","_parent","matchMedia","hook","activatedBreakpoints","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","Subject","observeActivations","alias","onMediaChange","mc","bp","findByQuery","mediaQuery","mergeAlias","matches","push","sort","sortDescendingPriority","updateStyles","splice","updateFn","clearFn","extraTriggers","initBuilderMap","buildElementKeyMap","watchExtraTriggers","getValue","bpMap","get","values","getActivatedValues","hasValue","setValue","set","updateElement","trackValue","asObservable","pipe","filter","forEach","el","keyMap","Set","valueMap","k","delete","clearElement","builders","next","releaseElement","s","unsubscribe","_","add","triggers","watchers","newSubscription","merge","apply","subscribe","currentValue","query","activatedBp","has","lastHope","target","queries","items","observe","withPrintQuery","tap","interceptEvents","blockPropagation","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","nativeElement","src","DefaultImgSrcDirective","ClassDirective","iterableDiffers","keyValueDiffers","renderer","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","IterableDiffers","KeyValueDiffers","Renderer2","Self","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","DISPLAY_MAP","getDisplayStyle","defaultValue","ngOnChanges","changes","keys","inputKey","inputValue","shouldShow","takeUntil","destroySubject","addFlexToParent","lookupStyle","setProperty","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","DomSanitizer","DefaultStyleDirective","INLINE","LayoutStyleBuilder","buildLayoutCSS","LayoutDirective","layoutCache","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapDirective","zone","observerSubject","change","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","childrenNodes","nodeType","willDisplay","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","FlexDirective","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","FlexOrderStyleBuilder","order","parseInt","FlexOrderDirective","flexOrderCache","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","flexFillCache","align","mainAxis","crossAxis","flex-direction","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","dest","clone","MediaChange","mqAlias","suffix","priority","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","sources","_i","arguments","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","overlapping","mergeByAlias","defaults","custom","dict","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","media","removeListener","isPrintBreakPoint","PRINT","toMediaQuery","locator","findByAlias","applyCssPrefixes","j","_validateCalcValue","calc","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","reduce","keyValuesToMap","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","__assign","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","property","stylesheet","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","InjectionToken","factory","mru","activatedAlias","complete","builder","useCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","concat","isArray","findByMap","findWithPredicate","searchFn","response","_zone","_platformId","_source","BehaviorSubject","_registry","_observable$","results","mql","isActive","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","_actives","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","found","deactivate","MockMediaQueryList","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","useClass","ServerMediaQueryList","ServerMatchMedia","activateBreakpoint","lookupBreakpoint","deactivateBreakpoint","BREAKPOINT_PRINT","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","startPrinting","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","filterOverlaps","_media$","watchActivations","media$","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","activations","MediaTrigger","hasCachedOriginals","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","resize$","fromEvent","window","take","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","emitChangeEvent","match","registry","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","_setServerStyle","styleValue"],"mappings":"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"}