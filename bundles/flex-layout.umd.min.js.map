{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/grid/grid-align/grid-align.ts","../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/utils/sort.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/media-trigger/media-trigger.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('7.0.0-beta.23-eb3a4d4');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected iterableDiffers: IterableDiffers,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(\n        this.iterableDiffers, this.keyValueDiffers, this.elementRef, this.renderer\n      );\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  KeyValueDiffers,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.keyValueDiffers, this.elementRef, this.renderer);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  let key, margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n\n  switch (parent.layout) {\n    case 'column':\n      key = 'margin-bottom';\n      break;\n    case 'column-reverse':\n      key = 'margin-top';\n      break;\n    case 'row':\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n    case 'row-reverse':\n      key = parent.directionality === 'rtl' ? 'margin-right' : 'margin-left';\n      break;\n    default :\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n  }\n  margins[key] = gapValue;\n\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue, this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    if (layout === 'row') {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse') {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column') {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse') {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    this.layout = layout.split(' ')[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n  readonly source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  registry = new Map<string, MediaQueryList>();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this.registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this.registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this.source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this.registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this.registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n\n  protected _observable$ = this.source.asObservable();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is not supported; so 'print' mediaQuery activations must be used.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else {\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 7.0.0-beta.24\n   * @deletion-target v7.0.0-beta.25\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    const query = toMediaQuery(alias, this.breakpoints);\n    return this.matchMedia.isActive(query);\n  }\n\n  /**\n   * Subscribers to activation list can use this function to easily exclude overlaps\n   */\n\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(10),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\nexport interface  MediaTriggerOptions {\n  disableAutoRestore? : boolean;\n}\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n  mediaTriggerAutoRestore? : boolean;\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: [],\n  mediaTriggerAutoRestore: true\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n  'Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 5000px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n\n  autoRegisterQueries = true;   // Used for testing BreakPoint registrations\n  useOverlaps = false;          // Allow fallback to overlapping mediaQueries\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this.registry.forEach((mql: MediaQueryList) => {\n      (mql as MockMediaQueryList).destroy();\n    });\n    this.registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql: MockMediaQueryList = this.registry.get(mediaQuery) as MockMediaQueryList;\n\n    if (mql && !this.isActive(mediaQuery)) {\n      this.registry.set(mediaQuery, mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this.registry.forEach((it: MediaQueryList) => {\n      (it as MockMediaQueryList).deactivate();\n    });\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this.activations.length > 0;\n  }\n\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\nimport {fromEvent, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n/**\n * Class\n */\n@Injectable({providedIn: 'root'})\nexport class MediaTrigger {\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected matchMedia: MatchMedia,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(PLATFORM_ID) protected _platformId: Object,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Manually activate range of breakpoints\n   * @param list array of mediaQuery or alias strings\n   */\n  activate(list: string[]) {\n    list = list.map(it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n\n    this.prepareAutoRestore();\n  }\n\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   */\n  restore() {\n    if (this.hasCachedOriginals) {\n      const extractQuery = (change: MediaChange) => change.mediaQuery;\n      const list = this.originalActivations.map(extractQuery);\n\n      try {\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n\n      } finally {\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n        this.hasCachedOriginals = false;\n        this.originalRegistry = null;\n        this.originalActivations = [];\n      }\n    }\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   */\n  private prepareAutoRestore() {\n    const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n    const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n\n    if (enableAutoRestore) {\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   */\n  private deactivateAll() {\n    const list = this.currentActivations;\n\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   */\n  private saveActivations() {\n    if (!this.hasCachedOriginals) {\n      const toMediaChange = (query: string) => new MediaChange(true, query);\n      const mergeMQAlias = (change: MediaChange) => {\n        let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalRegistry = this.matchMedia['registry'] as Map<string, MediaQueryList>;\n      this.originalActivations = this.currentActivations\n          .map(toMediaChange)\n          .map(mergeMQAlias)\n          .sort(sortDescendingPriority);\n\n      this.hasCachedOriginals = true;\n    }\n  }\n\n  /**\n   * Force set manual activations for specified mediaQuery list\n   */\n  private setActivations(list: string[]) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n    this.simulateMediaChanges(list);\n  }\n\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   */\n  private simulateMediaChanges(queries: string[], matches = true) {\n    const toMediaQuery = (query: string) => {\n      const locator = this.breakpoints;\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    const emitChangeEvent = (query: string) => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   */\n  private forceRegistryMatches(queries: string[], match: boolean) {\n    const registry = new Map<string, MediaQueryList>();\n    queries.forEach(query => {\n      registry.set(query, {matches: match} as MediaQueryList);\n    });\n\n    this.matchMedia.registry = registry;\n  }\n\n  /**\n   * Restore original, 'true' registry\n   */\n  private restoreRegistryMatches() {\n    this.matchMedia.registry = this.originalRegistry as Map<string, MediaQueryList>;\n    this.originalRegistry = null;\n  }\n\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   */\n  private emitChangeEvent(matches: boolean, query: string) {\n    this.matchMedia.source.next(new MediaChange(matches, query));\n  }\n\n  private get currentActivations() {\n    return this.matchMedia.activations;\n  }\n\n  private hasCachedOriginals = false;\n  private originalActivations: MediaChange[] = [];\n  private originalRegistry: Map<string, MediaQueryList> | null = null;\n\n  private resizeSubscription!: Subscription;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value.trim();\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n"],"names":["tslib_1.__extends","GridAlignDirective","_super","type","ElementRef","GridAlignStyleBuilder","decorators","Optional","StyleUtils","MediaMarshaller","BaseDirective2","alignCache","Map","inputs","_this","DefaultGridAlignDirective","Directive","args","selector","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignColumnsStyleBuilder","prototype","buildStyles","input","parent","buildCss","inline","Injectable","providedIn","StyleBuilder","GridAlignColumnsDirective","elementRef","styleBuilder","styler","marshal","call","this","DIRECTIVE_KEY","_inline","init","Object","defineProperty","val","coerceBooleanProperty","updateWithValue","value","styleCache","alignColumnsInlineCache","alignColumnsCache","addStyles","Input","DefaultGridAlignColumnsDirective","GridAlignRowsStyleBuilder","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","split","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","ALL_DIRECTIVES","NgModule","imports","CoreModule","declarations","slice","exports","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","tslib_1.__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","FlexModule","ExtendedModule","Boolean","Inject","PLATFORM_ID","mc","matches","activatedBreakpoints","bp","push","sort","sortDescendingPriority","updateStyles","splice","element","key","updateFn","clearFn","extraTriggers","initBuilderMap","updateMap","clearMap","buildElementKeyMap","watchExtraTriggers","getValue","bpMap","elementMap","get","values","undefined","getActivatedValues","hasValue","setValue","set","updateElement","trackValue","subject","asObservable","pipe","filter","forEach","el","keyMap","Set","elementKeyMap","valueMap","k","delete","clearElement","builders","next","releaseElement","watcherMap","s","unsubscribe","_","triggerUpdate","add","triggers","length","watchers","newSubscription","merge","apply","subscribe","currentValue","findByQuery","query","i","activatedBp","alias","has","lastHope","observeActivations","target","queries","items","mediaQuery","matchMedia","observe","hook","withPrintQuery","tap","interceptEvents","blockPropagation","onMediaChange","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","nativeElement","getAttribute","setAttribute","src","DefaultImgSrcDirective","ClassDirective","iterableDiffers","keyValueDiffers","renderer","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","IterableDiffers","KeyValueDiffers","Renderer2","Self","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","DISPLAY_MAP","getDisplayStyle","defaultValue","ngOnChanges","changes","keys","inputKey","inputValue","shouldShow","takeUntil","destroySubject","addFlexToParent","lookupStyle","style","setProperty","WeakMap","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","DomSanitizer","DefaultStyleDirective","INLINE","LAYOUT_VALUES","LayoutStyleBuilder","buildLayoutCSS","LayoutDirective","layoutCache","DefaultLayoutDirective","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","sideEffect","_styles","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapDirective","zone","layout","observerSubject","Subject","change","onLayoutChange","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","matcher","find","x","childrenNodes","nodeType","willDisplay","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","DefaultLayoutGapDirective","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","FlexDirective","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","DefaultFlexDirective","FlexOrderStyleBuilder","order","parseInt","FlexOrderDirective","flexOrderCache","DefaultFlexOrderDirective","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","DefaultFlexOffsetDirective","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","DefaultFlexAlignDirective","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","_input","FlexFillDirective","flexFillCache","LayoutAlignStyleBuilder","align","mainAxis","crossAxis","flex-direction","LayoutAlignDirective","layoutAlignHorizontalCache","layoutAlignHorizontalRevCache","layoutAlignVerticalCache","layoutAlignVerticalRevCache","DefaultLayoutAlignDirective","BidiModule","ROW_DEFAULT","COL_DEFAULT","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","mergeAlias","dest","clone","MediaChange","mqAlias","suffix","priority","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","sources","_i","arguments","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","overlapping","mergeByAlias","defaults","custom","dict","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","media","removeListener","isPrintBreakPoint","PRINT","toMediaQuery","locator","findByAlias","applyCssPrefixes","j","_validateCalcValue","substr","calc","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","reduce","keyValuesToMap","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","__assign","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","property","stylesheet","StylesheetMap","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","mediaTriggerAutoRestore","InjectionToken","factory","mru","activatedAlias","complete","builder","useCache","shouldCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","concat","isArray","findByMap","findWithPredicate","searchFn","response","_zone","_platformId","BehaviorSubject","registry","_observable$","results","mql","isActive","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","deactivate","MockMediaQueryList","activations","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","useClass","BREAKPOINT_PRINT","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","startPrinting","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","filterOverlaps","_media$","watchActivations","media$","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","MediaTrigger","hasCachedOriginals","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","resize$","fromEvent","window","take","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","emitChangeEvent","match","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","Error","name_1","styleAttrValue","_parent"],"mappings":"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"}