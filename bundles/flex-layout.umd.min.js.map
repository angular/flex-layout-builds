{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/server/server-provider.ts","../../src/lib/server/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/add-alias.ts","../../src/lib/core/observable-media/observable-media-provider.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/breakpoints/break-points-provider.ts","../../src/lib/core/match-media/match-media-provider.ts","../../src/lib/core/stylesheet-map/stylesheet-map-provider.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/core/media-monitor/media-monitor-provider.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/utils/basis-validator.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/media-change.ts","../../src/lib/core/media-monitor/media-monitor.ts","../../src/lib/core/observable-media/observable-media.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/module.ts","../../src/lib/core/media-queries-module.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/server-token.ts","../../src/lib/core/responsive-activation/responsive-activation.ts","../../src/lib/core/base/base.ts","../../src/lib/core/base/base-adapter.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/match-media/server-match-media.ts","../../src/lib/core/style-utils/style-utils.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  Inject,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseFxDirective,\n  MediaMonitor,\n  SERVER_TOKEN,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({\n  selector: `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`\n})\nexport class ImgSrcDirective extends BaseFxDirective implements OnInit, OnChanges {\n\n  /* tslint:disable */\n  @Input('src')        set srcBase(val) { this.cacheDefaultSrc(val);           }\n\n  @Input('src.xs')     set srcXs(val)   { this._cacheInput('srcXs', val);  }\n  @Input('src.sm')     set srcSm(val)   { this._cacheInput('srcSm', val);  }\n  @Input('src.md')     set srcMd(val)   { this._cacheInput('srcMd', val);  }\n  @Input('src.lg')     set srcLg(val)   { this._cacheInput('srcLg', val);  }\n  @Input('src.xl')     set srcXl(val)   { this._cacheInput('srcXl', val);  }\n\n  @Input('src.lt-sm')  set srcLtSm(val) { this._cacheInput('srcLtSm', val);  }\n  @Input('src.lt-md')  set srcLtMd(val) { this._cacheInput('srcLtMd', val);  }\n  @Input('src.lt-lg')  set srcLtLg(val) { this._cacheInput('srcLtLg', val);  }\n  @Input('src.lt-xl')  set srcLtXl(val) { this._cacheInput('srcLtXl', val);  }\n\n  @Input('src.gt-xs')  set srcGtXs(val) { this._cacheInput('srcGtXs', val);  }\n  @Input('src.gt-sm')  set srcGtSm(val) { this._cacheInput('srcGtSm', val);  }\n  @Input('src.gt-md')  set srcGtMd(val) { this._cacheInput('srcGtMd', val);  }\n  @Input('src.gt-lg')  set srcGtLg(val) { this._cacheInput('srcGtLg', val);  }\n  /* tslint:enable */\n\n  constructor(protected _elRef: ElementRef,\n              protected _monitor: MediaMonitor,\n              protected _styler: StyleUtils,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected _serverModuleLoaded: boolean) {\n    super(_monitor, _elRef, _styler);\n    this._cacheInput('src', _elRef.nativeElement.getAttribute('src') || '');\n    if (isPlatformServer(this._platformId) && this._serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Listen for responsive changes to update the img.src attribute\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (this.hasResponsiveKeys) {\n      // Listen for responsive changes\n      this._listenForMediaQueryChanges('src', this.defaultSrc, () => {\n        this._updateSrcFor();\n      });\n    }\n    this._updateSrcFor();\n  }\n\n  /**\n   * Update the 'src' property of the host <img> element\n   */\n  ngOnChanges() {\n    if (this.hasInitialized) {\n      this._updateSrcFor();\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected _updateSrcFor() {\n    if (this.hasResponsiveKeys) {\n      let url = this.activatedValue || this.defaultSrc;\n      if (isPlatformServer(this._platformId) && this._serverModuleLoaded) {\n        this._styler.applyStyleToElement(this.nativeElement, {'content': url ? `url(${url})` : ''});\n      } else {\n        this.nativeElement.setAttribute('src', String(url));\n      }\n    }\n  }\n\n  /**\n   * Cache initial value of 'src', this will be used as fallback when breakpoint\n   * activations change.\n   * NOTE: The default 'src' property is not bound using @Input(), so perform\n   * a post-ngOnInit() lookup of the default src value (if any).\n   */\n  protected cacheDefaultSrc(value?: string) {\n    this._cacheInput('src', value || '');\n  }\n\n  /**\n   * Empty values are maintained, undefined values are exposed as ''\n   */\n  protected get defaultSrc(): string {\n    return this._queryInput('src') || '';\n  }\n\n  /**\n   * Does the <img> have 1 or more src.<xxx> responsive inputs\n   * defined... these will be mapped to activated breakpoints.\n   */\n  protected get hasResponsiveKeys() {\n    return Object.keys(this._inputMap).length > 1;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  Self,\n  OnInit,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {\n  BaseFxDirective,\n  BaseFxDirectiveAdapter,\n  MediaChange,\n  MediaMonitor,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n\n/** NgClass allowed inputs **/\nexport type NgClassType = string | string[] | Set<string> | {[klass: string]: any};\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({\n  selector: `\n    [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n    [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n    [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n  `\n})\nexport class ClassDirective extends BaseFxDirective\n    implements DoCheck, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Intercept ngClass assignments so we cache the default classes\n   * which are merged with activated styles or used as fallbacks.\n   * Note: Base ngClass values are applied during ngDoCheck()\n   */\n  @Input('ngClass')\n  set ngClassBase(val: NgClassType) {\n    const key = 'ngClass';\n    this._base.cacheInput(key, val, true);\n    this._ngClassInstance.ngClass = this._base.queryInput(key);\n  }\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klazz(val: string) {\n    const key = 'class';\n    this._base.cacheInput(key, val);\n    this._ngClassInstance.klass = val;\n  }\n\n  /* tslint:disable */\n  @Input('ngClass.xs')    set ngClassXs(val:   NgClassType) { this._base.cacheInput('ngClassXs',   val, true); }\n  @Input('ngClass.sm')    set ngClassSm(val:   NgClassType) { this._base.cacheInput('ngClassSm',   val, true); }\n  @Input('ngClass.md')    set ngClassMd(val:   NgClassType) { this._base.cacheInput('ngClassMd',   val, true); }\n  @Input('ngClass.lg')    set ngClassLg(val:   NgClassType) { this._base.cacheInput('ngClassLg',   val, true); }\n  @Input('ngClass.xl')    set ngClassXl(val:   NgClassType) { this._base.cacheInput('ngClassXl',   val, true); }\n\n  @Input('ngClass.lt-sm') set ngClassLtSm(val: NgClassType) { this._base.cacheInput('ngClassLtSm', val, true); }\n  @Input('ngClass.lt-md') set ngClassLtMd(val: NgClassType) { this._base.cacheInput('ngClassLtMd', val, true); }\n  @Input('ngClass.lt-lg') set ngClassLtLg(val: NgClassType) { this._base.cacheInput('ngClassLtLg', val, true); }\n  @Input('ngClass.lt-xl') set ngClassLtXl(val: NgClassType) { this._base.cacheInput('ngClassLtXl', val, true); }\n\n  @Input('ngClass.gt-xs') set ngClassGtXs(val: NgClassType) { this._base.cacheInput('ngClassGtXs', val, true); }\n  @Input('ngClass.gt-sm') set ngClassGtSm(val: NgClassType) { this._base.cacheInput('ngClassGtSm', val, true); }\n  @Input('ngClass.gt-md') set ngClassGtMd(val: NgClassType) { this._base.cacheInput('ngClassGtMd', val, true); }\n  @Input('ngClass.gt-lg') set ngClassGtLg(val: NgClassType) { this._base.cacheInput('ngClassGtLg', val, true); }\n\n  /* tslint:enable */\n  constructor(protected monitor: MediaMonitor,\n              protected _iterableDiffers: IterableDiffers,\n              protected _keyValueDiffers: KeyValueDiffers,\n              protected _ngEl: ElementRef,\n              protected _renderer: Renderer2,\n              @Optional() @Self() private _ngClassInstance: NgClass,\n              protected _styler: StyleUtils) {\n    super(monitor, _ngEl, _styler);\n    this._configureAdapters();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._ngClassInstance.ngClass = this._base.mqActivation.activatedInput || '';\n    }\n  }\n\n  ngOnInit() {\n    this._configureMQListener();\n  }\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this._ngClassInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n    delete this._ngClassInstance;\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n   * Configure adapters (that delegate to an internal ngClass instance) if responsive\n   * keys have been defined.\n   */\n  protected _configureAdapters() {\n    this._base = new BaseFxDirectiveAdapter(\n      'ngClass',\n      this.monitor,\n      this._ngEl,\n      this._styler\n    );\n    if (!this._ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this._ngClassInstance = new NgClass(\n          this._iterableDiffers, this._keyValueDiffers, this._ngEl, this._renderer\n      );\n    }\n  }\n\n  /**\n   * Build an mqActivation object that bridges mql change events to onMediaQueryChange handlers\n   * NOTE: We delegate subsequent activity to the NgClass logic\n   *       Identify the activated input value and update the ngClass iterables...\n   *       Use ngDoCheck() to actually apply the values to the element\n   */\n  protected _configureMQListener(baseKey = 'ngClass') {\n    const fallbackValue = this._base.queryInput(baseKey);\n    this._base.listenForMediaQueryChanges(baseKey, fallbackValue, (changes: MediaChange) => {\n      this._ngClassInstance.ngClass = changes.value || '';\n      this._ngClassInstance.ngDoCheck();\n    });\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors and capture mediaQuery changes\n   * Delegate value changes to the internal `_ngClassInstance` for processing\n   */\n  protected _base: BaseFxDirectiveAdapter;   // used for `ngClass.xxx` selectors\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Self,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {Subscription} from 'rxjs/Subscription';\nimport {\n  BaseFxDirective,\n  MediaChange,\n  MediaMonitor,\n  SERVER_TOKEN,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nimport {LayoutDirective} from '@angular/flex-layout/flex';\n\nconst FALSY = ['false', false, 0];\n\n/**\n * For fxHide selectors, we invert the 'value'\n * and assign to the equivalent fxShow selector cache\n *  - When 'hide' === '' === true, do NOT show the element\n *  - When 'hide' === false or 0... we WILL show the element\n */\nexport function negativeOf(hide: any) {\n  return (hide === '') ? false :\n         ((hide === 'false') || (hide === 0)) ? true : !hide;\n}\n\n/**\n * 'show' Layout API directive\n *\n */\n@Directive({\n  selector: `\n  [fxShow],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`\n})\nexport class ShowHideDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShow')       set show(val) {  this._cacheInput('show', val);  }\n  @Input('fxShow.xs')    set showXs(val) {this._cacheInput('showXs', val);}\n  @Input('fxShow.sm')    set showSm(val) {this._cacheInput('showSm', val); };\n  @Input('fxShow.md')    set showMd(val) {this._cacheInput('showMd', val); };\n  @Input('fxShow.lg')    set showLg(val) {this._cacheInput('showLg', val); };\n  @Input('fxShow.xl')    set showXl(val) {this._cacheInput('showXl', val); };\n\n  @Input('fxShow.lt-sm') set showLtSm(val) { this._cacheInput('showLtSm', val); };\n  @Input('fxShow.lt-md') set showLtMd(val) { this._cacheInput('showLtMd', val); };\n  @Input('fxShow.lt-lg') set showLtLg(val) { this._cacheInput('showLtLg', val); };\n  @Input('fxShow.lt-xl') set showLtXl(val) { this._cacheInput('showLtXl', val); };\n\n  @Input('fxShow.gt-xs') set showGtXs(val) {this._cacheInput('showGtXs', val); };\n  @Input('fxShow.gt-sm') set showGtSm(val) {this._cacheInput('showGtSm', val); };\n  @Input('fxShow.gt-md') set showGtMd(val) {this._cacheInput('showGtMd', val); };\n  @Input('fxShow.gt-lg') set showGtLg(val) {this._cacheInput('showGtLg', val); };\n\n  @Input('fxHide')       set hide(val) {this._cacheInput('show', negativeOf(val));}\n  @Input('fxHide.xs')    set hideXs(val) {this._cacheInput('showXs', negativeOf(val));}\n  @Input('fxHide.sm')    set hideSm(val) {this._cacheInput('showSm', negativeOf(val)); };\n  @Input('fxHide.md')    set hideMd(val) {this._cacheInput('showMd', negativeOf(val)); };\n  @Input('fxHide.lg')    set hideLg(val) {this._cacheInput('showLg', negativeOf(val)); };\n  @Input('fxHide.xl')    set hideXl(val) {this._cacheInput('showXl', negativeOf(val)); };\n\n  @Input('fxHide.lt-sm') set hideLtSm(val) { this._cacheInput('showLtSm', negativeOf(val)); };\n  @Input('fxHide.lt-md') set hideLtMd(val) { this._cacheInput('showLtMd', negativeOf(val)); };\n  @Input('fxHide.lt-lg') set hideLtLg(val) { this._cacheInput('showLtLg', negativeOf(val)); };\n  @Input('fxHide.lt-xl') set hideLtXl(val) { this._cacheInput('showLtXl', negativeOf(val)); };\n\n  @Input('fxHide.gt-xs') set hideGtXs(val) {this._cacheInput('showGtXs', negativeOf(val)); };\n  @Input('fxHide.gt-sm') set hideGtSm(val) {this._cacheInput('showGtSm', negativeOf(val)); };\n  @Input('fxHide.gt-md') set hideGtMd(val) {this._cacheInput('showGtMd', negativeOf(val)); };\n  @Input('fxHide.gt-lg') set hideGtLg(val) {this._cacheInput('showGtLg', negativeOf(val)); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n              @Optional() @Self() protected layout: LayoutDirective,\n              protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n\n    super(monitor, elRef, styleUtils);\n\n    if (layout) {\n      /**\n       * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.\n       * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS\n       */\n      this._layoutWatcher = layout.layout$.subscribe(() => this._updateWithValue());\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected _getDisplayStyle(): string {\n    return this.layout ? 'flex' : super._getDisplayStyle();\n  }\n\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.hasInitialized && (changes['show'] != null || this._mqActivation)) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    let value = this._getDefaultVal('show', true);\n    // Build _mqActivation controller\n    this._listenForMediaQueryChanges('show', value, (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected _updateWithValue(value?: string|number|boolean) {\n    value = value || this._getDefaultVal('show', true);\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    let shouldShow = this._validateTruthy(value);\n    this._applyStyleToElement(this._buildCSS(shouldShow));\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n  }\n\n\n  /** Build the CSS that should be assigned to the element instance */\n  protected _buildCSS(show) {\n    return {'display': show ? this._display : 'none'};\n  }\n\n  /**  Validate the to be not FALSY */\n  _validateTruthy(show) {\n    return (FALSY.indexOf(show) == -1);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/**\n * NgStyle allowed inputs\n */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\n/**\n * Transform Operators for @angular/flex-layout NgStyle Directive\n */\nexport const ngStyleUtils = {\n  getType,\n  buildRawList,\n  buildMapFromList,\n  buildMapFromSet\n};\n\nfunction getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set ) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/**\n * Convert array of key:value strings to a iterable map object\n */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {});\n}\n\n/**\n * Convert Set<string> or raw Object to an iterable NgStyleMap\n */\nfunction buildMapFromSet(source: any, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list = new Array<string>();\n  if (getType(source) == 'set') {\n    source.forEach(entry => list.push(entry));\n  } else {                                // simple hashmap\n    Object.keys(source).forEach(key => {\n      list.push(`${key}:${source[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/**\n * Convert 'key:value' -> [key, value]\n */\nfunction stringToKeyValue(it: string): NgStyleKeyValue|null {\n  let [key, val] = it.split(':');\n  return val ? new NgStyleKeyValue(key, val) : null;\n}\n\n/**\n * Convert [ [key,value] ] -> { key : value }\n */\nfunction keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  KeyValueDiffers,\n  OnDestroy,\n  OnChanges,\n  Optional,\n  Renderer2,\n  SecurityContext,\n  Self,\n  SimpleChanges,\n  OnInit,\n} from '@angular/core';\nimport {NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseFxDirective,\n  BaseFxDirectiveAdapter,\n  MediaChange,\n  MediaMonitor,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  ngStyleUtils as _\n} from './style-transforms';\n\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({\n  selector: `\n    [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n    [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n    [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n  `\n})\nexport class StyleDirective extends BaseFxDirective\n    implements DoCheck, OnChanges, OnDestroy, OnInit {\n\n  /**\n   * Intercept ngStyle assignments so we cache the default styles\n   * which are merged with activated styles or used as fallbacks.\n   */\n  @Input('ngStyle')\n  set ngStyleBase(val: NgStyleType) {\n    const key = 'ngStyle';\n    this._base.cacheInput(key, val, true);  // convert val to hashmap\n    this._ngStyleInstance.ngStyle = this._base.queryInput(key);\n  }\n\n  /* tslint:disable */\n  @Input('ngStyle.xs')    set ngStyleXs(val: NgStyleType) { this._base.cacheInput('ngStyleXs', val, true); }\n  @Input('ngStyle.sm')    set ngStyleSm(val: NgStyleType) { this._base.cacheInput('ngStyleSm', val, true); };\n  @Input('ngStyle.md')    set ngStyleMd(val: NgStyleType) { this._base.cacheInput('ngStyleMd', val, true); };\n  @Input('ngStyle.lg')    set ngStyleLg(val: NgStyleType) { this._base.cacheInput('ngStyleLg', val, true); };\n  @Input('ngStyle.xl')    set ngStyleXl(val: NgStyleType) { this._base.cacheInput('ngStyleXl', val, true); };\n\n  @Input('ngStyle.lt-sm') set ngStyleLtSm(val: NgStyleType) { this._base.cacheInput('ngStyleLtSm', val, true); };\n  @Input('ngStyle.lt-md') set ngStyleLtMd(val: NgStyleType) { this._base.cacheInput('ngStyleLtMd', val, true); };\n  @Input('ngStyle.lt-lg') set ngStyleLtLg(val: NgStyleType) { this._base.cacheInput('ngStyleLtLg', val, true); };\n  @Input('ngStyle.lt-xl') set ngStyleLtXl(val: NgStyleType) { this._base.cacheInput('ngStyleLtXl', val, true); };\n\n  @Input('ngStyle.gt-xs') set ngStyleGtXs(val: NgStyleType) { this._base.cacheInput('ngStyleGtXs', val, true); };\n  @Input('ngStyle.gt-sm') set ngStyleGtSm(val: NgStyleType) { this._base.cacheInput('ngStyleGtSm', val, true); } ;\n  @Input('ngStyle.gt-md') set ngStyleGtMd(val: NgStyleType) { this._base.cacheInput('ngStyleGtMd', val, true); };\n  @Input('ngStyle.gt-lg') set ngStyleGtLg(val: NgStyleType) { this._base.cacheInput('ngStyleGtLg', val, true); };\n  /* tslint:enable */\n\n  /**\n   *  Constructor for the ngStyle subclass; which adds selectors and\n   *  a MediaQuery Activation Adapter\n   */\n  constructor(private monitor: MediaMonitor,\n              protected _sanitizer: DomSanitizer,\n              protected _ngEl: ElementRef,\n              protected _renderer: Renderer2,\n              protected _differs: KeyValueDiffers,\n              @Optional() @Self() private _ngStyleInstance: NgStyle,\n              protected _styler: StyleUtils) {\n\n    super(monitor, _ngEl, _styler);\n    this._configureAdapters();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._ngStyleInstance.ngStyle = this._base.mqActivation.activatedInput || '';\n    }\n  }\n\n\n  ngOnInit() {\n    this._configureMQListener();\n  }\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this._ngStyleInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n    delete this._ngStyleInstance;\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n     * Configure adapters (that delegate to an internal ngClass instance) if responsive\n     * keys have been defined.\n     */\n    protected _configureAdapters() {\n        this._base = new BaseFxDirectiveAdapter(\n          'ngStyle',\n          this.monitor,\n          this._ngEl,\n          this._styler\n        );\n        if (!this._ngStyleInstance) {\n          // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n          // defined on the same host element; since the responsive variations may be defined...\n          this._ngStyleInstance = new NgStyle(this._differs, this._ngEl, this._renderer);\n        }\n\n        this._buildCacheInterceptor();\n        this._fallbackToStyle();\n    }\n\n    /**\n     * Build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    protected _configureMQListener(baseKey = 'ngStyle') {\n      const fallbackValue = this._base.queryInput(baseKey);\n      this._base.listenForMediaQueryChanges(baseKey, fallbackValue, (changes: MediaChange) => {\n        this._ngStyleInstance.ngStyle = changes.value || '';\n        this._ngStyleInstance.ngDoCheck();\n      });\n    }\n\n  // ************************************************************************\n  // Private Internal Methods\n  // ************************************************************************\n\n  /**\n   * Build intercept to convert raw strings to ngStyleMap\n   */\n  protected _buildCacheInterceptor() {\n    let cacheInput = this._base.cacheInput.bind(this._base);\n    this._base.cacheInput = (key?: string, source?: any, cacheRaw = false, merge = true) => {\n      let styles = this._buildStyleMap(source);\n      if (merge) {\n        styles = extendObject({}, this._base.inputMap['ngStyle'], styles);\n      }\n      cacheInput(key, styles, cacheRaw);\n    };\n  }\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected _buildStyleMap(styles: NgStyleType) {\n    let sanitizer: NgStyleSanitizer = (val: any) => {\n      // Always safe-guard (aka sanitize) style property values\n      return this._sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    };\n    if (styles) {\n      switch ( _.getType(styles) ) {\n        case 'string':  return _.buildMapFromList(_.buildRawList(styles), sanitizer);\n        case 'array' :  return _.buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return _.buildMapFromSet(styles, sanitizer);\n        default      :  return _.buildMapFromSet(styles, sanitizer);\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * Initial lookup of raw 'class' value (if any)\n   */\n  protected _fallbackToStyle() {\n    if (!this._base.queryInput('ngStyle')) {\n      this.ngStyleBase = this._getAttributeValue('style') || '';\n    }\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the StyleDirective\n   */\n  protected _base: BaseFxDirectiveAdapter;\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {\n  BROWSER_PROVIDER,\n  CoreModule,\n  STYLESHEET_MAP_PROVIDER,\n  StylesheetMap,\n  StyleUtils\n} from '@angular/flex-layout/core';\n\nimport {ImgSrcDirective} from './img-src/img-src';\nimport {ClassDirective} from './class/class';\nimport {ShowHideDirective} from './show-hide/show-hide';\nimport {StyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  ShowHideDirective,\n  ClassDirective,\n  StyleDirective,\n  ImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES],\n  providers: [\n    StylesheetMap,\n    StyleUtils,\n    BROWSER_PROVIDER,\n    STYLESHEET_MAP_PROVIDER,\n  ]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {BEFORE_APP_SERIALIZED} from '@angular/platform-server';\nimport {\n  BREAKPOINTS,\n  CLASS_NAME,\n  SERVER_TOKEN,\n  BreakPoint,\n  MatchMedia,\n  StylesheetMap,\n  ServerMatchMedia\n} from '@angular/flex-layout/core';\n\n\n/**\n * Activate all of the registered breakpoints in sequence, and then\n * retrieve the associated stylings from the virtual stylesheet\n * @param serverSheet the virtual stylesheet that stores styles for each\n *        element\n * @param matchMedia the service to activate/deactive breakpoints\n * @param breakpoints the registered breakpoints to activate/deactivate\n */\nexport function generateStaticFlexLayoutStyles(serverSheet: StylesheetMap,\n                                               matchMedia: MatchMedia,\n                                               breakpoints: BreakPoint[]) {\n  // Store the custom classes in the following map, that way only\n  // one class gets allocated per HTMLElement, and each class can\n  // be referenced in the static media queries\n  const classMap = new Map<HTMLElement, string>();\n\n  // Get the initial stylings for all of the directives, and initialize\n  // the fallback block of stylings, then reverse the breakpoints list\n  // to traverse in the proper order\n  const defaultStyles = new Map(serverSheet.stylesheet);\n  let styleText = generateCss(defaultStyles, 'all', classMap);\n\n  breakpoints.reverse();\n  breakpoints.forEach((bp, i) => {\n    serverSheet.clearStyles();\n    (matchMedia as ServerMatchMedia).activateBreakpoint(bp);\n    const stylesheet = new Map(serverSheet.stylesheet);\n    if (stylesheet.size > 0) {\n      styleText += generateCss(stylesheet, bp.mediaQuery, classMap);\n    }\n    (matchMedia as ServerMatchMedia).deactivateBreakpoint(breakpoints[i]);\n  });\n\n  return styleText;\n}\n\n/**\n * Create a style tag populated with the dynamic stylings from Flex\n * components and attach it to the head of the DOM\n */\nexport function FLEX_SSR_SERIALIZER_FACTORY(serverSheet: StylesheetMap,\n                                            matchMedia: MatchMedia,\n                                            _document: Document,\n                                            breakpoints: BreakPoint[]) {\n  return () => {\n    // This is the style tag that gets inserted into the head of the DOM,\n    // populated with the manual media queries\n    const styleTag = _document.createElement('style');\n    const styleText = generateStaticFlexLayoutStyles(serverSheet, matchMedia, breakpoints);\n    styleTag.classList.add(`${CLASS_NAME}ssr`);\n    styleTag.textContent = styleText;\n    _document.head.appendChild(styleTag);\n  };\n}\n\n/**\n *  Provider to set static styles on the server\n */\nexport const SERVER_PROVIDERS = [\n  {\n    provide: <InjectionToken<() => void>>BEFORE_APP_SERIALIZED,\n    useFactory: FLEX_SSR_SERIALIZER_FACTORY,\n    deps: [\n      StylesheetMap,\n      MatchMedia,\n      DOCUMENT,\n      BREAKPOINTS,\n    ],\n    multi: true\n  },\n  {\n    provide: SERVER_TOKEN,\n    useValue: true\n  },\n  {\n    provide: MatchMedia,\n    useClass: ServerMatchMedia\n  }\n];\n\n\nlet nextId = 0;\nconst IS_DEBUG_MODE = false;\n\nexport type StyleSheet = Map<HTMLElement, Map<string, string|number>>;\nexport type ClassMap = Map<HTMLElement, string>;\n\n/**\n * create @media queries based on a virtual stylesheet\n * * Adds a unique class to each element and stores it\n *   in a shared classMap for later reuse\n * @param stylesheet the virtual stylesheet that stores styles for each\n *        element\n * @param mediaQuery the given @media CSS selector for the current breakpoint\n * @param classMap the map of HTML elements to class names to avoid duplications\n */\nfunction generateCss(stylesheet: StyleSheet, mediaQuery: string, classMap: ClassMap) {\n  let css = '';\n  stylesheet.forEach((styles, el) => {\n    let keyVals = '', className = getClassName(el, classMap);\n\n    styles.forEach((v, k) => {\n      keyVals += v ? format(`${k}:${v};`) : '';\n    });\n\n    // Build list of CSS styles; each with a className\n    css += format(`.${className} {`, keyVals, '}');\n  });\n\n  // Group 1 or more styles (each with className) in a specific mediaQuery\n  return format(`@media ${mediaQuery} {`, css, '}');\n}\n\n/**\n * For debugging purposes, prefix css segment with linefeed(s) for easy\n  * debugging purposes.\n */\nfunction format(...list: string[]): string {\n  let result = '';\n  list.forEach((css, i) => {\n    result += IS_DEBUG_MODE ? formatSegment(css, i != 0) : css;\n  });\n  return result;\n}\n\nfunction formatSegment(css: string, asPrefix: boolean = true): string {\n  return asPrefix ? '\\n' + css : css + '\\n';\n}\n\n/**\n * Get className associated with CSS styling\n * If not found, generate global className and set\n * association.\n */\nfunction  getClassName(stylesheet, classMap) {\n  let className = classMap.get(stylesheet);\n   if (!className) {\n     className = `${CLASS_NAME}${nextId++}`;\n     classMap.set(stylesheet, className);\n   }\n   stylesheet.classList.add(className);\n\n   return className;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {SERVER_PROVIDERS} from './server-provider';\n\n@NgModule({\n  providers: [SERVER_PROVIDERS]\n})\nexport class FlexLayoutServerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('5.0.0-beta.13-afc433a');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, ModuleWithProviders, NgModule, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BreakPoint,\n  BreakPointProviderOptions,\n  CUSTOM_BREAKPOINTS_PROVIDER_FACTORY,\n  CoreModule,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\n\n\n/**\n * Since the equivalent results are easily achieved with a css class attached to each\n * layout child, these have been deprecated and removed from the API.\n *\n *  import {LayoutPaddingDirective} from './api/flexbox/layout-padding';\n *  import {LayoutMarginDirective} from './api/flexbox/layout-margin';\n */\n\n/**\n *\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, CoreModule],\n  exports: [FlexModule, ExtendedModule, CoreModule]\n})\nexport class FlexLayoutModule {\n\n  constructor (\n    @Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n\n  /**\n   * External uses can easily add custom breakpoints AND include internal orientations\n   * breakpoints; which are not available by default.\n   *\n   * !! Selector aliases are not auto-configured. Developers must subclass\n   * the API directives to support extra selectors for the orientations breakpoints !!\n   */\n  static provideBreakPoints(breakpoints: BreakPoint[],\n                            options?: BreakPointProviderOptions): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: [\n        CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(breakpoints, options || {orientations: false})\n      ]\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\nimport {Observable} from 'rxjs/Observable';\nimport {ReplaySubject} from 'rxjs/ReplaySubject';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive({selector: `\n  [fxLayout],\n  [fxLayout.xs], [fxLayout.sm], [fxLayout.md], [fxLayout.lg], [fxLayout.xl],\n  [fxLayout.lt-sm], [fxLayout.lt-md], [fxLayout.lt-lg], [fxLayout.lt-xl],\n  [fxLayout.gt-xs], [fxLayout.gt-sm], [fxLayout.gt-md], [fxLayout.gt-lg]\n`})\nexport class LayoutDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Create Observable for nested/child 'flex' directives. This allows\n   * child flex directives to subscribe/listen for flexbox direction changes.\n   */\n  protected _announcer: ReplaySubject<string>;\n\n  /**\n   * Publish observer to enabled nested, dependent directives to listen\n   * to parent 'layout' direction changes\n   */\n  layout$: Observable<string>;\n\n  /* tslint:disable */\n  @Input('fxLayout')       set layout(val)     { this._cacheInput('layout', val); };\n  @Input('fxLayout.xs')    set layoutXs(val)   { this._cacheInput('layoutXs', val); };\n  @Input('fxLayout.sm')    set layoutSm(val)   { this._cacheInput('layoutSm', val); };\n  @Input('fxLayout.md')    set layoutMd(val)   { this._cacheInput('layoutMd', val); };\n  @Input('fxLayout.lg')    set layoutLg(val)   { this._cacheInput('layoutLg', val); };\n  @Input('fxLayout.xl')    set layoutXl(val)   { this._cacheInput('layoutXl', val); };\n\n  @Input('fxLayout.gt-xs') set layoutGtXs(val) { this._cacheInput('layoutGtXs', val); };\n  @Input('fxLayout.gt-sm') set layoutGtSm(val) { this._cacheInput('layoutGtSm', val); };\n  @Input('fxLayout.gt-md') set layoutGtMd(val) { this._cacheInput('layoutGtMd', val); };\n  @Input('fxLayout.gt-lg') set layoutGtLg(val) { this._cacheInput('layoutGtLg', val); };\n\n  @Input('fxLayout.lt-sm') set layoutLtSm(val) { this._cacheInput('layoutLtSm', val); };\n  @Input('fxLayout.lt-md') set layoutLtMd(val) { this._cacheInput('layoutLtMd', val); };\n  @Input('fxLayout.lt-lg') set layoutLtLg(val) { this._cacheInput('layoutLtLg', val); };\n  @Input('fxLayout.lt-xl') set layoutLtXl(val) { this._cacheInput('layoutLtXl', val); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n    this._announcer = new ReplaySubject<string>(1);\n    this.layout$ = this._announcer.asObservable();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxLayout')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['layout'] != null || this._mqActivation) {\n      this._updateWithDirection();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('layout', 'row', (changes: MediaChange) => {\n      this._updateWithDirection(changes.value);\n    });\n    this._updateWithDirection();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Validate the direction value and then update the host's inline flexbox styles\n   */\n  protected _updateWithDirection(value?: string) {\n    value = value || this._queryInput('layout') || 'row';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Update styles and announce to subscribers the *new* direction\n    let css = buildLayoutCSS(!!value ? value : '');\n\n    this._applyStyleToElement(css);\n    this._announcer.next(css['flex-direction']);\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  Self,\n  AfterContentInit,\n  Optional,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {LayoutDirective} from '../layout/layout';\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n@Directive({\n  selector: `\n  [fxLayoutGap],\n  [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md], [fxLayoutGap.lg], [fxLayoutGap.xl],\n  [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md], [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl],\n  [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm], [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`\n})\nexport class LayoutGapDirective extends BaseFxDirective\n  implements AfterContentInit, OnChanges, OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n  protected _observer: MutationObserver;\n  private _directionWatcher: Subscription;\n\n  /* tslint:disable */\n @Input('fxLayoutGap')       set gap(val) { this._cacheInput('gap', val); }\n @Input('fxLayoutGap.xs')    set gapXs(val) { this._cacheInput('gapXs', val); }\n @Input('fxLayoutGap.sm')    set gapSm(val) { this._cacheInput('gapSm', val); };\n @Input('fxLayoutGap.md')    set gapMd(val) { this._cacheInput('gapMd', val); };\n @Input('fxLayoutGap.lg')    set gapLg(val) { this._cacheInput('gapLg', val); };\n @Input('fxLayoutGap.xl')    set gapXl(val) { this._cacheInput('gapXl', val); };\n\n @Input('fxLayoutGap.gt-xs') set gapGtXs(val) { this._cacheInput('gapGtXs', val); };\n @Input('fxLayoutGap.gt-sm') set gapGtSm(val) { this._cacheInput('gapGtSm', val); };\n @Input('fxLayoutGap.gt-md') set gapGtMd(val) { this._cacheInput('gapGtMd', val); };\n @Input('fxLayoutGap.gt-lg') set gapGtLg(val) { this._cacheInput('gapGtLg', val); };\n\n @Input('fxLayoutGap.lt-sm') set gapLtSm(val) { this._cacheInput('gapLtSm', val); };\n @Input('fxLayoutGap.lt-md') set gapLtMd(val) { this._cacheInput('gapLtMd', val); };\n @Input('fxLayoutGap.lt-lg') set gapLtLg(val) { this._cacheInput('gapLtLg', val); };\n @Input('fxLayoutGap.lt-xl') set gapLtXl(val) { this._cacheInput('gapLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              @Optional() @Self() container: LayoutDirective,\n              private _zone: NgZone,\n              private _directionality: Directionality,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n    this._directionWatcher =\n        this._directionality.change.subscribe(this._updateWithValue.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['gap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngAfterContentInit() {\n    this._watchContentChanges();\n    this._listenForMediaQueryChanges('gap', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n    if (this._directionWatcher) {\n      this._directionWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Watch for child nodes to be added... and apply the layout gap styles to each.\n   * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n   */\n  protected _watchContentChanges() {\n    this._zone.runOutsideAngular(() => {\n\n      if (typeof MutationObserver !== 'undefined') {\n        this._observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n                (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this._updateWithValue();\n          }\n        });\n        this._observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n    this._updateWithValue();\n  }\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('gap') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this._getDisplayStyle(el) != 'none')\n      .sort((a, b) => {\n        const orderA = +this._styler.lookupStyle(a, 'order');\n        const orderB = +this._styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const lastItem = items.pop();\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      this._applyStyleToElements(this._buildCSS(value), items);\n\n      // Clear all gaps for all visible elements\n      this._applyStyleToElements(this._buildCSS(), [lastItem]);\n    }\n  }\n\n  /**\n   * Prepare margin CSS, remove any previous explicitly\n   * assigned margin assignments\n   */\n  private _buildCSS(value: any = null) {\n    let key, margins = {\n      'margin-left': null,\n      'margin-right': null,\n      'margin-top': null,\n      'margin-bottom': null\n    };\n\n    switch (this._layout) {\n      case 'column':\n      case 'column-reverse':\n        key = 'margin-bottom';\n        break;\n      case 'row' :\n      case 'row-reverse':\n      default :\n        key = this._directionality.value === 'rtl' ? 'margin-left' : 'margin-right';\n        break;\n    }\n    margins[key] = value;\n\n    return margins;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LayoutDirective} from '../layout/layout';\nimport {validateBasis} from '../../utils/basis-validator';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\n\n/** Built-in aliases for different flex-basis values. */\nexport type FlexBasisAlias = 'grow' | 'initial' | 'auto' | 'none' | 'nogrow' | 'noshrink';\n\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive({selector: `\n  [fxFlex],\n  [fxFlex.xs], [fxFlex.sm], [fxFlex.md], [fxFlex.lg], [fxFlex.xl],\n  [fxFlex.lt-sm], [fxFlex.lt-md], [fxFlex.lt-lg], [fxFlex.lt-xl],\n  [fxFlex.gt-xs], [fxFlex.gt-sm], [fxFlex.gt-md], [fxFlex.gt-lg],\n`\n})\nexport class FlexDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /** The flex-direction of this element's flex container. Defaults to 'row'. */\n  protected _layout: string;\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShrink')     set shrink(val)    { this._cacheInput('shrink', val); };\n  @Input('fxGrow')       set grow(val)      { this._cacheInput('grow', val); };\n\n  @Input('fxFlex')       set flex(val)      { this._cacheInput('flex', val); };\n  @Input('fxFlex.xs')    set flexXs(val)    { this._cacheInput('flexXs', val); };\n  @Input('fxFlex.sm')    set flexSm(val)    { this._cacheInput('flexSm', val); };\n  @Input('fxFlex.md')    set flexMd(val)    { this._cacheInput('flexMd', val); };\n  @Input('fxFlex.lg')    set flexLg(val)    { this._cacheInput('flexLg', val); };\n  @Input('fxFlex.xl')    set flexXl(val)    { this._cacheInput('flexXl', val); };\n\n  @Input('fxFlex.gt-xs') set flexGtXs(val)  { this._cacheInput('flexGtXs', val); };\n  @Input('fxFlex.gt-sm') set flexGtSm(val)  { this._cacheInput('flexGtSm', val); };\n  @Input('fxFlex.gt-md') set flexGtMd(val)  { this._cacheInput('flexGtMd', val); };\n  @Input('fxFlex.gt-lg') set flexGtLg(val)  { this._cacheInput('flexGtLg', val); };\n\n  @Input('fxFlex.lt-sm') set flexLtSm(val) { this._cacheInput('flexLtSm', val); };\n  @Input('fxFlex.lt-md') set flexLtMd(val) { this._cacheInput('flexLtMd', val); };\n  @Input('fxFlex.lt-lg') set flexLtLg(val) { this._cacheInput('flexLtLg', val); };\n  @Input('fxFlex.lt-xl') set flexLtXl(val) { this._cacheInput('flexLtXl', val); };\n  /* tslint:enable */\n\n  // Note: Explicitly @SkipSelf on LayoutDirective because we are looking\n  //       for the parent flex container for this flex item.\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              protected styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    this._cacheInput('flex', '');\n    this._cacheInput('shrink', 1);\n    this._cacheInput('grow', 1);\n\n    if (_container) {\n      // If this flex item is inside of a flex container marked with\n      // Subscribe to layout immediate parent direction changes\n      this._layoutWatcher = _container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['flex'] != null || this._mqActivation) {\n      this._updateStyle();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('flex', '', (changes: MediaChange) => {\n      this._updateStyle(changes.value);\n    });\n    this._updateStyle();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateStyle();\n  }\n\n  protected _updateStyle(value?: string|number) {\n    let flexBasis = value || this._queryInput('flex') || '';\n    if (this._mqActivation) {\n      flexBasis = this._mqActivation.activatedInput;\n    }\n\n    let basis = String(flexBasis).replace(';', '');\n    let parts = validateBasis(basis, this._queryInput('grow'), this._queryInput('shrink'));\n    this._applyStyleToElement(this._validateValue.apply(this, parts));\n  }\n\n  /**\n   * Validate the value to be one of the acceptable value options\n   * Use default fallback of 'row'\n   */\n  protected _validateValue(grow: number|string,\n                           shrink: number|string,\n                           basis: string|number|FlexBasisAlias) {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    let layout = this._getFlowDirection(this.parentElement, true);\n    let direction = (layout.indexOf('column') > -1) ? 'column' : 'row';\n\n    let max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    let min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    let hasCalc = String(basis).indexOf('calc') > -1;\n    let usingCalc = hasCalc || (basis == 'auto');\n    let isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    let hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('em') > -1 ||\n      String(basis).indexOf('vw') > -1 || String(basis).indexOf('vh') > -1;\n    let isPx = String(basis).indexOf('px') > -1 || usingCalc;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    let isFixed = !grow && !shrink;\n\n    let css = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    let clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        basis = '0.000000001px';\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277 and 534\n    // TODO(CaerusKaru): convert this to just width/height\n    if (basis !== '0%') {\n      css[min] = isFixed || (isPx && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'});\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\n\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n@Directive({selector: `\n  [fxFlexOrder],\n  [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md], [fxFlexOrder.lg], [fxFlexOrder.xl],\n  [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md], [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl],\n  [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm], [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`})\nexport class FlexOrderDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOrder')       set order(val)     { this._cacheInput('order', val); }\n  @Input('fxFlexOrder.xs')    set orderXs(val)   { this._cacheInput('orderXs', val); }\n  @Input('fxFlexOrder.sm')    set orderSm(val)   { this._cacheInput('orderSm', val); };\n  @Input('fxFlexOrder.md')    set orderMd(val)   { this._cacheInput('orderMd', val); };\n  @Input('fxFlexOrder.lg')    set orderLg(val)   { this._cacheInput('orderLg', val); };\n  @Input('fxFlexOrder.xl')    set orderXl(val)   { this._cacheInput('orderXl', val); };\n\n  @Input('fxFlexOrder.gt-xs') set orderGtXs(val) { this._cacheInput('orderGtXs', val); };\n  @Input('fxFlexOrder.gt-sm') set orderGtSm(val) { this._cacheInput('orderGtSm', val); };\n  @Input('fxFlexOrder.gt-md') set orderGtMd(val) { this._cacheInput('orderGtMd', val); };\n  @Input('fxFlexOrder.gt-lg') set orderGtLg(val) { this._cacheInput('orderGtLg', val); };\n\n  @Input('fxFlexOrder.lt-sm') set orderLtSm(val) { this._cacheInput('orderLtSm', val); };\n  @Input('fxFlexOrder.lt-md') set orderLtMd(val) { this._cacheInput('orderLtMd', val); };\n  @Input('fxFlexOrder.lt-lg') set orderLtLg(val) { this._cacheInput('orderLtLg', val); };\n  @Input('fxFlexOrder.lt-xl') set orderLtXl(val) { this._cacheInput('orderLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['order'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('order', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('order') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n\n  protected _buildCSS(value) {\n    value = parseInt(value, 10);\n    return {order: isNaN(value) ? 0 : value};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseFxDirective,\n  MediaChange,\n  MediaMonitor,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {LayoutDirective} from '../layout/layout';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive({selector: `\n  [fxFlexOffset],\n  [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md], [fxFlexOffset.lg], [fxFlexOffset.xl],\n  [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md], [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl],\n  [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm], [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`})\nexport class FlexOffsetDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n  private _directionWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxFlexOffset')       set offset(val)     { this._cacheInput('offset', val); }\n  @Input('fxFlexOffset.xs')    set offsetXs(val)   { this._cacheInput('offsetXs', val); }\n  @Input('fxFlexOffset.sm')    set offsetSm(val)   { this._cacheInput('offsetSm', val); };\n  @Input('fxFlexOffset.md')    set offsetMd(val)   { this._cacheInput('offsetMd', val); };\n  @Input('fxFlexOffset.lg')    set offsetLg(val)   { this._cacheInput('offsetLg', val); };\n  @Input('fxFlexOffset.xl')    set offsetXl(val)   { this._cacheInput('offsetXl', val); };\n\n  @Input('fxFlexOffset.lt-sm') set offsetLtSm(val) { this._cacheInput('offsetLtSm', val); };\n  @Input('fxFlexOffset.lt-md') set offsetLtMd(val) { this._cacheInput('offsetLtMd', val); };\n  @Input('fxFlexOffset.lt-lg') set offsetLtLg(val) { this._cacheInput('offsetLtLg', val); };\n  @Input('fxFlexOffset.lt-xl') set offsetLtXl(val) { this._cacheInput('offsetLtXl', val); };\n\n  @Input('fxFlexOffset.gt-xs') set offsetGtXs(val) { this._cacheInput('offsetGtXs', val); };\n  @Input('fxFlexOffset.gt-sm') set offsetGtSm(val) { this._cacheInput('offsetGtSm', val); };\n  @Input('fxFlexOffset.gt-md') set offsetGtMd(val) { this._cacheInput('offsetGtMd', val); };\n  @Input('fxFlexOffset.gt-lg') set offsetGtLg(val) { this._cacheInput('offsetGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              private _directionality: Directionality,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    this._directionWatcher =\n        this._directionality.change.subscribe(this._updateWithValue.bind(this));\n\n    this.watchParentFlow();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['offset'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * Cleanup\n   */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._directionWatcher) {\n      this._directionWatcher.unsubscribe();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('offset', 0 , (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** The flex-direction of this element's host container. Defaults to 'row'. */\n  protected _layout = 'row';\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /**\n   * If parent flow-direction changes, then update the margin property\n   * used to offset\n   */\n  protected watchParentFlow() {\n    if (this._container) {\n      // Subscribe to layout immediate parent direction changes (if any)\n      this._layoutWatcher = this._container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateWithValue();\n  }\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('offset') || 0;\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(offset): StyleDefinition {\n    let isPercent = String(offset).indexOf('%') > -1;\n    let isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(offset)) {\n      offset = offset + '%';\n    }\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const isRtl = this._directionality.value === 'rtl';\n    const layout = this._getFlowDirection(this.parentElement, true);\n    const horizontalLayoutKey = isRtl ? 'margin-right' : 'margin-left';\n\n    return isFlowHorizontal(layout) ? {[horizontalLayoutKey]: `${offset}`} :\n                                      {'margin-top': `${offset}`};\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\n\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n@Directive({\n  selector: `\n  [fxFlexAlign],\n  [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md], [fxFlexAlign.lg], [fxFlexAlign.xl],\n  [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md], [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl],\n  [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm], [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`\n})\nexport class FlexAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexAlign')       set align(val)  { this._cacheInput('align', val);  };\n  @Input('fxFlexAlign.xs')    set alignXs(val)  { this._cacheInput('alignXs', val);  };\n  @Input('fxFlexAlign.sm')    set alignSm(val)  { this._cacheInput('alignSm', val); };\n  @Input('fxFlexAlign.md')    set alignMd(val)  { this._cacheInput('alignMd', val); };\n  @Input('fxFlexAlign.lg')    set alignLg(val)  { this._cacheInput('alignLg', val); };\n  @Input('fxFlexAlign.xl')    set alignXl(val)  { this._cacheInput('alignXl', val); };\n\n  @Input('fxFlexAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxFlexAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxFlexAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxFlexAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  @Input('fxFlexAlign.gt-xs') set alignGtXs(val)  { this._cacheInput('alignGtXs', val); };\n  @Input('fxFlexAlign.gt-sm') set alignGtSm(val)  { this._cacheInput('alignGtSm', val); };\n  @Input('fxFlexAlign.gt-md') set alignGtMd(val)  { this._cacheInput('alignGtMd', val); };\n  @Input('fxFlexAlign.gt-lg') set alignGtLg(val)  { this._cacheInput('alignGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('align', 'stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('align') || 'stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(align) {\n    let css = {};\n\n    // Cross-axis\n    switch (align) {\n      case 'start':\n        css['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        css['align-self'] = 'flex-end';\n        break;\n      default:\n        css['align-self'] = align;\n        break;\n    }\n\n    return css;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef} from '@angular/core';\nimport {BaseFxDirective, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\n\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `\n  [fxFill],\n  [fxFlexFill]\n`})\nexport class FlexFillDirective extends BaseFxDirective {\n  constructor(monitor: MediaMonitor,\n              public elRef: ElementRef,\n              styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n    this._applyStyleToElement(FLEX_FILL_CSS);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  Self,\n} from '@angular/core';\nimport {BaseFxDirective, MediaChange, MediaMonitor, StyleUtils} from '@angular/flex-layout/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LayoutDirective} from '../layout/layout';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n@Directive({selector: `\n  [fxLayoutAlign],\n  [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md], [fxLayoutAlign.lg],[fxLayoutAlign.xl],\n  [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md], [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl],\n  [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm], [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`})\nexport class LayoutAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxLayoutAlign')       set align(val)     { this._cacheInput('align', val); }\n  @Input('fxLayoutAlign.xs')    set alignXs(val)   { this._cacheInput('alignXs', val); }\n  @Input('fxLayoutAlign.sm')    set alignSm(val)   { this._cacheInput('alignSm', val); };\n  @Input('fxLayoutAlign.md')    set alignMd(val)   { this._cacheInput('alignMd', val); };\n  @Input('fxLayoutAlign.lg')    set alignLg(val)   { this._cacheInput('alignLg', val); };\n  @Input('fxLayoutAlign.xl')    set alignXl(val)   { this._cacheInput('alignXl', val); };\n\n  @Input('fxLayoutAlign.gt-xs') set alignGtXs(val) { this._cacheInput('alignGtXs', val); };\n  @Input('fxLayoutAlign.gt-sm') set alignGtSm(val) { this._cacheInput('alignGtSm', val); };\n  @Input('fxLayoutAlign.gt-md') set alignGtMd(val) { this._cacheInput('alignGtMd', val); };\n  @Input('fxLayoutAlign.gt-lg') set alignGtLg(val) { this._cacheInput('alignGtLg', val); };\n\n  @Input('fxLayoutAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxLayoutAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxLayoutAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxLayoutAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  /* tslint:enable */\n  constructor(\n      monitor: MediaMonitor,\n      elRef: ElementRef,\n      @Optional() @Self() container: LayoutDirective,\n      styleUtils: StyleUtils) {\n    super(monitor, elRef, styleUtils);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('align', 'start stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if ( this._layoutWatcher ) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n    this._allowStretching(value, !this._layout ? 'row' : this._layout);\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n\n    let value = this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n    this._allowStretching(value, this._layout || 'row');\n  }\n\n  protected _buildCSS(align) {\n    let css = {}, [main_axis, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    // Main axis\n    switch (main_axis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (cross_axis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'baseline':\n        css['align-items'] = 'baseline';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : this._layout || 'row',\n      'box-sizing' : 'border-box'\n    });\n  }\n\n\n  /**\n   * Update container element to 'stretch' as needed...\n   * NOTE: this is only done if the crossAxis is explicitly set to 'stretch'\n   */\n  protected _allowStretching(align, layout) {\n    let [, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    if (cross_axis == 'stretch') {\n      // Use `null` values to remove style\n      this._applyStyleToElement({\n        'box-sizing': 'border-box',\n        'max-width': !isFlowHorizontal(layout) ? '100%' : null,\n        'max-height': isFlowHorizontal(layout) ? '100%' : null\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {\n  BROWSER_PROVIDER,\n  CoreModule,\n  STYLESHEET_MAP_PROVIDER,\n  StylesheetMap,\n  StyleUtils\n} from '@angular/flex-layout/core';\n\nimport {LayoutDirective} from './layout/layout';\nimport {LayoutGapDirective} from './layout-gap/layout-gap';\nimport {FlexDirective} from './flex/flex';\nimport {FlexOrderDirective} from './flex-order/flex-order';\nimport {FlexOffsetDirective} from './flex-offset/flex-offset';\nimport {FlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {LayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  LayoutDirective,\n  LayoutGapDirective,\n  LayoutAlignDirective,\n  FlexDirective,\n  FlexOrderDirective,\n  FlexOffsetDirective,\n  FlexFillDirective,\n  FlexAlignDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES],\n  providers: [\n    StylesheetMap,\n    StyleUtils,\n    BROWSER_PROVIDER,\n    STYLESHEET_MAP_PROVIDER,\n  ]\n})\nexport class FlexModule {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operators/filter';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable()\nexport class MatchMedia {\n  protected _registry: Map<string, MediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    this._registry = new Map<string, MediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    let mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    if (mediaQuery) {\n      this.registerQuery(mediaQuery);\n    }\n\n    return this._observable$.pipe(\n      filter((change: MediaChange) => {\n        return mediaQuery ? (change.mediaQuery === mediaQuery) : true;\n      })\n    );\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    let list = normalizeQuery(mediaQuery);\n\n    if (list.length > 0) {\n      this._prepareQueryCSS(list, this._document);\n\n      list.forEach(query => {\n        let mql = this._registry.get(query);\n        let onMQLEvent = (e: MediaQueryList) => {\n          this._zone.run(() => {\n            let change = new MediaChange(e.matches, query);\n            this._source.next(change);\n          });\n        };\n\n        if (!mql) {\n          mql = this._buildMQL(query);\n          mql.addListener(onMQLEvent);\n          this._registry.set(query, mql);\n        }\n\n        if (mql.matches) {\n          onMQLEvent(mql);  // Announce activate range for initial subscribers\n        }\n      });\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    let canListen = isPlatformBrowser(this._platformId) &&\n      !!(<any>window).matchMedia('all').addListener;\n\n    return canListen ? (<any>window).matchMedia(query) : <MediaQueryList>{\n      matches: query === 'all' || query === '',\n      media: query,\n      addListener: () => {\n      },\n      removeListener: () => {\n      }\n    };\n  }\n\n  /**\n   * For Webkit engines that only trigger the MediaQueryList Listener\n   * when there is at least one CSS selector for the respective media query.\n   *\n   * @param query string The mediaQuery used to create a faux CSS selector\n   *\n   */\n  protected _prepareQueryCSS(mediaQueries: string[], _document: Document) {\n    let list = mediaQueries.filter(it => !ALL_STYLES[it]);\n    if (list.length > 0) {\n      let query = list.join(', ');\n\n      try {\n        let styleEl = _document.createElement('style');\n\n        styleEl.setAttribute('type', 'text/css');\n        if (!styleEl['styleSheet']) {\n          let cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n` ;\n          styleEl.appendChild(_document.createTextNode(cssText));\n        }\n\n        _document.head.appendChild(styleEl);\n\n        // Store in private global registry\n        list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n\n/**\n * Always convert to unique list of queries; for iteration in ::registerQuery()\n */\nfunction normalizeQuery(mediaQuery: string | string[]): string[] {\n  return (typeof mediaQuery === 'undefined') ? [] :\n      (typeof mediaQuery === 'string') ? [mediaQuery] : unique(mediaQuery as string[]);\n}\n\n/**\n * Filter duplicate mediaQueries in the list\n */\nfunction unique(list: string[]): string[] {\n  let seen = {};\n  return list.filter(item => {\n    return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n  });\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {extendObject} from '../utils/object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null) {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {ObservableMedia, MediaService} from './observable-media';\n\n/**\n * Ensure a single global ObservableMedia service provider\n */\nexport function OBSERVABLE_MEDIA_PROVIDER_FACTORY(parentService: ObservableMedia,\n                                                  matchMedia: MatchMedia,\n                                                  breakpoints: BreakPointRegistry) {\n  return parentService || new MediaService(breakpoints, matchMedia);\n}\n/**\n *  Provider to return global service for observable service for all MediaQuery activations\n */\nexport const OBSERVABLE_MEDIA_PROVIDER = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  deps: [\n    [ new Optional(), new SkipSelf(), ObservableMedia ],\n    MatchMedia,\n    BreakPointRegistry\n  ],\n  useFactory: OBSERVABLE_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix || bp.suffix === '') {\n      bp.suffix = camelCase(bp.alias);          // create Suffix value based on alias\n      bp.overlapping = bp.overlapping || false; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const merged = defaults.map((bp) => extendObject({}, bp));\n  const findByAlias = (alias) => merged.reduce((result, bp) => {\n    return result || (( bp.alias === alias) ? bp : null);\n  }, null);\n\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    let target = findByAlias(bp.alias);\n    if (target) {\n      extendObject(target, bp);\n    } else {\n      merged.push(bp);\n    }\n  });\n\n  return validateSuffixes(merged);\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {DEFAULT_BREAKPOINTS} from './data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from './data/orientation-break-points';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {mergeByAlias, validateSuffixes} from './breakpoint-tools';\n\n\n/**\n * Options to identify which breakpoint types to include as part of\n * a BreakPoint provider\n */\nexport interface BreakPointProviderOptions {\n  /**\n   * include pre-configured, internal default breakpoints.\n   * @default 'true'\n   */\n  defaults ?: boolean;\n  /**\n   * include pre-configured, internal orientations breakpoints.\n   * @default 'false'\n   */\n  orientations ?: boolean;\n}\n\n/**\n * Add new custom items to the default list or override existing default with custom overrides\n */\nexport function buildMergedBreakPoints(_custom?: BreakPoint[],\n                                       options?: BreakPointProviderOptions) {\n  options = extendObject({}, {\n        defaults: true,       // exclude pre-configured, internal default breakpoints\n        orientation: false      // exclude pre-configured, internal orientations breakpoints\n  }, options || {});\n\n  return () => {\n    // Order so the defaults are loaded last; so ObservableMedia will report these last!\n    let defaults = (options && options.orientations) ?\n      ORIENTATION_BREAKPOINTS.concat(DEFAULT_BREAKPOINTS) : DEFAULT_BREAKPOINTS;\n\n    return (options && options.defaults) ?\n      mergeByAlias(defaults, _custom || []) : mergeByAlias(_custom || []);\n  };\n}\n\n/**\n *  Ensure that only a single global BreakPoint list is instantiated...\n */\nexport function DEFAULT_BREAKPOINTS_PROVIDER_FACTORY() {\n  return validateSuffixes(DEFAULT_BREAKPOINTS);\n}\n/**\n * Default Provider that does not support external customization nor provide\n * the extra extended breakpoints:   \"handset\", \"tablet\", and \"web\"\n *\n *  NOTE: !! breakpoints are considered to have unique 'alias' properties,\n *        custom breakpoints matching existing breakpoints will override the properties\n *        of the existing (and not be added as an extra breakpoint entry).\n *        [xs, gt-xs, sm, gt-sm, md, gt-md, lg, gt-lg, xl]\n */\nexport const DEFAULT_BREAKPOINTS_PROVIDER = { // tslint:disable-line:variable-name\n  provide: BREAKPOINTS,\n  useFactory: DEFAULT_BREAKPOINTS_PROVIDER_FACTORY\n};\n/**\n * Use with FlexLayoutModule.CUSTOM_BREAKPOINTS_PROVIDER_FACTORY!\n */\nexport function CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(_custom?: BreakPoint[],\n                                                    options?: BreakPointProviderOptions) {\n  return {\n    provide: <InjectionToken<BreakPoint[]>>BREAKPOINTS,\n    useFactory: buildMergedBreakPoints(_custom, options)\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken, NgZone, Optional, PLATFORM_ID, SkipSelf} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media/match-media';\n\n/**\n * Ensure a single global service provider\n */\nexport function MATCH_MEDIA_PROVIDER_FACTORY(parentMedia: MatchMedia,\n                                             ngZone: NgZone,\n                                             platformId: Object,\n                                             _document: Document) {\n  return parentMedia || new MatchMedia(ngZone, platformId, _document);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const MATCH_MEDIA_PROVIDER = {\n  provide : MatchMedia,\n  deps : [\n    [ new Optional(), new SkipSelf(), MatchMedia ],\n    NgZone,\n    <InjectionToken<Object>>PLATFORM_ID,\n    <InjectionToken<Document>>DOCUMENT,\n  ],\n  useFactory : MATCH_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {StylesheetMap} from './stylesheet-map';\n\n/**\n * Ensure a single global service provider\n */\nexport function STYLESHEET_MAP_PROVIDER_FACTORY(parentSheet: StylesheetMap) {\n  return parentSheet || new StylesheetMap();\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const STYLESHEET_MAP_PROVIDER = {\n  provide: StylesheetMap,\n  deps: [\n    [new Optional(), new SkipSelf(), StylesheetMap],\n  ],\n  useFactory: STYLESHEET_MAP_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\n\n/**\n * Ensure a single global service provider\n */\nexport function MEDIA_MONITOR_PROVIDER_FACTORY(parentMonitor: MediaMonitor,\n                                               breakpoints: BreakPointRegistry,\n                                               matchMedia: MatchMedia) {\n  return parentMonitor || new MediaMonitor(breakpoints, matchMedia);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const MEDIA_MONITOR_PROVIDER = {\n  provide : MediaMonitor,\n  deps : [\n    [ new Optional(), new SkipSelf(), MediaMonitor ],\n    BreakPointRegistry,\n    MatchMedia,\n  ],\n  useFactory : MEDIA_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n    new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overriden from custom, application-specific ranges\n *\n */\n@Injectable()\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[ ] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint | null {\n    return this._registry.find(bp => bp.alias == alias) || null;\n  }\n\n  findByQuery(query: string): BreakPoint | null {\n    return this._registry.find(bp => bp.mediaQuery == query) || null;\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => !!it.suffix ? it.suffix : '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string;\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operators/filter';\nimport {map} from 'rxjs/operators/map';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\nimport {mergeAlias} from '../add-alias';\n\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n */\n@Injectable()\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    let items: BreakPoint[] = this._breakpoints.overlappings.reverse();\n    return items.filter((bp: BreakPoint) => {\n      return this._matchMedia.isActive(bp.mediaQuery);\n    });\n  }\n\n  get active(): BreakPoint | null {\n    let found: BreakPoint | null = null, items = this.breakpoints.reverse();\n    items.forEach(bp => {\n      if (bp.alias !== '') {\n        if (!found && this._matchMedia.isActive(bp.mediaQuery)) {\n          found = bp;\n        }\n      }\n    });\n\n    let first = this.breakpoints[0];\n    return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias?: string): Observable<MediaChange> {\n    let bp = this._breakpoints.findByAlias(alias || '') ||\n      this._breakpoints.findByQuery(alias || '');\n    let hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    let media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return media$.pipe(\n      map(change => mergeAlias(change, bp)),\n      filter(hasAlias)\n    );\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    let queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {Observable, Subscribable} from 'rxjs/Observable';\nimport {map} from 'rxjs/operators/map';\nimport {filter} from 'rxjs/operators/filter';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {mergeAlias} from '../add-alias';\nimport {BreakPoint} from '../breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import {filter} from 'rxjs/operators/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .pipe(\n *          filter((change:MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable()\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias): boolean {\n    let query = this._toMediaQuery(alias);\n    return this.mediaWatcher.isActive(query);\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(next?: (value: MediaChange) => void,\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    return this.observable$.subscribe(next, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    let queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const self = this;\n    const media$ = this.mediaWatcher.observe();\n    const activationsOnly = (change: MediaChange) => {\n      return change.matches === true;\n    };\n    const addAliasInformation = (change: MediaChange) => {\n      return mergeAlias(change, this._findByQuery(change.mediaQuery));\n    };\n    const excludeOverlaps = (change: MediaChange) => {\n      let bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(self.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return media$.pipe(\n      filter(activationsOnly),\n      filter(excludeOverlaps),\n      map(addAliasInformation)\n    );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query) {\n    let bp: BreakPoint | null = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private observable$: Observable<MediaChange>;\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(min-width: 0px) and (max-width: 599px)'\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)'\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)'\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)'\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)'\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)'\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)'\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)'\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)'\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)'\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1920px)'\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)'\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientations: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientations: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientations: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientations: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientations: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientations: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor/media-monitor';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {OBSERVABLE_MEDIA_PROVIDER} from './observable-media/observable-media-provider';\nimport {DEFAULT_BREAKPOINTS_PROVIDER} from './breakpoints/break-points-provider';\nimport {MATCH_MEDIA_PROVIDER} from './match-media/match-media-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [\n    DEFAULT_BREAKPOINTS_PROVIDER,  // Supports developer overrides of list of known breakpoints\n    BreakPointRegistry,      // Registry of known/used BreakPoint(s)\n    MATCH_MEDIA_PROVIDER,    // Low-level service to publish observables w/ window.matchMedia()\n    MediaMonitor,            // MediaQuery monitor service observes all known breakpoints\n    OBSERVABLE_MEDIA_PROVIDER  // easy subscription injectable `media$` matchMedia observable\n  ]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from './module';\n\n\n/**\n * @deprecated use Core Module instead\n * @deletion-target 5.0.0-beta.15\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n@NgModule({\n  imports: [CoreModule],\n  exports: [CoreModule],\n})\nexport class MediaQueriesModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable()\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>('FlexLayoutServerLoaded');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs/Subscription';\nimport {map} from 'rxjs/operators/map';\n\nimport {MediaChange, MediaQuerySubscriber} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\n\nexport declare type SubscriptionList = Subscription[];\n\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nexport class ResponsiveActivation {\n  private _subscribers: SubscriptionList = [];\n  private _activatedInputKey: string;\n  private _registryMap: BreakPointX[];\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n    this._registryMap = this._buildRegistryMap();\n    this._subscribers = this._configureChangeObservers();\n  }\n\n  /**\n   * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n   * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n   * important when several media queries are 'registered' and from which, the browser uses the\n   * first matching media query.\n   */\n  get registryFromLargest(): BreakPointX[] {\n    return [...this._registryMap].reverse();\n  }\n\n  /**\n   * Accessor to the DI'ed directive property\n   * Each directive instance has a reference to the MediaMonitor which is\n   * used HERE to subscribe to mediaQuery change notifications.\n   */\n  get mediaMonitor(): MediaMonitor {\n    return this._mediaMonitor;\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    let key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  hasKeyValue(key) {\n    let value = this._options.inputKeys[key];\n    return typeof value !== 'undefined';\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach((link: Subscription) => {\n      link.unsubscribe();\n    });\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): SubscriptionList {\n    let subscriptions: Subscription[] = [];\n\n    this._registryMap.forEach((bp: BreakPointX) => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        let buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n          this.mediaMonitor\n              .observe(bp.alias)\n              .pipe(map(buildChanges))\n              .subscribe(change => {\n                this._onMonitorEvents(change);\n              })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this.mediaMonitor.breakpoints\n        .map(bp => {\n          return <BreakPointX> extendObject({}, bp, {\n            baseKey: this._options.baseKey,             // e.g. layout, hide, self-align, flex-wrap\n            key: this._options.baseKey + bp.suffix  // e.g.  layoutGtSm, layoutMd, layoutGtLg\n          });\n        })\n        .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property == this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                     // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey == currentKey) ? '' : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey) {\n    let isMissingKey = (key) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      this.mediaMonitor.activeOverlaps.some(bp => {\n        let key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  SimpleChange,\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  StyleUtils,\n} from '../style-utils/style-utils';\n\nimport {ResponsiveActivation, KeyOptions} from '../responsive-activation/responsive-activation';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {MediaQuerySubscriber} from '../media-change';\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective implements OnDestroy, OnChanges {\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access to host element's parent DOM node\n   */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  protected get nativeElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._display = this._getDisplayStyle();\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseFxDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    delete this._mediaMonitor;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows us to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source: HTMLElement = this.nativeElement): string {\n    const query = 'display';\n    return this._styler.lookupStyle(source, query);\n  }\n\n  /**\n   * Quick accessor to raw attribute value on the target DOM element\n   */\n  protected _getAttributeValue(attribute: string,\n                               source: HTMLElement = this.nativeElement): string {\n    return this._styler.lookupAttributeValue(source, attribute);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    let value = 'row';\n    let hasInlineValue = '';\n\n    if (target) {\n      [value, hasInlineValue] = this._styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this._styler.applyStyleToElements(style, elements);\n      }\n    }\n\n    return value.trim() || 'row';\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 element: HTMLElement = this.nativeElement) {\n    this._styler.applyStyleToElement(element, style, value);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[]) {\n    this._styler.applyStyleToElements(style, elements);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      if (!!key) {\n        this._inputMap[key] = source;\n      }\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(\n          keyOptions,\n          this._mediaMonitor,\n          (change) => onMediaQueryChange(change)\n      );\n    }\n    return this._mqActivation;\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /**\n   * Does this directive have 1 or more responsive keys defined\n   * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n   */\n  hasResponsiveAPI(baseKey: string) {\n    const totalKeys = Object.keys(this._inputMap).length;\n    const baseValue = this._inputMap[baseKey];\n    return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n  }\n\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** Original dom Elements CSS display style */\n  protected _display;\n\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {ResponsiveActivation} from '../responsive-activation/responsive-activation';\nimport {MediaQuerySubscriber} from '../media-change';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {StyleUtils} from '../style-utils/style-utils';\n\n\n/**\n * Adapter to the BaseFxDirective abstract class so it can be used via composition.\n * @see BaseFxDirective\n */\nexport class BaseFxDirectiveAdapter extends BaseFxDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseFxDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation;\n  }\n\n  /**\n   * BaseFxDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n    super(_mediaMonitor, _elementRef, _styler);\n  }\n\n  /**\n    * Does this directive have 1 or more responsive keys defined\n    * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n    */\n  hasResponsiveAPI() {\n   return super.hasResponsiveAPI(this._baseKey);\n  }\n\n  /**\n   * @see BaseFxDirective._queryInput\n   */\n  queryInput(key) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error(\n        `Invalid class value '${key}' provided. Did you want to cache the raw value?`\n      );\n    }\n  }\n\n  /**\n   * @see BaseFxDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    if (key) {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source ? source.join(' ') : '';\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes: string[] = [];\n    if (source) {\n      for (let prop in source) {\n        if (!!source[prop]) {\n          classes.push(prop);\n        }\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n    this._actives = [];\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList, _) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias) {\n    let bp = this._breakpoints.findByAlias(queryOrAlias);\n    if (bp) {\n      queryOrAlias = bp.mediaQuery;\n    }\n    return queryOrAlias;\n  }\n\n  /**\n   * Manually activate any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      let bp = this._breakpoints.findByQuery(mediaQuery);\n      let alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activate of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases) {\n    let activate = (alias) => {\n      let bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery) {\n    let mql = <MockMediaQueryList> this._registry.get(mediaQuery);\n    let alreadyAdded = this._actives.reduce((found, it) => {\n      return found || (mql && (it.media === mql.media));\n    }, false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current Mock MQLs */\n  private _deactivateAll() {\n    if (this._actives.length) {\n      // Deactivate all current MQLs and reset the buffer\n      for (const it of this._actives) {\n        it.deactivate();\n      }\n      this._actives = [];\n    }\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return (this._actives.length > 0);\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\nimport {MediaChange} from '../media-change';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n    this._registry = new Map<string, ServerMediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../server-token';\n\n@Injectable()\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement, style: StyleDefinition, value?: string | number) {\n    let styles = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    if (value === FALLBACK_STYLE) {\n      value = '';\n    }\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return element.style[styleName] || element.style.getPropertyValue(styleName) || '';\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : FALLBACK_STYLE;\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: {}, element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n      values.sort();\n      for (let value of values) {\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          element.style.setProperty(key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n\nconst FALLBACK_STYLE = 'block';\n"],"names":["isPlatformServer","this","_platformId","_serverModuleLoaded","_styler","applyStyleToElement","nativeElement","content","url","setAttribute","String","ImgSrcDirective","prototype","cacheDefaultSrc","value","_cacheInput","Object","defineProperty","_queryInput","keys","_inputMap","length","type","Directive","args","selector","ElementRef","MediaMonitor","StyleUtils","decorators","Inject","PLATFORM_ID","undefined","Optional","SERVER_TOKEN","srcBase","Input","srcXs","srcSm","srcMd","srcLg","srcXl","srcLtSm","srcLtMd","srcLtLg","srcLtXl","srcGtXs","srcGtSm","srcGtMd","srcGtLg","BaseFxDirective","ClassDirective","monitor","_iterableDiffers","_keyValueDiffers","_ngEl","_renderer","_ngClassInstance","_this","_super","call","_configureAdapters","tslib_1.__extends","val","_base","cacheInput","ngClass","queryInput","klass","ngOnChanges","changes","activeKey","mqActivation","activatedInput","ngOnInit","_configureMQListener","ngDoCheck","ngOnDestroy","BaseFxDirectiveAdapter","NgClass","baseKey","fallbackValue","listenForMediaQueryChanges","IterableDiffers","KeyValueDiffers","Renderer2","Self","ngClassBase","klazz","ngClassXs","ngClassSm","ngClassMd","ngClassLg","ngClassXl","ngClassLtSm","ngClassLtMd","ngClassLtLg","ngClassLtXl","ngClassGtXs","ngClassGtSm","ngClassGtMd","ngClassGtLg","FALSY","ShowHideDirective","layout","elRef","styleUtils","platformId","serverModuleLoaded","_layoutWatcher","layout$","subscribe","_updateWithValue","negativeOf","_getDisplayStyle","hasInitialized","_mqActivation","_getDefaultVal","_listenForMediaQueryChanges","unsubscribe","shouldShow","_validateTruthy","_applyStyleToElement","_buildCSS","style","setProperty","show","display","_display","indexOf","LayoutDirective","showXs","showSm","showMd","showLg","showXl","showLtSm","showLtMd","showLtLg","showLtXl","showGtXs","showGtSm","showGtMd","showGtLg","hide","hideXs","hideSm","hideMd","hideLg","hideXl","hideLtSm","hideLtMd","hideLtLg","hideLtXl","hideGtXs","hideGtSm","hideGtMd","hideGtLg","NgStyleKeyValue","key","noQuotes","replace","trim","ngStyleUtils","getType","buildRawList","buildMapFromList","buildMapFromSet","StyleDirective","_sanitizer","_differs","_ngStyleInstance","ngStyle","NgStyle","_buildCacheInterceptor","_fallbackToStyle","bind","source","cacheRaw","merge","styles","_buildStyleMap","extendObject","inputMap","sanitizer","sanitize","SecurityContext","STYLE","_","ngStyleBase","_getAttributeValue","DomSanitizer","ngStyleXs","ngStyleSm","ngStyleMd","ngStyleLg","ngStyleXl","ngStyleLtSm","ngStyleLtMd","ngStyleLtLg","ngStyleLtXl","ngStyleGtXs","ngStyleGtSm","ngStyleGtMd","ngStyleGtLg","ALL_DIRECTIVES","NgModule","imports","CoreModule","declarations","slice","exports","providers","StylesheetMap","BROWSER_PROVIDER","STYLESHEET_MAP_PROVIDER","ExtendedModule","SERVER_PROVIDERS","provide","BEFORE_APP_SERIALIZED","useFactory","FLEX_SSR_SERIALIZER_FACTORY","deps","MatchMedia","DOCUMENT","BREAKPOINTS","multi","useValue","useClass","ServerMatchMedia","nextId","IS_DEBUG_MODE","FlexLayoutServerModule","VERSION","Version","FlexLayoutModule","console","warn","provideBreakPoints","breakpoints","options","ngModule","CUSTOM_BREAKPOINTS_PROVIDER_FACTORY","orientations","FlexModule","_updateWithDirection","css","buildLayoutCSS","_announcer","next","layoutXs","layoutSm","layoutMd","layoutLg","layoutXl","layoutGtXs","layoutGtSm","layoutGtMd","layoutGtLg","layoutLtSm","layoutLtMd","layoutLtLg","layoutLtXl","LayoutGapDirective","container","_zone","_directionality","_layout","_onLayoutChange","_directionWatcher","change","ngAfterContentInit","_watchContentChanges","_observer","disconnect","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","observe","childList","direction","toLowerCase","LAYOUT_VALUES","find","x","items","childrenNodes","filter","el","nodeType","sort","a","b","orderA","lookupStyle","orderB","isNaN","lastItem","pop","_applyStyleToElements","margins","margin-left","margin-right","margin-top","margin-bottom","NgZone","Directionality","gap","gapXs","gapSm","gapMd","gapLg","gapXl","gapGtXs","gapGtSm","gapGtMd","gapGtLg","gapLtSm","gapLtMd","gapLtLg","gapLtXl","FlexDirective","_container","_updateStyle","flexBasis","basis","parts","validateBasis","_validateValue","apply","grow","shrink","_getFlowDirection","parentElement","max","isFlowHorizontal","min","hasCalc","usingCalc","isPercent","hasUnits","isPx","isValue","isFixed","clearStyles","max-width","max-height","min-width","min-height","flex-grow","flex-shrink","flex-basis","flex","box-sizing","SkipSelf","flexXs","flexSm","flexMd","flexLg","flexXl","flexGtXs","flexGtSm","flexGtMd","flexGtLg","flexLtSm","flexLtMd","flexLtLg","flexLtXl","FlexOrderDirective","parseInt","order","orderXs","orderSm","orderMd","orderLg","orderXl","orderGtXs","orderGtSm","orderGtMd","orderGtLg","orderLtSm","orderLtMd","orderLtLg","orderLtXl","FlexOffsetDirective","watchParentFlow","offset","isRtl","horizontalLayoutKey","_a","offsetXs","offsetSm","offsetMd","offsetLg","offsetXl","offsetLtSm","offsetLtMd","offsetLtLg","offsetLtXl","offsetGtXs","offsetGtSm","offsetGtMd","offsetGtLg","FlexAlignDirective","align","alignXs","alignSm","alignMd","alignLg","alignXl","alignLtSm","alignLtMd","alignLtLg","alignLtXl","alignGtXs","alignGtSm","alignGtMd","alignGtLg","FLEX_FILL_CSS","margin","width","height","FlexFillDirective","LayoutAlignDirective","_allowStretching","split","main_axis","cross_axis","flex-direction","BidiModule","_elRef","_monitor","getAttribute","hasResponsiveKeys","defaultSrc","_updateSrcFor","activatedValue","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","Array","from","querySelectorAll","CLASS_NAME","forEach","classList","contains","parentNode","removeChild","className","normalizeQuery","mediaQuery","unique","list","seen","item","hasOwnProperty","dest","sources","_i","arguments","TypeError","sources_1","mergeAlias","mqAlias","alias","suffix","OBSERVABLE_MEDIA_PROVIDER_FACTORY","parentService","matchMedia","MediaService","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","map","join","validateSuffixes","bp","overlapping","mergeByAlias","defaults","custom","merged","findByAlias","reduce","result","target","push","buildMergedBreakPoints","_custom","orientation","ORIENTATION_BREAKPOINTS","concat","DEFAULT_BREAKPOINTS","DEFAULT_BREAKPOINTS_PROVIDER_FACTORY","MATCH_MEDIA_PROVIDER_FACTORY","parentMedia","ngZone","STYLESHEET_MAP_PROVIDER_FACTORY","parentSheet","validateValue","buildCSS","wrap","inline","INLINE","validateWrapValue","flex-wrap","MEDIA_MONITOR_PROVIDER_FACTORY","parentMonitor","applyCssPrefixes","j","_validateCalcValue","substring","matches","substr","calc","what","Set","delimiter","sanitizeValue","stringToKeyValue","entry","keyValuesToMap","generateStaticFlexLayoutStyles","serverSheet","classMap","Map","defaultStyles","stylesheet","styleText","generateCss","reverse","i","activateBreakpoint","size","deactivateBreakpoint","styleTag","createElement","add","textContent","head","appendChild","keyVals","getClassName","v","k","format","formatSegment","asPrefix","get","set","setPrototypeOf","__proto__","p","APP_BOOTSTRAP_LISTENER","InjectionToken","BreakPointRegistry","_registry","overlaps","nonOverlaps","findByQuery","query","Injectable","MediaChange","clone","_source","BehaviorSubject","_observable$","asObservable","isActive","mql","registerQuery","pipe","_prepareQueryCSS","onMQLEvent","e","run","_buildMQL","addListener","media","removeListener","mediaQueries","ALL_STYLES","styleEl_1","cssText","createTextNode","mq","error","_breakpoints","_matchMedia","_registerBreakpoints","overlappings","found","hasAlias","queries","sortedItems","ObservableMedia","mediaWatcher","filterOverlaps","_registerBreakPoints","observable$","_buildObservable","_toMediaQuery","complete","self","media$","activationsOnly","addAliasInformation","_findByQuery","excludeOverlaps","_findByAlias","OBSERVABLE_MEDIA_PROVIDER","RESPONSIVE_ALIASES","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","DEFAULT_BREAKPOINTS_PROVIDER","MATCH_MEDIA_PROVIDER","MediaQueriesModule","addStyleToElement","element","clear","getStyleForElement","styleName","KeyOptions","defaultValue","inputKeys","ResponsiveActivation","_options","_mediaMonitor","_onMediaChanges","_subscribers","_registryMap","_buildRegistryMap","_configureChangeObservers","_activatedInputKey","activatedInputKey","hasKeyValue","_lookupKeyValue","destroy","link","subscriptions","_keyInUse","buildChanges","property","mediaMonitor","_onMonitorEvents","_calculateActivatedValue","current","currentKey","newKey","_validateInputKey","inputKey","isMissingKey","activeOverlaps","_elementRef","_hasInitialized","previousVal","SimpleChange","Error","fallbackVal","attribute","lookupAttributeValue","addIfMissing","hasInlineValue","getFlowDirection","elements","applyStyleToElements","prop","onMediaQueryChange","keyOptions","obj","children","buffer","hasResponsiveAPI","_baseKey","mqa","_cacheInputRaw","isArray","_cacheInputArray","_cacheInputObject","_cacheInputString","classes","MockMatchMedia","autoRegisterQueries","useOverlaps","_actives","clearAll","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","deactivate","has","MockMediaQueryList","_mediaQuery","_isActive","_listeners","callback","listener","MockMatchMediaProvider","ServerMediaQueryList","lookupBreakpoint","MEDIA_MONITOR_PROVIDER","_serverStylesheet","_applyMultiValueStyleToElement","FALLBACK_STYLE","lookupInlineStyle","getPropertyValue","inlineOnly","getComputedStyle","values","values_1","ReplaySubject"],"mappings":";;;;;;;80BmBoBA,SAAgB0b,GAAUC,EAAGlJ,GAEzB,QAASmJ,KAAO3b,KAAK4b,YAAcF,EADnCG,GAAcH,EAAGlJ,GAEjBkJ,EAAE/a,UAAkB,OAAN6R,EAAazR,OAAO+a,OAAOtJ,IAAMmJ,EAAGhb,UAAY6R,EAAE7R,UAAW,GAAIgb,ICRnF,QAAAI,GAA6BC,EAAqBtV,GAChD,MAAO,YACL,GAAIuV,EAAAA,kBAAkBvV,GAAa,CACjC,GAMMwV,GAAa,sBANFC,OAAMC,KAAKJ,EAAUK,iBAAiB,WAAWC,GAAxE,MAOeC,QAAQ,SAAAnK,GACfA,EAAGoK,UAAUC,SAAYH,GAAjC,QAAqDlK,EAAGsK,WAC9CtK,EAAGsK,WAAWC,YAAYvK,GAAMA,EAAGwK,UAAU5S,QAAQkS,EAAY,QCuI3E,QAAAW,GAAwBC,GACtB,WAA8B,KAAfA,KACY,gBAAfA,IAA4BA,GAAcC,EAAM,GAM9D,QAAAA,GAAgBC,GACd,GAAIC,KACJ,OAAOD,GAAK7K,OAAO,SAAA+K,GACjB,OAAOD,EAAKE,eAAeD,KAAiBD,EAAKC,IAAQ,KC/J7D,QAAA7R,GAA6B+R,GAA7B,IAAwC,GAAxCC,MAAAC,EAAA,EAAwCA,EAAxCC,UAAAnc,OAAwCkc,IAAAD,EAAxCC,EAAA,GAAAC,UAAAD,EACE,IAAY,MAARF,EACF,KAAMI,WAAU,6CAGlB,KAAmB,GAArB/E,GAAA,EAAqBgF,EAArBJ,EAAqB5E,EAArBgF,EAAArc,OAAqBqX,IAArB,CAAO,GAAIzN,GAAXyS,EAAAhF,EACI,IAAc,MAAVzN,EACF,IAAK,GAAIlB,KAAOkB,GACVA,EAAOmS,eAAerT,KACxBsT,EAAKtT,GAAOkB,EAAOlB,IAM3B,MAAOsT,GCdT,QAAAM,GAA2BN,EAAmBpS,GAC5C,MAAOK,GAAa+R,EAAMpS,GACpB2S,QAAS3S,EAAO4S,MAChBC,OAAQ7S,EAAO6S,YCFvB,QAAAC,GAAkDC,EACAC,EACAlP,GAChD,MAAOiP,IAAiB,GAAIE,IAAanP,EAAakP,GCPxD,QAAAE,GAAwBC,GACtB,GAAIC,GAAQD,EAAK/c,OAAS,EAAI+c,EAAKE,OAAO,GAAK,GAC3CC,EAAaH,EAAK/c,OAAS,EAAK+c,EAAKlR,MAAM,GAAK,EACpD,OAAOmR,GAAMG,cAAgBD,EAO/B,QAAAE,GAAmBC,GACjB,MAAOA,GACFzU,QAAQ0U,GAAkB,KAC1B7D,MAAM,KACN8D,IAAIT,GACJU,KAAK,IAOZ,QAAAC,GAAiC7B,GAO/B,MANAA,GAAKT,QAAQ,SAACuC,GACPA,EAAGjB,QAAwB,KAAdiB,EAAGjB,SACnBiB,EAAGjB,OAASW,EAAUM,EAAGlB,OACzBkB,EAAGC,YAAcD,EAAGC,cAAe,KAGhC/B,EAQT,QAAAgC,GAA6BC,EAAwBC,OAArD,KAAAA,IAAqDA,KACnD,IAAMC,GAASF,EAASN,IAAI,SAACG,GAAO,MAAAzT,MAAiByT,KAC/CM,EAAc,SAACxB,GAAU,MAAAuB,GAAOE,OAAO,SAACC,EAAQR,GACpD,MAAOQ,KAAaR,EAAGlB,QAAUA,EAASkB,EAAK,OAC9C,MAYH,OATAI,GAAO3C,QAAQ,SAACuC,GACd,GAAIS,GAASH,EAAYN,EAAGlB,MACxB2B,GACFlU,EAAakU,EAAQT,GAErBK,EAAOK,KAAKV,KAITD,EAAiBM,GC3B1B,QAAAM,GAAuCC,EACA3Q,GAMrC,MALAA,GAAU1D,MACJ4T,UAAU,EACVU,aAAa,GAChB5Q,OAEI,WAEL,GAAIkQ,GAAYlQ,GAAWA,EAAQG,aACjC0Q,GAAwBC,OAAOC,IAAuBA,EAExD,OAAQ/Q,IAAWA,EAAQkQ,SACzBD,EAAaC,EAAUS,OAAiBV,EAAaU,QAO3D,QAAAK,KACE,MAAOlB,GAAiBiB,IAkB1B,QAAA7Q,GAAoDyQ,EACA3Q,GAClD,OACEtB,QAAO,GACPE,WAAY8R,EAAuBC,EAAS3Q,IClEhD,QAAAiR,GAA6CC,EACAC,EACAxZ,EACAsV,GAC3C,MAAOiE,IAAe,GAAInS,IAAWoS,EAAQxZ,EAAYsV,GCL3D,QAAAmE,GAAgDC,GAC9C,MAAOA,IAAe,GAAIhT,ICF5B,QAAAkC,GAA+BzO,GAC7B,GAAF4X,GAAA4H,EAAAxf,EACE,OAAOyf,GADT7H,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAQA,QAAA4H,GAA8Bxf,GAC5BA,EAAQA,EAAQA,EAAMgR,cAAgB,EACtC,IAAF4G,GAAA5X,EAAAga,MAAA,KAAOjJ,EAAP6G,EAAA,GAAkB8H,EAAlB9H,EAAA,GAAwB+H,EAAxB/H,EAAA,EAYE,OATK3G,IAAcC,KAAK,SAAAC,GAAK,MAAAA,KAAMJ,MACjCA,EAAYE,GAAc,IAGxByO,IAASE,KACXF,EAAQC,IAAWC,GAAUD,EAAS,GACtCA,EAASC,KAGH7O,EAAW8O,EAAkBH,KAASC,GAehD,QAAAE,GAAkC7f,GAChC,GAAMA,EACJ,OAAQA,EAAMgR,eACZ,IAAK,UACL,IAAK,eACL,IAAK,eACHhR,EAAQ,cACR,MAEF,KAAK,KACL,IAAK,OACL,IAAK,SACHA,EAAQ,QACR,MAGF,SACEA,EAAQ,OAId,MAAOA,GAYT,QAAAyf,GAAkB1O,EAAW2O,EAAaC,GACxC,WADF,KAAAD,IAA6BA,EAA7B,UAAA,KAAAC,IAA0CA,GAA1C,IAEI1Y,QAAW0Y,EAAS,cAAgB,OACpCnK,aAAc,aACd2E,iBAAkBpJ,EAClB+O,YAAeJ,GAAc,MCzEjC,QAAAK,GAA+CC,EACA/R,EACAkP,GAC7C,MAAO6C,IAAiB,GAAInf,IAAaoN,EAAakP,GCCxD,QAAA8C,GAAiCvB,GAC/B,IAAK,GAAIzV,KAAOyV,GAAQ,CACtB,GAAI1e,GAAQ0e,EAAOzV,IAAQ,EAE3B,QAAQA,GACN,IAAK,UAEDyV,EAAgB,QADJ,SAAV1e,GAEA,eACA,QAEiB,gBAAVA,GAEP,sBACA,eAGkBA,CAEtB,MAEF,KAAK,cACL,IAAK,aACL,IAAK,gBACL,IAAK,OACL,IAAK,aACL,IAAK,YACL,IAAK,YACL,IAAK,cACL,IAAK,YACL,IAAK,kBACH0e,EAAO,WAAazV,GAAOjJ,CAC3B,MAEF,KAAK,iBACHA,EAAQA,GAAS,MACjB0e,EAAO,0BAA4B1e,EACnC0e,EAAO,kBAAoB1e,CAC3B,MAEF,KAAK,QACH0e,EAAc,MAAIA,EAAO,WAAazV,GAAO8I,MAAM/R,GAAS,IAAMA,GAIxE,MAAO0e,GFpDT,QAAAjQ,GAA+BzO,GAC7B,GAAF4X,GAAA4H,EAAAxf,EACE,OAAOyf,GADT7H,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAQA,QAAA4H,GAA8Bxf,GAC5BA,EAAQA,EAAQA,EAAMgR,cAAgB,EACtC,IAAF4G,GAAA5X,EAAAga,MAAA,KAAOjJ,EAAP6G,EAAA,GAAkB8H,EAAlB9H,EAAA,GAAwB+H,EAAxB/H,EAAA,EAYE,OATK3G,IAAcC,KAAK,SAAAC,GAAK,MAAAA,KAAMJ,MACjCA,EAAYE,GAAc,IAGxByO,IAASE,KACXF,EAAQC,IAAWC,GAAUD,EAAS,GACtCA,EAASC,KAGH7O,EAAW8O,EAAkBH,KAASC,GAOhD,QAAArL,GAAiCtU,GAE/B,MADFwf,GAAAxf,GAAA,GACcmH,QAAQ,QAAU,EAMhC,QAAA0Y,GAAkC7f,GAChC,GAAMA,EACJ,OAAQA,EAAMgR,eACZ,IAAK,UACL,IAAK,eACL,IAAK,eACHhR,EAAQ,cACR,MAEF,KAAK,KACL,IAAK,OACL,IAAK,SACHA,EAAQ,QACR,MAGF,SACEA,EAAQ,OAId,MAAOA,GAYT,QAAAyf,GAAkB1O,EAAW2O,EAAaC,GACxC,WADF,KAAAD,IAA6BA,EAA7B,UAAA,KAAAC,IAA0CA,GAA1C,IAEI1Y,QAAW0Y,EAAS,cAAgB,OACpCnK,aAAc,aACd2E,iBAAkBpJ,EAClB+O,YAAeJ,GAAc,MP3EjC,QAAAlV,GAA6B+R,GAA7B,IAAwC,GAAxCC,MAAAC,EAAA,EAAwCA,EAAxCC,UAAAnc,OAAwCkc,IAAAD,EAAxCC,EAAA,GAAAC,UAAAD,EACE,IAAY,MAARF,EACF,KAAMI,WAAU,6CAGlB,KAAmB,GAArB/E,GAAA,EAAqBgF,EAArBJ,EAAqB5E,EAArBgF,EAAArc,OAAqBqX,IAArB,CAAO,GAAIzN,GAAXyS,EAAAhF,EACI,IAAc,MAAVzN,EACF,IAAK,GAAIlB,KAAOkB,GACVA,EAAOmS,eAAerT,KACxBsT,EAAKtT,GAAOkB,EAAOlB,IAM3B,MAAOsT,GUhBT,QAAAzI,GAA8BF,EAAeK,EAAYC,OAAzD,KAAAD,IAA6CA,EAA7C,SAAA,KAAAC,IAAyDA,EAAzD,IACE,IAAIL,IAASI,EAAMC,EAAQN,GAEvBsM,EAAItM,EAAMzM,QAAQ,OACtB,IAAI+Y,EAAI,EAAG,CACTrM,EAAM,GAAKsM,EAAmBvM,EAAMwM,UAAUF,GAAG9W,OACjD,IAAIiX,GAAUzM,EAAM0M,OAAO,EAAGJ,GAAG9W,OAAO4Q,MAAM,IACxB,IAAlBqG,EAAQ9f,SACVsT,EAAM,GAAKwM,EAAQ,GACnBxM,EAAM,GAAKwM,EAAQ,QAEhB,IAAS,GAALH,EACTrM,EAAM,GAAKsM,EAAmBvM,EAAMxK,YAC/B,CACL,GAAIiX,GAAUzM,EAAMoG,MAAM,IAC1BnG,GAA4B,IAAnBwM,EAAQ9f,OAAgB8f,GAC3BpM,EAAMC,EAAQN,GAItB,MAAOC,GAcT,QAAAsM,GAA4BI,GAC1B,MAAOA,GAAKpX,QAAQ,QAAS,IAAIA,QAAQ,cAAe,Q9BR1D,QAAAhD,GAA2B+B,GACzB,MAAiB,KAATA,IACU,UAATA,GAA+B,IAATA,IAAuBA,GoB5BxD,QAAAsC,GAA6B+R,GAA7B,IAAwC,GAAxCC,MAAAC,EAAA,EAAwCA,EAAxCC,UAAAnc,OAAwCkc,IAAAD,EAAxCC,EAAA,GAAAC,UAAAD,EACE,IAAY,MAARF,EACF,KAAMI,WAAU,6CAGlB,KAAmB,GAArB/E,GAAA,EAAqBgF,EAArBJ,EAAqB5E,EAArBgF,EAAArc,OAAqBqX,IAArB,CAAO,GAAIzN,GAAXyS,EAAAhF,EACI,IAAc,MAAVzN,EACF,IAAK,GAAIlB,KAAOkB,GACVA,EAAOmS,eAAerT,KACxBsT,EAAKtT,GAAOkB,EAAOlB,IAM3B,MAAOsT,GnBWT,QAAAjT,GAAiBoV,GACf,GAAI8B,SAAc9B,EAClB,OAAa,WAAT8B,EACM9B,EAAO3D,cAAgBO,MAAS,QACnCoD,EAAO3D,cAAgB0F,IAAQ,MAAQ,SAEvCD,EAOT,QAAAjX,GAAsBY,EAAauW,GACjC,WADF,KAAAA,IAAmCA,EAAnC,KACS9gB,OAAOuK,GACTf,OACA4Q,MAAM0G,GACN5C,IAAI,SAAC7a,GAAgB,MAAAA,GAAImG,SACzBkI,OAAO,SAAArO,GAAO,MAAQ,KAARA,IAMrB,QAAAuG,GAA0Bc,EAAwBK,GAChD,GAAIgW,GAAgB,SAAClQ,GAInB,MAHI9F,KACF8F,EAAGzQ,MAAQ2K,EAAS8F,EAAGzQ,QAElByQ,EAGT,OAAOnG,GACFwT,IAAI8C,GACJtP,OAAO,SAAAuP,GAAS,QAAEA,IAClB/C,IAAI6C,GACJnC,OAAOsC,MAMd,QAAArX,GAAyBU,EAAaQ,GACpC,GAAIwR,GAAO,GAAIb,MAQf,OAPuB,OAAnBhS,EAAQa,GACVA,EAAOuR,QAAQ,SAAAmF,GAAS,MAAA1E,GAAKwC,KAAKkC,KAElC3gB,OAAOG,KAAK8J,GAAQuR,QAAQ,SAAAzS,GAC1BkT,EAAKwC,KAAQ1V,EAAnB,IAA0BkB,EAAOlB,MAGxBO,EAAiB2S,EAAMxR,GAOhC,QAAAiW,GAA0BnQ,GACxB,GAAFmH,GAAAnH,EAAAuJ,MAAA,KAAO/Q,EAAP2O,EAAA,GAAY3U,EAAZ2U,EAAA,EACE,OAAO3U,GAAM,GAAI+F,IAAgBC,EAAKhG,GAAO,KAM/C,QAAA6d,GAAwBhD,EAAiB+C,GAIvC,MAHMA,GAAM5X,MACV6U,EAAI+C,EAAM5X,KAAO4X,EAAM7gB,OAElB8d,EGjFT,QAAAiD,GAA+CC,EACA7D,EACAlP,GAI7C,GAAMgT,GAAW,GAAIC,KAKfC,EAAgB,GAAID,KAAIF,EAAYI,YACtCC,EAAYC,EAAYH,EAAe,MAAOF,EAalD,OAXAhT,GAAYsT,UACZtT,EAAYyN,QAAQ,SAACuC,EAAIuD,GACvBR,EAAYjM,cACZ,EAAiC0M,mBAAmBxD,EACpD,IAAMmD,GAAa,GAAIF,KAAIF,EAAYI,WACnCA,GAAWM,KAAO,IACpBL,GAAaC,EAAYF,EAAYnD,EAAGhC,WAAYgF,IAEtD,EAAiCU,qBAAqB1T,EAAYuT,MAG7DH,EAOT,QAAAtU,GAA4CiU,EACA7D,EACAhC,EACAlN,GAC1C,MAAO,YAGL,GAAM2T,GAAWzG,EAAU0G,cAAc,SACnCR,EAAYN,EAA+BC,EAAa7D,EAAYlP,EAC1E2T,GAASjG,UAAUmG,IAAOrG,GAA9B,OACImG,EAASG,YAAcV,EACvBlG,EAAU6G,KAAKC,YAAYL,IA6C/B,QAAAN,GAAqBF,EAAwBnF,EAAoBgF,GAC/D,GAAIzS,GAAM,EAaV,OAZA4S,GAAW1F,QAAQ,SAACpR,EAAQiH,GAC1B,GAAI2Q,GAAU,GAAInG,EAAYoG,EAAa5Q,EAAI0P,EAE/C3W,GAAOoR,QAAQ,SAAC0G,EAAGC,GACjBH,GAAWE,EAAIE,EAAUD,EAA/B,IAAoCD,EAApC,KAA4C,KAIxC5T,GAAO8T,EAAO,IAAIvG,EAAtB,KAAqCmG,EAAS,OAIrCI,EAAO,UAAUrG,EAA1B,KAA0CzN,EAAK,KAO/C,QAAA8T,KAAA,IAAgB,GAAhBnG,MAAAM,EAAA,EAAgBA,EAAhBC,UAAAnc,OAAgBkc,IAAAN,EAAhBM,GAAAC,UAAAD,EACE,IAAIgC,GAAS,EAIb,OAHAtC,GAAKT,QAAQ,SAAClN,EAAKgT,GACjB/C,GAAUhR,GAAgB8U,EAAc/T,EAAU,GAALgT,GAAUhT,IAElDiQ,EAGT,QAAA8D,GAAuB/T,EAAagU,GAClC,WADF,KAAAA,IAAoCA,GAApC,GACSA,EAAW,KAAOhU,EAAMA,EAAM,KAQvC,QAAA2T,GAAuBf,EAAYH,GACjC,GAAIlF,GAAYkF,EAASwB,IAAIrB,EAO5B,OANKrF,KACHA,EAAY,GAAGN,GAAajO,KAC5ByT,EAASyB,IAAItB,EAAYrF,IAE3BqF,EAAWzF,UAAUmG,IAAI/F,GAElBA,EanJV,GAAIf,IAAgB9a,OAAOyiB,iBACpBC,uBAA2BtH,QAAS,SAAUT,EAAGlJ,GAAKkJ,EAAE+H,UAAYjR,IACvE,SAAUkJ,EAAGlJ,GAAK,IAAK,GAAIkR,KAAKlR,GAAOA,EAAE2K,eAAeuG,KAAIhI,EAAEgI,GAAKlR,EAAEkR,KCkB5DrW,IACXI,QAAyCkW,EAAsB,uBAC/DhW,WAAYoO,EACZlO,MAAOE,EAAAA,SAAUjM,EAAAA,aACjBmM,OAAO,GAGIqO,GAAa,ea5BbtO,GACT,GAAI4V,GAAAA,eAA6B,0DCKnC,QAAFC,GAA2CC,GAAA9jB,KAA3C8jB,UAA2CA,EArB3C,MA2BE/iB,QAAFC,eAAM6iB,EAANljB,UAAA,aAAE,WACE,MAAWX,MAAK8jB,UAApB7W,yCAUElM,OAAFC,eAAM6iB,EAANljB,UAAA,mBAAE,WACE,GAAIojB,GAAW/jB,KAAK8jB,UAAU3R,OAAO,SAAAb,GAAM,OAAmB,IAAnBA,EAAGyN,cAC1CiF,EAAchkB,KAAK8jB,UAAU3R,OAAO,SAAAb,GAAM,OAAmB,IAAnBA,EAAGyN,aAEjD,OAAWgF,GAAflE,OAA4BmE,oCAM1BH,EAAFljB,UAAAye,YAAE,SAAYxB,GACV,MAAO5d,MAAK8jB,UAAU/R,KAAK,SAAA+M,GAAM,MAAAA,GAAGlB,OAASA,KAAU,MAGzDiG,EAAFljB,UAAAsjB,YAAE,SAAYC,GACV,MAAOlkB,MAAK8jB,UAAU/R,KAAK,SAAA+M,GAAM,MAAAA,GAAGhC,YAAcoH,KAAU,MAO9DnjB,OAAFC,eAAM6iB,EAANljB,UAAA,oBAAE,WACE,MAAOX,MAAK8jB,UAAU3R,OAAO,SAAAb,GAAM,MAAkB,IAAlBA,EAAGyN,+CAMxChe,OAAFC,eAAM6iB,EAANljB,UAAA,eAAE,WACE,MAAOX,MAAK8jB,UAAUnF,IAAI,SAAArN,GAAM,MAAAA,GAAGsM,yCAQrC7c,OAAFC,eAAM6iB,EAANljB,UAAA,gBAAE,WACE,MAAOX,MAAK8jB,UAAUnF,IAAI,SAAArN,GAAM,MAAEA,GAAGuM,OAASvM,EAAGuM,OAAS,qDA3D9Dxc,KAAC8iB,EAAAA,iDAGD9iB,KAAA8a,MAAAva,aAAAP,KAAeQ,EAAAA,OAAfN,MAAsByM,SArBtB6V,KCYAO,GAAA,WAIE,QAAFA,GAAqBlD,EACApE,EACAa,EACAE,OAHrB,KAAAqD,IAAAA,GAAA,+DAAqBlhB,KAArBkhB,QAAqBA,EACAlhB,KAArB8c,WAAqBA,EACA9c,KAArB2d,QAAqBA,EACA3d,KAArB6d,OAAqBA,EAnBrB,MAsBEuG,GAAFzjB,UAAA0jB,MAAE,WACE,MAAO,IAAID,GAAYpkB,KAAKkhB,QAASlhB,KAAK8c,WAAY9c,KAAK2d,QAAS3d,KAAK6d,SAvB7EuG,mBd4BE,QAAFtW,GAAwB0C,EACqBvQ,EACH+b,GAFlBhc,KAAxBwQ,MAAwBA,EACqBxQ,KAA7CC,YAA6CA,EACHD,KAA1Cgc,UAA0CA,EACtChc,KAAK8jB,UAAY,GAAI/B,KACrB/hB,KAAKskB,QAAU,GAAIC,GAAAA,gBAA6B,GAAIH,KAAY,IAChEpkB,KAAKwkB,aAAexkB,KAAKskB,QAAQG,eAjCrC,MAuCE3W,GAAFnN,UAAA+jB,SAAE,SAAS5H,GACP,GAAI6H,GAAM3kB,KAAK8jB,UAAUR,IAAIxG,EAC7B,SAAS6H,GAAMA,EAAIzD,SAWrBpT,EAAFnN,UAAA+Q,QAAE,SAAQoL,GAKN,MAJIA,IACF9c,KAAK4kB,cAAc9H,GAGd9c,KAAKwkB,aAAaK,KACvB1S,EAAAA,OAAO,SAACtB,GACN,OAAOiM,GAAcjM,EAAOiM,aAAeA,MASjDhP,EAAFnN,UAAAikB,cAAE,SAAc9H,GAAd,GAAFrZ,GAAAzD,KACQgd,EAAOH,EAAeC,EAEtBE,GAAK5b,OAAS,IAChBpB,KAAK8kB,iBAAiB9H,EAAMhd,KAAKgc,WAEjCgB,EAAKT,QAAQ,SAAA2H,GACX,GAAIS,GAAMlhB,EAAKqgB,UAAUR,IAAIY,GACzBa,EAAa,SAACC,GAChBvhB,EAAK+M,MAAMyU,IAAI,WACb,GAAIpU,GAAS,GAAIuT,IAAYY,EAAE9D,QAASgD,EACxCzgB,GAAK6gB,QAAQ9U,KAAKqB,KAIjB8T,KACHA,EAAMlhB,EAAKyhB,UAAUhB,GACrBS,EAAIQ,YAAYJ,GAChBthB,EAAKqgB,UAAUP,IAAIW,EAAOS,IAGxBA,EAAIzD,SACN6D,EAAWJ,OAUT7W,EAAZnN,UAAAukB,UAAE,SAAoBhB,GAIlB,MAHgBjI,GAAAA,kBAAkBjc,KAAKC,gBACnC,OAAc+d,WAAW,OAAOmH,YAEjB,OAAcnH,WAAWkG,IAC1ChD,QAAmB,QAAVgD,GAA6B,KAAVA,EAC5BkB,MAAOlB,EACPiB,YAAa,aAEbE,eAAgB,eAYVvX,EAAZnN,UAAAmkB,iBAAE,SAA2BQ,EAAwBtJ,GACjD,GAAIgB,GAAOsI,EAAanT,OAAO,SAAAb,GAAM,OAACiU,GAAWjU,IACjD,IAAI0L,EAAK5b,OAAS,EAAG,CACnB,GAAI8iB,GAAQlH,EAAK4B,KAAK,KAEtB,KACE,GAAI4G,GAAUxJ,EAAU0G,cAAc,QAGtC,IADA8C,EAAQhlB,aAAa,OAAQ,aACxBglB,EAAoB,WAAG,CAC1B,GAAIC,GAAU,2IAKfvB,EALT,wBAOUsB,GAAQ1C,YAAY9G,EAAU0J,eAAeD,IAG/CzJ,EAAU6G,KAAKC,YAAY0C,GAG3BxI,EAAKT,QAAQ,SAAAoJ,GAAM,MAAAJ,IAAWI,GAAMH,IAEpC,MAAOR,GACPrW,QAAQiX,MAAMZ,qBA7HtB3jB,KAAC8iB,EAAAA,iDAfD9iB,KAA4BgS,EAAAA,SAsB5BhS,KAAAN,OAAAa,aAAAP,KAAeQ,EAAAA,OAAfN,MAAsBO,EAAAA,iBACtBT,SAAAU,GAAAH,aAAAP,KAAeQ,EAAAA,OAAfN,MAAsBwM,EAAAA,eA9BtBD,KA6JMyX,oBe3HJ,QAAF7jB,GAAsBmkB,EAA0CC,GAA1C9lB,KAAtB6lB,aAAsBA,EAA0C7lB,KAAhE8lB,YAAgEA,EAC5D9lB,KAAK+lB,uBAnCT,MAyCEhlB,QAAFC,eAAMU,EAANf,UAAA,mBAAE,WACE,MAAWX,MAAK6lB,aAAa5T,MAAjChF,yCAGElM,OAAFC,eAAMU,EAANf,UAAA,sBAAE,WAAA,GAAF8C,GAAAzD,IAEI,OAD0BA,MAAK6lB,aAAaG,aAAa5D,UAC5CjQ,OAAO,SAAC2M,GACnB,MAAOrb,GAAKqiB,YAAYpB,SAAS5F,EAAGhC,+CAIxC/b,OAAFC,eAAMU,EAANf,UAAA,cAAE,WAAA,GAAF8C,GAAAzD,KACQimB,EAA2B,IAAcjmB,MAAK8O,YAAYsT,UACxD7F,QAAQ,SAAAuC,GACK,KAAbA,EAAGlB,QACAqI,GAASxiB,EAAKqiB,YAAYpB,SAAS5F,EAAGhC,cACzCmJ,EAAQnH,IAKd,IAAIV,GAAQpe,KAAK8O,YAAY,EAC7B,OAAOmX,KAAUjmB,KAAK8lB,YAAYpB,SAAStG,EAAMtB,YAAcsB,EAAQ,uCAMzE1c,EAAFf,UAAA+jB,SAAE,SAAS9G,GACP,GAAIkB,GAAK9e,KAAK6lB,aAAazG,YAAYxB,IAAU5d,KAAK6lB,aAAa5B,YAAYrG,EAC/E,OAAO5d,MAAK8lB,YAAYpB,SAAS5F,EAAKA,EAAGhC,WAAac,IAQxDlc,EAAFf,UAAA+Q,QAAE,SAAQkM,GACN,GAAIkB,GAAK9e,KAAK6lB,aAAazG,YAAYxB,GAAS,KAC9C5d,KAAK6lB,aAAa5B,YAAYrG,GAAS,IACrCsI,EAAW,SAACrV,GAAwB,OAACiO,GAAwB,KAAnBjO,EAAO8M,QAIrD,OADa3d,MAAK8lB,YAAYpU,QAAQoN,EAAKA,EAAGhC,WAAac,GAC7CiH,KACZlG,EAAAA,IAAI,SAAA9N,GAAU,MAAA6M,GAAW7M,EAAQiO,KACjC3M,EAAAA,OAAO+T,KAQHxkB,EAAVf,UAAAolB,gCACI,GAAII,GAAUnmB,KAAK6lB,aAAaO,YAAYzH,IAAI,SAAAG,GAAM,MAAAA,GAAGhC,YACzD9c,MAAK8lB,YAAYlB,cAAcuB,mBAlEnC9kB,KAAC8iB,EAAAA,iDAnBD9iB,KAAQwiB,KACRxiB,KAAQyM,MAdRpM,KCsBA2kB,GAAA,yBAtBA,MAAAA,oBAkFE,QAAFpI,GAAsBnP,EACAwX,GADAtmB,KAAtB8O,YAAsBA,EACA9O,KAAtBsmB,aAAsBA,EAHtBtmB,KAAAumB,gBAAmB,EAIfvmB,KAAKwmB,uBACLxmB,KAAKymB,YAAczmB,KAAK0mB,mBArF5B,MA2FEzI,GAAFtd,UAAA+jB,SAAE,SAAS9G,GACP,GAAIsG,GAAQlkB,KAAK2mB,cAAc/I,EAC/B,OAAO5d,MAAKsmB,aAAa5B,SAASR,IAMpCjG,EAAFtd,UAAAmG,UAAE,SAAU0I,EACAoW,EACAgB,GACR,MAAO5mB,MAAKymB,YAAY3f,UAAU0I,EAAMoW,EAAOgB,IAOjD3I,EAAFtd,UAAA8jB,aAAE,WACE,MAAOzkB,MAAKymB,aAYNxI,EAAVtd,UAAA6lB,gCACI,GAAIL,GAAUnmB,KAAK8O,YAAYsX,YAAYzH,IAAI,SAAAG,GAAM,MAAAA,GAAGhC,YACxD9c,MAAKsmB,aAAa1B,cAAcuB,IAU1BlI,EAAVtd,UAAA+lB,uCACUG,EAAO7mB,KACP8mB,EAAS9mB,KAAKsmB,aAAa5U,UAC3BqV,EAAkB,SAAClW,GACvB,OAA0B,IAAnBA,EAAOqQ,SAEV8F,EAAsB,SAACnW,GAC3B,MAAO6M,GAAW7M,EAAQpN,EAAKwjB,aAAapW,EAAOiM,cAE/CoK,EAAkB,SAACrW,GACvB,GAAIiO,GAAKrb,EAAKqL,YAAYmV,YAAYpT,EAAOiM,WAC7C,QAAQgC,KAAc+H,EAAKN,gBAAkBzH,EAAGC,aAQlD,OAAO+H,GAAOjC,KACZ1S,EAAAA,OAAO4U,GACP5U,EAAAA,OAAO+U,GACPvI,EAAAA,IAAIqI,KAOA/I,EAAVtd,UAAAwmB,aAAA,SAAuBvJ,GACnB,MAAO5d,MAAK8O,YAAYsQ,YAAYxB,IAM9BK,EAAVtd,UAAAsmB,aAAA,SAAuB/C,GACnB,MAAOlkB,MAAK8O,YAAYmV,YAAYC,IAM9BjG,EAAVtd,UAAAgmB,cAAA,SAAwBzC,GACpB,GAAIpF,GAAwB9e,KAAKmnB,aAAajD,IAAUlkB,KAAKinB,aAAa/C,EAC1E,OAAOpF,GAAKA,EAAGhC,WAAaoH,kBAxGhC7iB,KAAC8iB,EAAAA,iDA9DD9iB,KAAQwiB,KAERxiB,KAAQyM,MAfRmQ,KbwBamJ,IACX3Z,QAAS4Y,GACTxY,OACI,GAAI7L,GAAAA,SAAY,GAAIsU,GAAAA,SAAY+P,IAClCvY,GACA+V,IAEFlW,WAAYmQ,GctBDuJ,IACX,KAAM,QAAS,KAAM,QAAS,KAAM,QAAS,KAAM,QAAS,MAGjDvH,KAETlC,MAAO,KACPd,WAAY,4CAGZc,MAAO,QACPmB,aAAa,EACbjC,WAAY,uBAGZc,MAAO,QACPmB,aAAa,EACbjC,WAAY,uBAGZc,MAAO,KACPd,WAAY,8CAGZc,MAAO,QACPmB,aAAa,EACbjC,WAAY,uBAGZc,MAAO,QACPmB,aAAa,EACbjC,WAAY,uBAGZc,MAAO,KACPd,WAAY,+CAGZc,MAAO,QACPmB,aAAa,EACbjC,WAAY,wBAGZc,MAAO,QACPmB,aAAa,EACbjC,WAAY,wBAGZc,MAAO,KACPd,WAAY,gDAGZc,MAAO,QACPmB,aAAa,EACbjC,WAAY,wBAGZc,MAAO,QACPmB,aAAa,EACbjC,WAAY,wBAGZc,MAAO,KACPd,WAAY,gDC1DVwK,GAAoB,2EACpBC,GAAoB,yEAEpBC,GAAoB,kDACpBC,GAAoB,oDAEbC,IACXC,QAAyBC,oGACzBC,OAAyBN,GAA3B,MAAgDD,GAC9CQ,IAAyBN,GAA3B,KAA4CC,GAA5C,IAEEG,iBAdwB,kDAexBL,gBAAyBA,GAA3B,IACEC,aAAsB,GAAGA,GAEzBO,kBAAyBA,oDACzBT,iBAAsB,GAAGA,GACzBG,cAAsB,GAAGA,IAMd7H,KACVhC,MAAS,UAAsBd,WAAc4K,GAAYC,UACzD/J,MAAS,oBAAsBd,WAAc4K,GAAYK,oBACzDnK,MAAS,mBAAsBd,WAAc4K,GAAYE,mBAEzDhK,MAAS,SAAsBd,WAAc4K,GAAYG,SACzDjK,MAAS,mBAAsBd,WAAc4K,GAAYG,SACzDjK,MAAS,kBAAsBd,WAAc4K,GAAYH,kBAEzD3J,MAAS,MAAsBd,WAAc4K,GAAYI,IAAK/I,aAAc,IAC5EnB,MAAS,gBAAsBd,WAAc4K,GAAYD,cAAe1I,aAAc,IACtFnB,MAAS,eAAsBd,WAAc4K,GAAYF,aAAczI,aAAc,IdrClFL,GAAmB,YC2DZsJ,IACXva,QAASO,GACTL,WAAYoS,GC9CDkI,IACXxa,QAAUK,GACVD,OACI,GAAI7L,GAAAA,SAAY,GAAIsU,GAAAA,SAAYxI,IAClCuF,EAAAA,OACwBvR,EAAW,YACTiM,EAAQ,UAEpCJ,WAAaqS,+BalCf,sBAsBA3e,KAACwL,EAAAA,SAADtL,OACE4L,WACE6a,GACAnE,GACAoE,GACAvmB,GACA0lB,8CA5BJra,iCCAA,sBAkBA1L,KAACwL,EAAAA,SAADtL,OACEuL,SAAUC,IACVG,SAAUH,8CApBZmb,gCCkBAloB,KAAAiiB,WAAwB,GAAIF,KAlB5B,MAuBE3U,GAAFzM,UAAAwnB,kBAAE,SAAkBC,EAAsBzgB,EAAe9G,GACrD,GAAMohB,GAAajiB,KAAKiiB,WAAWqB,IAAI8E,EACnCnG,GACFA,EAAWsB,IAAI5b,EAAO9G,GAEtBb,KAAKiiB,WAAWsB,IAAI6E,EAAS,GAAIrG,OAAMpa,EAAO9G,OAOlDuM,EAAFzM,UAAAiV,YAAE,WACE5V,KAAKiiB,WAAWoG,SAMlBjb,EAAFzM,UAAA2nB,mBAAE,SAAmBlW,EAAiBmW,GAClC,GAAMpd,GAASnL,KAAKiiB,WAAWqB,IAAIlR,GAC/BvR,EAAQ,EACZ,IAAIsK,EAAQ,CACV,GAAMxD,GAAQwD,EAAOmY,IAAIiF,EACJ,iBAAV5gB,IAAuC,gBAAVA,KACtC9G,EAAQ8G,EAAQ,IAGpB,MAAO9G,mBApCXQ,KAAC8iB,EAAAA,mDAfD/W,KdsBaE,IACXG,QAASL,GACTS,OACG,GAAI7L,GAAAA,SAAY,GAAIsU,GAAAA,SAAYlJ,KAEnCO,WAAYwS,GeZDle,GAAe,GAAI2hB,GAAAA,eAAwB,0BdR3CnD,GAAS,SACT3O,IAAiB,MAAO,SAAU,cAAe,kBec9D0W,GAAA,WACE,QAAFA,GAAqBzjB,EACA0jB,EACAC,GAFA1oB,KAArB+E,QAAqBA,EACA/E,KAArByoB,aAAqBA,EACAzoB,KAArB0oB,UAAqBA,EAzBrB,MAAAF,MAyCAG,GAAA,WAQE,QAAFA,GAAsBC,EACAC,EACAC,GAFA9oB,KAAtB4oB,SAAsBA,EACA5oB,KAAtB6oB,cAAsBA,EACA7oB,KAAtB8oB,gBAAsBA,EATtB9oB,KAAA+oB,gBAUI/oB,KAAKgpB,aAAehpB,KAAKipB,oBACzBjpB,KAAK+oB,aAAe/oB,KAAKkpB,4BArD7B,MA8DEnoB,QAAFC,eAAM2nB,EAANhoB,UAAA,2BAAE,WACE,MAAWX,MAAKgpB,aAApB/b,QAAkCmV,2CAQhCrhB,OAAFC,eAAM2nB,EAANhoB,UAAA,oBAAE,WACE,MAAOX,MAAK6oB,+CAWd9nB,OAAFC,eAAM2nB,EAANhoB,UAAA,yBAAE,WACE,MAAOX,MAAKmpB,oBAAsBnpB,KAAK4oB,SAAS7jB,yCAMlDhE,OAAFC,eAAM2nB,EAANhoB,UAAA,sBAAE,WACE,GAAImJ,GAAM9J,KAAKopB,iBACf,OAAOppB,MAAKqpB,YAAYvf,GAAO9J,KAAKspB,gBAAgBxf,GAAO9J,KAAK4oB,SAASH,8CAM3EE,EAAFhoB,UAAA0oB,YAAE,SAAYvf,GAEV,WAAwB,KADZ9J,KAAK4oB,SAASF,UAAU5e,IAOtC6e,EAAFhoB,UAAA4oB,QAAE,WACEvpB,KAAK+oB,aAAaxM,QAAQ,SAACiN,GACzBA,EAAKliB,gBAEPtH,KAAK+oB,iBAOCJ,EAAVhoB,UAAAuoB,gDACQO,IAuBJ,OArBAzpB,MAAKgpB,aAAazM,QAAQ,SAACuC,GACzB,GAAIrb,EAAKimB,UAAU5K,EAAGhV,KAAM,CAG1B,GAAI6f,GAAe,SAAC9Y,GAGlB,MAFAA,GAASA,EAAOwT,QAChBxT,EAAO+Y,SAAWnmB,EAAKmlB,SAAS7jB,QACzB8L,EAGT4Y,GAAcjK,KACZ/b,EAAKomB,aACAnY,QAAQoN,EAAGlB,OACXiH,KAAKlG,EAAAA,IAAIgL,IACT7iB,UAAU,SAAA+J,GACTpN,EAAKqmB,iBAAiBjZ,SAM3B4Y,GAODd,EAAVhoB,UAAAsoB,uCACI,OAAOjpB,MAAK6pB,aAAa/a,YACpB6P,IAAI,SAAAG,GACH,MAAqBzT,MAAiByT,GACpC/Z,QAAStB,EAAKmlB,SAAS7jB,QACvB+E,IAAKrG,EAAKmlB,SAAS7jB,QAAU+Z,EAAGjB,WAGnC1L,OAAO,SAAA2M,GAAM,MAAArb,GAAKimB,UAAU5K,EAAGhV,QAO5B6e,EAAZhoB,UAAAmpB,iBAAE,SAA2BjZ,GACrBA,EAAO+Y,UAAY5pB,KAAK4oB,SAAS7jB,UACnC8L,EAAOhQ,MAAQb,KAAK+pB,yBAAyBlZ,GAE7C7Q,KAAK8oB,gBAAgBjY,KAQjB8X,EAAVhoB,UAAA+oB,UAAA,SAAoB5f,GAChB,WAAqC/H,KAA9B/B,KAAKspB,gBAAgBxf,IAWtB6e,EAAVhoB,UAAAopB,yBAAA,SAAmCC,GAC/B,GAAMC,GAAajqB,KAAK4oB,SAAS7jB,QAAUilB,EAAQnM,OAC/CqM,EAASlqB,KAAKmpB,kBAKlB,OAHAe,GAASF,EAAQ9I,QAAU+I,EAAeC,GAAUD,EAAc,GAAKC,EAEvElqB,KAAKmpB,mBAAqBnpB,KAAKmqB,kBAAkBD,GAC1ClqB,KAAKwE,gBASNmkB,EAAVhoB,UAAAwpB,kBAAA,SAA4BC,cACpBC,EAAe,SAACvgB,GAAQ,OAACrG,EAAKimB,UAAU5f,GAY5C,OAVIugB,GAAaD,IACfpqB,KAAK6pB,aAAaS,eAAe7Y,KAAK,SAAAqN,GACpC,GAAIhV,GAAMrG,EAAKmlB,SAAS7jB,QAAU+Z,EAAGjB,MACrC,QAAKwM,EAAavgB,KAChBsgB,EAAWtgB,GACJ,KAKNsgB,GAMDzB,EAAVhoB,UAAA2oB,gBAAA,SAA0Bxf,GACtB,MAAO9J,MAAK4oB,SAASF,UAAU5e,IA/NnC6e,KC0BA1lB,GAAA,WAqCE,QAAFA,GAAwB4lB,EACA0B,EACApqB,GAFAH,KAAxB6oB,cAAwBA,EACA7oB,KAAxBuqB,YAAwBA,EACAvqB,KAAxBG,QAAwBA,EA2MxBH,KAAAmB,aAQAnB,KAAAwqB,iBAA8B,EApR9B,MA2BEzpB,QAAFC,eAAMiC,EAANtC,UAAA,6BAAE,WACE,QAASX,KAAKmH,+CAOhBpG,OAAFC,eAAMiC,EAANtC,UAAA,sBAAE,WACE,MAAOX,MAAKmH,cAAgBnH,KAAKmH,cAAc3C,mBAAiBzC,QAUlE,SAAmBlB,GACjB,GAAqB4pB,GAAjB3gB,EAAM,SAEN9J,MAAKmH,gBACP2C,EAAM9J,KAAKmH,cAAciiB,kBACzBqB,EAAczqB,KAAKmB,UAAU2I,GAC7B9J,KAAKmB,UAAU2I,GAAOjJ,EAExB,IAAIgQ,GAAS,GAAI6Z,GAAAA,aAAaD,EAAa5pB,GAAO,EAElDb,MAAKoE,aAAYqU,KAACA,EAAC3O,GAAM+G,EAA7B4H,2CAmBE1X,OAAFC,eAAgBiC,EAAhBtC,UAAA,qBAAE,WACE,MAAOX,MAAKuqB,YAAYlqB,cAAcqc,4CAGxC3b,OAAFC,eAAgBiC,EAAhBtC,UAAA,qBAAE,WACE,MAAOX,MAAKuqB,YAAYlqB,+CAMhB4C,EAAZtC,UAAAM,YAAE,SAAsB6I,GACpB,MAAO9J,MAAKmB,UAAU2I,IAYxB7G,EAAFtC,UAAA8D,SAAE,WACEzE,KAAK+H,SAAW/H,KAAKiH,mBACrBjH,KAAKwqB,iBAAkB,GAGzBvnB,EAAFtC,UAAAyD,YAAE,SAAYyM,GACV,KAAM,IAAI8Z,OAAM,kEAAkE9Z,IAGpF5N,EAAFtC,UAAAiE,YAAE,WACM5E,KAAKmH,eACPnH,KAAKmH,cAAcoiB,gBAEdvpB,MAAK6oB,eAWJ5lB,EAAZtC,UAAAyG,eAAE,SAAyB0C,EAAa8gB,GACpC,GAAI9mB,GAAM9D,KAAKiB,YAAY6I,EAE3B,YAD6B/H,KAAR+B,GAA6B,OAARA,GACT,KAARA,EAAcA,EAAM8mB,GAQrC3nB,EAAZtC,UAAAsG,iBAAE,SAA2B+D,OAA7B,KAAAA,IAA6BA,EAAsBhL,KAAKK,cAEpD,OAAOL,MAAKG,QAAQuS,YAAY1H,EADlB,YAON/H,EAAZtC,UAAAkL,mBAAE,SAA6Bgf,EACA7f,GAC3B,WADJ,KAAAA,IAA+BA,EAAsBhL,KAAKK,eAC/CL,KAAKG,QAAQ2qB,qBAAqB9f,EAAQ6f,IASzC5nB,EAAZtC,UAAAqU,kBAAE,SAA4BuK,EAAqBwL,OAAnD,KAAAA,IAAmDA,GAAnD,EACI,IAAIlqB,GAAQ,MACRmqB,EAAiB,EAErB,IAAIzL,IACF9G,EAANzY,KAAAG,QAAA8qB,iBAAA1L,GAAO1e,EAAP4X,EAAA,GAAcuS,EAAdvS,EAAA,IAEWuS,GAAkBD,GAAc,CACnC,GAAMpjB,GAAQ2H,EAAezO,GACvBqqB,GAAY3L,EAClBvf,MAAKG,QAAQgrB,qBAAqBxjB,EAAOujB,GAI7C,MAAOrqB,GAAMoJ,QAAU,aAMfhH,EAAZtC,UAAA8G,qBAAE,SAA+BE,EACA9G,EACAunB,OAAjC,KAAAA,IAAiCA,EAAuBpoB,KAAKK,eACzDL,KAAKG,QAAQC,oBAAoBgoB,EAASzgB,EAAO9G,IAMzCoC,EAAZtC,UAAAoS,sBAAE,SAAgCpL,EAAwBujB,GACtDlrB,KAAKG,QAAQgrB,qBAAqBxjB,EAAOujB,IAOjCjoB,EAAZtC,UAAAG,YAAE,SAAsBgJ,EAAckB,GAClC,GAAsB,gBAAXA,GACT,IAAK,GAAIogB,KAAQpgB,GACfhL,KAAKmB,UAAUiqB,GAAQpgB,EAAOogB,OAG1BthB,KACJ9J,KAAKmB,UAAU2I,GAAOkB,IAUlB/H,EAAZtC,UAAA0G,4BAAE,SAAsCyC,EACA2e,EACA4C,GACpC,IAAKrrB,KAAKmH,cAAe,CACvB,GAAImkB,GAAa,GAAI9C,IAAW1e,EAAK2e,EAAczoB,KAAKmB,UACxDnB,MAAKmH,cAAgB,GAAIwhB,IACrB2C,EACAtrB,KAAK6oB,cACL,SAAChY,GAAW,MAAAwa,GAAmBxa,KAGrC,MAAO7Q,MAAKmH,eAMdpG,OAAFC,eAAgBiC,EAAhBtC,UAAA,qBAAE,WAKE,IAAK,GAJC4qB,GAAMvrB,KAAKK,cAAcmrB,SACzBC,KAGGpJ,EAAIkJ,EAAInqB,OAAQihB,KACvBoJ,EAAOpJ,GAAKkJ,EAAIlJ,EAElB,OAAOoJ,oCAOTxoB,EAAFtC,UAAA+qB,iBAAE,SAAiB3mB,GAGf,MAFkBhE,QAAOG,KAAKlB,KAAKmB,WAAWC,QAC5BpB,KAAKmB,UAAU4D,GACE,EAAI,GAAM,GAOrC9B,EAAZtC,UAAA0oB,YAAE,SAAsBvf,GACpB,MAAO9J,MAAKmH,cAAckiB,YAAYvf,IAGxC/I,OAAFC,eAAgBiC,EAAhBtC,UAAA,sBAAE,WACE,MAAOX,MAAKwqB,iDA9PhBvnB,KCoBA4B,GAAA,SAAAnB,GA4BE,QAAFmB,GAAwB8mB,EACA9C,EACA0B,EACApqB,GAHtB,GAAFsD,GAIIC,EAJJC,KAAA3D,KAIU6oB,EAAe0B,EAAapqB,IAJtCH,WAAwByD,GAAxBkoB,SAAwBA,EACAloB,EAAxBolB,cAAwBA,EACAplB,EAAxB8mB,YAAwBA,EACA9mB,EAAxBtD,QAAwBA,IAnDxB,MAoB4C0D,GAA5CgB,EAAAnB,GAME3C,OAAFC,eAAM6D,EAANlE,UAAA,iBAAE,WACE,GAAIirB,GAAM5rB,KAAKmH,cACX2C,EAAM8hB,EAAMA,EAAIxC,kBAAoBppB,KAAK2rB,QAE7C,OAAgB,UAAR7hB,EAAmB,QAAUA,mCAIvC/I,OAAFC,eAAM6D,EAANlE,UAAA,gBAAE,WACE,MAAOX,MAAKmB,2CAMdJ,OAAFC,eAAM6D,EAANlE,UAAA,oBAAE,WACE,MAAOX,MAAKmH,+CAiBdtC,EAAFlE,UAAA+qB,iBAAE,WACC,MAAOhoB,GAAV/C,UAAgB+qB,iBAAhB/nB,KAAA3D,KAAiCA,KAAK2rB,WAMpC9mB,EAAFlE,UAAAuD,WAAE,SAAW4F,GACT,MAAOA,GAAM9J,KAAKiB,YAAY6I,OAAO/H,IAMvC8C,EAAFlE,UAAAqD,WAAE,SAAW8F,EAAckB,EAAcC,GACrC,OADJ,KAAAA,IAAyCA,GAAzC,GACQA,EACFjL,KAAK6rB,eAAe/hB,EAAKkB,OACpB,IAAImR,MAAM2P,QAAQ9gB,GACvBhL,KAAK+rB,iBAAiBjiB,EAAKkB,OACtB,IAAsB,gBAAXA,GAChBhL,KAAKgsB,kBAAkBliB,EAAKkB,OACvB,CAAA,GAAsB,gBAAXA,GAGhB,KAAM,IAAI2f,OACR,wBAAwB7gB,EADhC,mDAFM9J,MAAKisB,kBAAkBniB,EAAKkB,KAWhCnG,EAAFlE,UAAAsE,2BAAE,SAA2B6E,EACA2e,EACA4C,GACzB,MAAOrrB,MAAKqH,4BAA4ByC,EAAK2e,EAAc4C,IAWnDxmB,EAAZlE,UAAAkrB,eAAE,SAAyB/hB,EAAckB,GACjClB,IACF9J,KAAKmB,UAAU2I,GAAOkB,IAOhBnG,EAAZlE,UAAAorB,iBAAE,SAA2BjiB,EAAUkB,OAAvC,KAAAlB,IAA6BA,EAA7B,IACI9J,KAAKmB,UAAU2I,GAAOkB,EAASA,EAAO4T,KAAK,KAAO,IAM1C/Z,EAAZlE,UAAAqrB,kBAAE,SAA4BliB,EAAUkB,OAAxC,KAAAlB,IAA8BA,EAA9B,GACI,IAAIoiB,KACJ,IAAIlhB,EACF,IAAK,GAAIogB,KAAQpgB,GACTA,EAAOogB,IACXc,EAAQ1M,KAAK4L,EAInBprB,MAAKmB,UAAU2I,GAAOoiB,EAAQtN,KAAK,MAM3B/Z,EAAZlE,UAAAsrB,kBAAE,SAA4BniB,EAAUkB,OAAxC,KAAAlB,IAA8BA,EAA9B,IACI9J,KAAKmB,UAAU2I,GAAOkB,GA1I1BnG,GAoB4C5B,mBCU1C,QAAFkpB,GAAc3b,EACqBvQ,EACH+b,EACV6J,GAHpB,GAAFpiB,GAIIC,EAJJC,KAAA3D,KAIUwQ,EAAOvQ,EAAa+b,IAJ9Bhc,WAGsByD,GAAtBoiB,aAAsBA,EAXtBpiB,EAAA2oB,qBAAwB,EAMxB3oB,EAAA4oB,aAAgB,EAiJhB5oB,EAAA6oB,YA1II7oB,EAAK6oB,cAnCT,MAmBoCzoB,GAApCsoB,EAAAzoB,GAoBEyoB,EAAFxrB,UAAA4rB,SAAE,WACEvsB,KAAK8jB,UAAUvH,QAAQ,SAACoI,EAAyBhZ,GAC/CgZ,EAAI4E,YAENvpB,KAAK8jB,UAAUuE,QACfroB,KAAKqsB,aAAc,GAIrBF,EAAFxrB,UAAA6rB,SAAE,SAAS1P,EAAoBuP,GAW3B,WAXJ,KAAAA,IAA+BA,GAA/B,GACIA,EAAcA,GAAersB,KAAKqsB,YAClCvP,EAAa9c,KAAKysB,eAAe3P,IAE7BuP,GAAgBrsB,KAAK0kB,SAAS5H,KAChC9c,KAAK0sB,iBAEL1sB,KAAK2sB,oBAAoB7P,GACzB9c,KAAK4sB,sBAAsB9P,EAAYuP,IAGlCrsB,KAAK6sB,cAIdV,EAAFxrB,UAAA8rB,eAAE,SAAeK,GACb,GAAIhO,GAAK9e,KAAK6lB,aAAazG,YAAY0N,EAIvC,OAHIhO,KACFgO,EAAehO,EAAGhC,YAEbgQ,GAODX,EAAVxrB,UAAAisB,sBAAA,SAAgC9P,EAAoBuP,GAChD,GAAIA,EAAa,CACf,GAAIvN,GAAK9e,KAAK6lB,aAAa5B,YAAYnH,GACnCc,EAAQkB,EAAKA,EAAGlB,MAAQ,SAG5B,QAAQA,GACN,IAAK,KACH5d,KAAK+sB,iBAAiB,QACtB,MACF,KAAK,KACH/sB,KAAK+sB,iBAAiB,eACtB,MACF,KAAK,KACH/sB,KAAK+sB,iBAAiB,sBACtB,MACF,KAAK,KACH/sB,KAAK+sB,iBAAiB,8BAK1B,OAAQnP,GACN,IAAK,KACH5d,KAAK+sB,iBAAiB,6BACtB,MACF,KAAK,KACH/sB,KAAK+sB,iBAAiB,sBACtB,MACF,KAAK,KACH/sB,KAAK+sB,iBAAiB,eACtB,MACF,KAAK,KACH/sB,KAAK+sB,iBAAiB,UAK5B,MAAO/sB,MAAKgtB,iBAAiBlQ,IAMvBqP,EAAVxrB,UAAAosB,iBAAA,SAA2BE,cACnBT,EAAW,SAAC5O,GACd,GAAIkB,GAAKrb,EAAKoiB,aAAazG,YAAYxB,EACvCna,GAAKupB,iBAAiBlO,EAAKA,EAAGhC,WAAac,GAE7CqP,GAAQpS,MAAM,KAAK0B,QAAQ,SAAAqB,GAAS,MAAA4O,GAAS5O,EAAM3T,WAM7CkiB,EAAVxrB,UAAAqsB,iBAAA,SAA2BlQ,GACvB,GAAI6H,GAA2B3kB,KAAK8jB,UAAUR,IAAIxG,GAC9CoQ,EAAeltB,KAAKssB,SAASjN,OAAO,SAAC4G,EAAO3U,GAC9C,MAAO2U,IAAUtB,GAAQrT,EAAG8T,QAAUT,EAAIS,QACzC,EAKH,OAHIT,KAAQuI,GACVltB,KAAKssB,SAAS9M,KAAKmF,EAAI6H,YAElBxsB,KAAK6sB,cAINV,EAAVxrB,UAAA+rB,0BACI,GAAI1sB,KAAKssB,SAASlrB,OAAQ,CAExB,IAAiB,GAAvBkc,GAAA,EAAuB7E,EAAAzY,KAAKssB,SAALhP,EAAvB7E,EAAArX,OAAuBkc,IAAvB,CAAA7E,EAAA6E,GACW6P,aAELntB,KAAKssB,YAEP,MAAOtsB,OAIDmsB,EAAVxrB,UAAAgsB,oBAAA,SAA8B7P,IACrB9c,KAAK8jB,UAAUsJ,IAAItQ,IAAe9c,KAAKosB,qBAC1CpsB,KAAK4kB,cAAc9H,IAQbqP,EAAZxrB,UAAAukB,UAAE,SAAoBhB,GAClB,MAAO,IAAImJ,IAAmBnJ,IAGhCnjB,OAAFC,eAAgBmrB,EAAhBxrB,UAAA,oBAAE,WACE,MAAQX,MAAKssB,SAASlrB,OAAS,kDAxJnCC,KAAC8iB,EAAAA,iDAXD9iB,KAA4BgS,EAAAA,SAwB5BhS,KAAAN,OAAAa,aAAAP,KAAeQ,EAAAA,OAAfN,MAAsBO,EAAAA,iBACtBT,SAAAU,GAAAH,aAAAP,KAAeQ,EAAAA,OAAfN,MAAsBwM,EAAAA,cArBtB1M,KAAQwiB,MAXRsI,GAmBoCre,IAkKpCuf,GAAA,WAYE,QAAFA,GAAsBC,GAAAttB,KAAtBstB,YAAsBA,EAXtBttB,KAAAutB,WAAsB,EACtBvtB,KAAAwtB,cAvLA,MAyLEzsB,QAAFC,eAAMqsB,EAAN1sB,UAAA,eAAE,WACE,MAAOX,MAAKutB,2CAGdxsB,OAAFC,eAAMqsB,EAAN1sB,UAAA,aAAE,WACE,MAAOX,MAAKstB,6CASdD,EAAF1sB,UAAA4oB,QAAE,WACEvpB,KAAKmtB,aACLntB,KAAKwtB,eAIPH,EAAF1sB,UAAA6rB,SAAE,WAAA,GAAF/oB,GAAAzD,IAOI,OANKA,MAAKutB,YACRvtB,KAAKutB,WAAY,EACjBvtB,KAAKwtB,WAAWjR,QAAQ,SAACkR,GACvBA,EAAShqB,MAGNzD,MAITqtB,EAAF1sB,UAAAwsB,WAAE,WAAA,GAAF1pB,GAAAzD,IAOI,OANIA,MAAKutB,YACPvtB,KAAKutB,WAAY,EACjBvtB,KAAKwtB,WAAWjR,QAAQ,SAACkR,GACvBA,EAAShqB,MAGNzD,MAITqtB,EAAF1sB,UAAAwkB,YAAE,SAAYuI,IACiC,IAAvC1tB,KAAKwtB,WAAWxlB,QAAQ0lB,IAC1B1tB,KAAKwtB,WAAWhO,KAAKkO,GAEnB1tB,KAAKutB,WACPG,EAAS1tB,OAKbqtB,EAAF1sB,UAAA0kB,eAAE,SAAe1Z,KA7OjB0hB,KAoPaM,IACXlgB,QAASK,GACTK,SAAUge,ICjOZyB,GAAA,WAYE,QAAFA,GAAsBN,GAAAttB,KAAtBstB,YAAsBA,EAXtBttB,KAAAutB,WAAsB,EACtBvtB,KAAAwtB,cAvBA,MAyBEzsB,QAAFC,eAAM4sB,EAANjtB,UAAA,eAAE,WACE,MAAOX,MAAKutB,2CAGdxsB,OAAFC,eAAM4sB,EAANjtB,UAAA,aAAE,WACE,MAAOX,MAAKstB,6CASdM,EAAFjtB,UAAA4oB,QAAE,WACEvpB,KAAKmtB,aACLntB,KAAKwtB,eAIPI,EAAFjtB,UAAA6rB,SAAE,WAAA,GAAF/oB,GAAAzD,IAOI,OANKA,MAAKutB,YACRvtB,KAAKutB,WAAY,EACjBvtB,KAAKwtB,WAAWjR,QAAQ,SAACkR,GACvBA,EAAShqB,MAGNzD,MAIT4tB,EAAFjtB,UAAAwsB,WAAE,WAAA,GAAF1pB,GAAAzD,IAOI,OANIA,MAAKutB,YACPvtB,KAAKutB,WAAY,EACjBvtB,KAAKwtB,WAAWjR,QAAQ,SAACkR,GACvBA,EAAShqB,MAGNzD,MAIT4tB,EAAFjtB,UAAAwkB,YAAE,SAAYuI,IACiC,IAAvC1tB,KAAKwtB,WAAWxlB,QAAQ0lB,IAC1B1tB,KAAKwtB,WAAWhO,KAAKkO,GAEnB1tB,KAAKutB,WACPG,EAAS1tB,OAKb4tB,EAAFjtB,UAAA0kB,eAAE,SAAe1Z,KA7EjBiiB,oBA6FE,QAAFxf,GAAwBoC,EACqBvQ,EACH+b,GAFxC,GAAFvY,GAGIC,EAHJC,KAAA3D,KAGUwQ,EAAOvQ,EAAa+b,IAH9Bhc,WAAwByD,GAAxB+M,MAAwBA,EACqB/M,EAA7CxD,YAA6CA,EACHwD,EAA1CuY,UAA0CA,EAEtCvY,EAAKqgB,UAAY,GAAI/B,KACrBte,EAAK6gB,QAAU,GAAIC,GAAAA,gBAA6B,GAAIH,KAAY,IAChE3gB,EAAK+gB,aAAe/gB,EAAK6gB,QAAQG,iBAnGrC,MAwFsC5gB,GAAtCuK,EAAA1K,GAeE0K,EAAFzN,UAAA2hB,mBAAE,SAAmBxD,GACjB,GAAM+O,GAAmB7tB,KAAK8jB,UAAUR,IAAIxE,EAAGhC,WAC3C+Q,IACFA,EAAiBrB,YAKrBpe,EAAFzN,UAAA6hB,qBAAE,SAAqB1D,GACnB,GAAM+O,GAAmB7tB,KAAK8jB,UAAUR,IAAIxE,EAAGhC,WAC3C+Q,IACFA,EAAiBV,cAQX/e,EAAZzN,UAAAukB,UAAE,SAAoBhB,GAClB,MAAO,IAAI0J,IAAqB1J,mBApCpC7iB,KAAC8iB,EAAAA,iDA/ED9iB,KAA4BgS,EAAAA,SAsF5BhS,KAAAN,OAAAa,aAAAP,KAAeQ,EAAAA,OAAfN,MAAsBO,EAAAA,iBACtBT,SAAAU,GAAAH,aAAAP,KAAeQ,EAAAA,OAAfN,MAAsBwM,EAAAA,eA/FtBK,GAwFsCN,IlB9DzBggB,IACXrgB,QAAU/L,GACVmM,OACI,GAAI7L,GAAAA,SAAY,GAAIsU,GAAAA,SAAY5U,IAClCmiB,GACA/V,IAEFH,WAAaiT,GmB1Bfjf,GAAA,WAUE,QAAFA,GAAkCosB,EACsB7tB,EACbD,GAFTD,KAAlC+tB,kBAAkCA,EACsB/tB,KAAxDE,oBAAwDA,EACbF,KAA3CC,YAA2CA,EAnB3C,MAwBE0B,GAAFhB,UAAAP,oBAAE,SAAoBgoB,EAAsBzgB,EAAwB9G,GAChE,GAAIsK,KACiB,iBAAVxD,KACTwD,EAAOxD,GAAS9G,EAChB8G,EAAQwD,GAEVA,EAAS2V,EAAiBnZ,GAC1B3H,KAAKguB,+BAA+B7iB,EAAQid,IAM9CzmB,EAAFhB,UAAAwqB,qBAAE,SAAqBxjB,EAAwBujB,GAA7C,GAAFznB,GAAAzD,SAAA,KAAAkrB,IAA+CA,KAC3C,IAAM/f,GAAS2V,EAAiBnZ,EAChCujB,GAAS3O,QAAQ,SAAAnK,GACf3O,EAAKuqB,+BAA+B7iB,EAAQiH,MAShDzQ,EAAFhB,UAAAsqB,iBAAE,SAAiB1L,GACf,GACI1e,GAAQb,KAAK0S,YAAY6M,EADf,iBAEV1e,KAAUotB,KACZptB,EAAQ,GAEV,IAAMmqB,GAAiBhrB,KAAKkuB,kBAAkB3O,EALhC,mBAMbxf,EAAAA,iBAAiBC,KAAKC,cAAgBD,KAAKE,oBAAuBW,EAAQ,EAE3E,QAAQA,GAAS,MAAOmqB,IAM1BrpB,EAAFhB,UAAAmqB,qBAAE,SAAqB1C,EAAsByC,GACzC,MAAOzC,GAAQhN,aAAayP,IAAc,IAM5ClpB,EAAFhB,UAAAutB,kBAAE,SAAkB9F,EAAsBG,GACtC,MAAOH,GAAQzgB,MAAM4gB,IAAcH,EAAQzgB,MAAMwmB,iBAAiB5F,IAAc,IAOlF5mB,EAAFhB,UAAA+R,YAAE,SAAY0V,EAAsBG,EAAmB6F,OAAvD,KAAAA,IAAuDA,GAAvD,EACI,IAAIvtB,GAAQ,EACZ,IAAIunB,EAAS,EACUvnB,EAAQb,KAAKkuB,kBAAkB9F,EAASG,MAEvDtM,EAAAA,kBAAkBjc,KAAKC,aACpBmuB,IACHvtB,EAAQwtB,iBAAiBjG,GAAS+F,iBAAiB5F,IAGjDvoB,KAAKE,sBACPW,EAAQb,KAAK+tB,kBAAkBzF,mBAAmBF,EAASG,KAQnE,MAAO1nB,GAAQA,EAAMoJ,OAASgkB,IAQxBtsB,EAAVhB,UAAAqtB,+BAAA,SAAyC7iB,EAAYid,aACjDrnB,QAAOG,KAAKiK,GAAQmH,OAAOiK,QAAQ,SAAAzS,GACjC,GAAMwkB,GAASnS,MAAM2P,QAAQ3gB,EAAOrB,IAAQqB,EAAOrB,IAAQqB,EAAOrB,GAClEwkB,GAAOhc,MACP,KAAkB,GAAxBgL,GAAA,EAAwBiR,EAAxBD,EAAwBhR,EAAxBiR,EAAAntB,OAAwBkc,IAAxB,CAAW,GAAIzc,GAAf0tB,EAAAjR,EACYrB,GAAAA,kBAAkBxY,EAAKxD,eAAiBwD,EAAKvD,oBAC/CkoB,EAAQzgB,MAAMC,YAAYkC,EAAKjJ,GAE/B4C,EAAKsqB,kBAAkB5F,kBAAkBC,EAASte,EAAKjJ,sBApGjEQ,KAAC8iB,EAAAA,iDAHD9iB,KAAQ+L,GAARxL,aAAAP,KAMeW,EAAAA,aACfX,SAAAU,GAAAH,aAAAP,KAAeW,EAAAA,WAAfX,KAA2BQ,EAAAA,OAA3BN,MAAkCU,QAClCZ,SAAAU,GAAAH,aAAAP,KAAeQ,EAAAA,OAAfN,MAAsBO,EAAAA,kBAnBtBH,KA+HMssB,GAAiB,QpBxHVxN,GAAS,SACT3O,IAAiB,MAAO,SAAU,cAAe,iCnB+D5D,QAAF7J,GAAc9E,EACAqD,EACAC,GAFZ,GAAFhD,GAGIC,EAHJC,KAAA3D,KAGUmD,EAASqD,EAAOC,IAH1BzG,WAIIyD,GAAK8L,WAAa,GAAIif,GAAAA,cAAsB,GAC5C/qB,EAAKoD,QAAUpD,EAAK8L,WAAWkV,iBA5EnC,MAmCqC5gB,GAArCoE,EAAAvE,GAeA3C,OAAAC,eAA+BiH,EAA/BtH,UAAA,cAAA,SAAsCmD,GAAW9D,KAAKc,YAAY,SAAUgD,oCAC5E/C,OAAAC,eAA+BiH,EAA/BtH,UAAA,gBAAA,SAAwCmD,GAAS9D,KAAKc,YAAY,WAAYgD,oCAC9E/C,OAAAC,eAA+BiH,EAA/BtH,UAAA,gBAAA,SAAwCmD,GAAS9D,KAAKc,YAAY,WAAYgD,oCAC9E/C,OAAAC,eAA+BiH,EAA/BtH,UAAA,gBAAA,SAAwCmD,GAAS9D,KAAKc,YAAY,WAAYgD,oCAC9E/C,OAAAC,eAA+BiH,EAA/BtH,UAAA,gBAAA,SAAwCmD,GAAS9D,KAAKc,YAAY,WAAYgD,oCAC9E/C,OAAAC,eAA+BiH,EAA/BtH,UAAA,gBAAA,SAAwCmD,GAAS9D,KAAKc,YAAY,WAAYgD,oCAE9E/C,OAAAC,eAA+BiH,EAA/BtH,UAAA,kBAAA,SAA0CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCAChF/C,OAAAC,eAA+BiH,EAA/BtH,UAAA,kBAAA,SAA0CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCAChF/C,OAAAC,eAA+BiH,EAA/BtH,UAAA,kBAAA,SAA0CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCAChF/C,OAAAC,eAA+BiH,EAA/BtH,UAAA,kBAAA,SAA0CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCAEhF/C,OAAAC,eAA+BiH,EAA/BtH,UAAA,kBAAA,SAA0CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCAChF/C,OAAAC,eAA+BiH,EAA/BtH,UAAA,kBAAA,SAA0CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCAChF/C,OAAAC,eAA+BiH,EAA/BtH,UAAA,kBAAA,SAA0CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCAChF/C,OAAAC,eAA+BiH,EAA/BtH,UAAA,kBAAA,SAA0CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCAuB9EmE,EAAFtH,UAAAyD,YAAE,SAAYC,IACe,MAArBA,EAAgB,QAAarE,KAAKmH,gBACpCnH,KAAKoP,wBAQTnH,EAAFtH,UAAA8D,SAAE,WAAA,GAAFhB,GAAAzD,IACI0D,GAAJ/C,UAAU8D,SAAVd,KAAA3D,MAEIA,KAAKqH,4BAA4B,SAAU,MAAO,SAAChD;4DACjDZ,EAAK2L,qBAAqB/K,EAAQxD,SAEpCb,KAAKoP,wBAUGnH,EAAZtH,UAAAyO,qBAAE,SAA+BvO,GAC7BA,EAAQA,GAASb,KAAKiB,YAAY,WAAa,MAC3CjB,KAAKmH,gBACPtG,EAAQb,KAAKmH,cAAc3C,eAI7B,IAAI6K,GAAMC,EAAiBzO,GAAgB,GAE3Cb,MAAKyH,qBAAqB4H,GAC1BrP,KAAKuP,WAAWC,KAAKH,EAAI,mCA/F7BhO,KAACC,EAAAA,UAADC,OAAYC,SAAU,+RAbtBH,KAAsCK,KAPtCL,KAAEI,EAAAA,aAOFJ,KAAoDM,wBAkCpD4E,SAAAlF,KAAGc,EAAAA,MAAHZ,MAAS,cACTkO,WAAApO,KAAGc,EAAAA,MAAHZ,MAAS,iBACTmO,WAAArO,KAAGc,EAAAA,MAAHZ,MAAS,iBACToO,WAAAtO,KAAGc,EAAAA,MAAHZ,MAAS,iBACTqO,WAAAvO,KAAGc,EAAAA,MAAHZ,MAAS,iBACTsO,WAAAxO,KAAGc,EAAAA,MAAHZ,MAAS,iBAETuO,aAAAzO,KAAGc,EAAAA,MAAHZ,MAAS,oBACTwO,aAAA1O,KAAGc,EAAAA,MAAHZ,MAAS,oBACTyO,aAAA3O,KAAGc,EAAAA,MAAHZ,MAAS,oBACT0O,aAAA5O,KAAGc,EAAAA,MAAHZ,MAAS,oBAET2O,aAAA7O,KAAGc,EAAAA,MAAHZ,MAAS,oBACT4O,aAAA9O,KAAGc,EAAAA,MAAHZ,MAAS,oBACT6O,aAAA/O,KAAGc,EAAAA,MAAHZ,MAAS,oBACT8O,aAAAhP,KAAGc,EAAAA,MAAHZ,MAAS,qBAjET0G,GAmCqChF,mBC6BnC,QAAFqN,GAAcnN,EACAqD,EACoB+J,EACZC,EACAC,EACRhK,GALZ,GAAFhD,GAMIC,EANJC,KAAA3D,KAMUmD,EAASqD,EAAOC,IAN1BzG,WAGsByD,GAAtB+M,MAAsBA,EACA/M,EAAtBgN,gBAAsBA,EA5BtBhN,EAAAiN,QAAsB,MAgCdH,IACF9M,EAAKmD,eAAiB2J,EAAU1J,QAAQC,UAAUrD,EAAKkN,gBAAgB5F,KAAKtH,KAE9EA,EAAKmN,kBACDnN,EAAKgN,gBAAgBI,OAAO/J,UAAUrD,EAAKsD,iBAAiBgE,KAAKtH,MA5EzE,MAsCwCI,GAAxCyM,EAAA5M,GAQA3C,OAAAC,eAAiCsP,EAAjC3P,UAAA,WAAA,SAAqCmD,GAAO9D,KAAKc,YAAY,MAAOgD,oCACpE/C,OAAAC,eAAiCsP,EAAjC3P,UAAA,aAAA,SAAuCmD,GAAO9D,KAAKc,YAAY,QAASgD,oCACxE/C,OAAAC,eAAiCsP,EAAjC3P,UAAA,aAAA,SAAuCmD,GAAO9D,KAAKc,YAAY,QAASgD,oCACxE/C,OAAAC,eAAiCsP,EAAjC3P,UAAA,aAAA,SAAuCmD,GAAO9D,KAAKc,YAAY,QAASgD,oCACxE/C,OAAAC,eAAiCsP,EAAjC3P,UAAA,aAAA,SAAuCmD,GAAO9D,KAAKc,YAAY,QAASgD,oCACxE/C,OAAAC,eAAiCsP,EAAjC3P,UAAA,aAAA,SAAuCmD,GAAO9D,KAAKc,YAAY,QAASgD,oCAExE/C,OAAAC,eAAiCsP,EAAjC3P,UAAA,eAAA,SAAyCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCAC5E/C,OAAAC,eAAiCsP,EAAjC3P,UAAA,eAAA,SAAyCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCAC5E/C,OAAAC,eAAiCsP,EAAjC3P,UAAA,eAAA,SAAyCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCAC5E/C,OAAAC,eAAiCsP,EAAjC3P,UAAA,eAAA,SAAyCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCAE5E/C,OAAAC,eAAiCsP,EAAjC3P,UAAA,eAAA,SAAyCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCAC5E/C,OAAAC,eAAiCsP,EAAjC3P,UAAA,eAAA,SAAyCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCAC5E/C,OAAAC,eAAiCsP,EAAjC3P,UAAA,eAAA,SAAyCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCAC5E/C,OAAAC,eAAiCsP,EAAjC3P,UAAA,eAAA,SAAyCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCAsB1EwM,EAAF3P,UAAAyD,YAAE,SAAYC,IACY,MAAlBA,EAAa,KAAarE,KAAKmH,gBACjCnH,KAAK+G,oBAQTuJ,EAAF3P,UAAAmQ,mBAAE,WAAA,GAAFrN,GAAAzD,IACIA,MAAK+Q,uBACL/Q,KAAKqH,4BAA4B,MAAO,IAAK,SAAChD,GAC5CZ,EAAKsD,iBAAiB1C,EAAQxD,SAEhCb,KAAK+G,oBAGPuJ,EAAF3P,UAAAiE,YAAE,WACElB,EAAJ/C,UAAUiE,YAAVjB,KAAA3D,MACQA,KAAK4G,gBACP5G,KAAK4G,eAAeU,cAElBtH,KAAKgR,WACPhR,KAAKgR,UAAUC,aAEbjR,KAAK4Q,mBACP5Q,KAAK4Q,kBAAkBtJ,eAYjBgJ,EAAZ3P,UAAAoQ,qBAAE,WAAA,GAAFtN,GAAAzD,IACIA,MAAKwQ,MAAMU,kBAAkB,WAEK,mBAArBC,oBACT1N,EAAKuN,UAAY,GAAIG,kBAAiB,SAACC,GACrC,GAAMC,GAAmB,SAACC,GACxB,MAAQA,GAAGC,YAAcD,EAAGC,WAAWnQ,OAAS,GAC3CkQ,EAAGE,cAAgBF,EAAGE,aAAapQ,OAAS,EAI/CgQ,GAAUK,KAAKJ,IACjB5N,EAAKsD,qBAGTtD,EAAKuN,UAAUU,QAAQjO,EAAKpD,eAAgBsR,WAAW,QAQnDrB,EAAZ3P,UAAAgQ,gBAAE,SAA0BiB,GAA1B,GAAFnO,GAAAzD,IACIA,MAAK0Q,SAAWkB,GAAa,IAAIC,cAC5BC,GAAcC,KAAK,SAAAC,GAAK,MAAAA,KAAMvO,EAAKiN,YACtC1Q,KAAK0Q,QAAU,OAEjB1Q,KAAK+G,oBAMGuJ,EAAZ3P,UAAAoG,iBAAE,SAA2BlG,GAA3B,GAAF4C,GAAAzD,IACIa,GAAQA,GAASb,KAAKiB,YAAY,QAAU,IACxCjB,KAAKmH,gBACPtG,EAAQb,KAAKmH,cAAc3C,eAI7B,IAAMyN,GAAQjS,KAAKkS,cAChBC,OAAO,SAAAC,GAAM,MAAgB,KAAhBA,EAAGC,UAA+C,QAA7B5O,EAAKwD,iBAAiBmL,KACxDE,KAAK,SAACC,EAAGC,GACR,GAAMC,IAAUhP,EAAKtD,QAAQuS,YAAYH,EAAG,SACtCI,GAAUlP,EAAKtD,QAAQuS,YAAYF,EAAG,QAC5C,OAAII,OAAMH,IAAWG,MAAMD,IAAWF,IAAWE,EACxC,EAEAF,EAASE,EAAS,GAAK,GAIpC,IAAIV,EAAM7Q,OAAS,EAAG,CACpB,GAAMyR,GAAWZ,EAAMa,KAIvB9S,MAAK+S,sBAAsB/S,KAAK0H,UAAU7G,GAAQoR,GAGlDjS,KAAK+S,sBAAsB/S,KAAK0H,aAAcmL,MAQ1CvC,EAAV3P,UAAA+G,UAAA,SAAoB7G,OAApB,KAAAA,IAAoBA,EAApB,KACI,IAAIiJ,GAAKkJ,GACPC,cAAe,KACfC,eAAgB,KAChBC,aAAc,KACdC,gBAAiB,KAGnB,QAAQpT,KAAK0Q,SACX,IAAK,SACL,IAAK,iBACH5G,EAAM,eACN,MACF,KAAK,MACL,IAAK,cACL,QACEA,EAAqC,QAA/B9J,KAAKyQ,gBAAgB5P,MAAkB,cAAgB,eAKjE,MAFAmS,GAAQlJ,GAAOjJ,EAERmS,kBAtLX3R,KAACC,EAAAA,UAADC,OACEC,SAAU,yUAXZH,KAAsCK,KAXtCL,KAAEI,EAAAA,aAcFJ,KAAQ4G,GAARrG,aAAAP,KA2CeW,EAAAA,WA3CfX,KA2C2BgE,EAAAA,SAjD3BhE,KAAEgS,EAAAA,SAEFhS,KAAQiS,EAAAA,iBACRjS,KAAoDM,wBA0BpD4R,MAAAlS,KAAEc,EAAAA,MAAFZ,MAAQ,iBACRiS,QAAAnS,KAAEc,EAAAA,MAAFZ,MAAQ,oBACRkS,QAAApS,KAAEc,EAAAA,MAAFZ,MAAQ,oBACRmS,QAAArS,KAAEc,EAAAA,MAAFZ,MAAQ,oBACRoS,QAAAtS,KAAEc,EAAAA,MAAFZ,MAAQ,oBACRqS,QAAAvS,KAAEc,EAAAA,MAAFZ,MAAQ,oBAERsS,UAAAxS,KAAEc,EAAAA,MAAFZ,MAAQ,uBACRuS,UAAAzS,KAAEc,EAAAA,MAAFZ,MAAQ,uBACRwS,UAAA1S,KAAEc,EAAAA,MAAFZ,MAAQ,uBACRyS,UAAA3S,KAAEc,EAAAA,MAAFZ,MAAQ,uBAER0S,UAAA5S,KAAEc,EAAAA,MAAFZ,MAAQ,uBACR2S,UAAA7S,KAAEc,EAAAA,MAAFZ,MAAQ,uBACR4S,UAAA9S,KAAEc,EAAAA,MAAFZ,MAAQ,uBACR6S,UAAA/S,KAAEc,EAAAA,MAAFZ,MAAQ,wBA7DR+O,GAsCwCrN,mBCyCtC,QAAFoR,GAAclR,EACAqD,EACkC8N,EACxB7N,GAHtB,GAAFhD,GAIIC,EAJJC,KAAA3D,KAIUmD,EAASqD,EAAOC,IAJ1BzG,WAEgDyD,GAAhD6Q,WAAgDA,EACxB7Q,EAAxBgD,WAAwBA,EAGpBhD,EAAK3C,YAAY,OAAQ,IACzB2C,EAAK3C,YAAY,SAAU,GAC3B2C,EAAK3C,YAAY,OAAQ,GAErBwT,IAGF7Q,EAAKmD,eAAiB0N,EAAWzN,QAAQC,UAAU,SAAC8K,GAElDnO,EAAKkN,gBAAgBiB,QA9F7B,MA4CmC/N,GAAnCwQ,EAAA3Q,GAYA3C,OAAAC,eAA6BqT,EAA7B1T,UAAA,cAAA,SAAoCmD,GAAU9D,KAAKc,YAAY,SAAUgD,oCACzE/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,YAAA,SAAkCmD,GAAY9D,KAAKc,YAAY,OAAQgD,oCAEvE/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,YAAA,SAAkCmD,GAAY9D,KAAKc,YAAY,OAAQgD,oCACvE/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,cAAA,SAAoCmD,GAAU9D,KAAKc,YAAY,SAAUgD,oCACzE/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,cAAA,SAAoCmD,GAAU9D,KAAKc,YAAY,SAAUgD,oCACzE/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,cAAA,SAAoCmD,GAAU9D,KAAKc,YAAY,SAAUgD,oCACzE/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,cAAA,SAAoCmD,GAAU9D,KAAKc,YAAY,SAAUgD,oCACzE/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,cAAA,SAAoCmD,GAAU9D,KAAKc,YAAY,SAAUgD,oCAEzE/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,gBAAA,SAAsCmD,GAAQ9D,KAAKc,YAAY,WAAYgD,oCAC3E/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,gBAAA,SAAsCmD,GAAQ9D,KAAKc,YAAY,WAAYgD,oCAC3E/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,gBAAA,SAAsCmD,GAAQ9D,KAAKc,YAAY,WAAYgD,oCAC3E/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,gBAAA,SAAsCmD,GAAQ9D,KAAKc,YAAY,WAAYgD,oCAE3E/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,gBAAA,SAAsCmD,GAAO9D,KAAKc,YAAY,WAAYgD,oCAC1E/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,gBAAA,SAAsCmD,GAAO9D,KAAKc,YAAY,WAAYgD,oCAC1E/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,gBAAA,SAAsCmD,GAAO9D,KAAKc,YAAY,WAAYgD,oCAC1E/C,OAAAC,eAA6BqT,EAA7B1T,UAAA,gBAAA,SAAsCmD,GAAO9D,KAAKc,YAAY,WAAYgD,oCA4BxEuQ,EAAF1T,UAAAyD,YAAE,SAAYC,IACa,MAAnBA,EAAc,MAAarE,KAAKmH,gBAClCnH,KAAKuU,gBAQTF,EAAF1T,UAAA8D,SAAE,WAAA,GAAFhB,GAAAzD,IACI0D,GAAJ/C,UAAU8D,SAAVd,KAAA3D,MAEIA,KAAKqH,4BAA4B,OAAQ,GAAI,SAAChD,GAC5CZ,EAAK8Q,aAAalQ,EAAQxD,SAE5Bb,KAAKuU,gBAGPF,EAAF1T,UAAAiE,YAAE,WACElB,EAAJ/C,UAAUiE,YAAVjB,KAAA3D,MACQA,KAAK4G,gBACP5G,KAAK4G,eAAeU,eASd+M,EAAZ1T,UAAAgQ,gBAAE,SAA0BiB,GACxB5R,KAAK0Q,QAAUkB,GAAa5R,KAAK0Q,SAAW,MAC5C1Q,KAAKuU,gBAGGF,EAAZ1T,UAAA4T,aAAE,SAAuB1T,GACrB,GAAI2T,GAAY3T,GAASb,KAAKiB,YAAY,SAAW,EACjDjB,MAAKmH,gBACPqN,EAAYxU,KAAKmH,cAAc3C,eAGjC,IAAIiQ,GAAQhU,OAAO+T,GAAWxK,QAAQ,IAAK,IACvC0K,EAAQC,EAAcF,EAAOzU,KAAKiB,YAAY,QAASjB,KAAKiB,YAAY,UAC5EjB,MAAKyH,qBAAqBzH,KAAK4U,eAAeC,MAAM7U,KAAM0U,KAOlDL,EAAZ1T,UAAAiU,eAAE,SAAyBE,EACAC,EACAN,GAEvB,GAAIlO,GAASvG,KAAKgV,kBAAkBhV,KAAKiV,eAAe,GACpDrD,EAAarL,EAAOyB,QAAQ,WAAa,EAAK,SAAW,MAEzDkN,EAAMC,EAAiBvD,GAAa,YAAc,aAClDwD,EAAMD,EAAiBvD,GAAa,YAAc,aAElDyD,EAAU5U,OAAOgU,GAAOzM,QAAQ,SAAW,EAC3CsN,EAAYD,GAAqB,QAATZ,EACxBc,EAAY9U,OAAOgU,GAAOzM,QAAQ,MAAQ,IAAMqN,EAChDG,EAAW/U,OAAOgU,GAAOzM,QAAQ,OAAS,GAAKvH,OAAOgU,GAAOzM,QAAQ,OAAS,GAChFvH,OAAOgU,GAAOzM,QAAQ,OAAS,GAAKvH,OAAOgU,GAAOzM,QAAQ,OAAS,EACjEyN,EAAOhV,OAAOgU,GAAOzM,QAAQ,OAAS,GAAKsN,EAE3CI,EAAWL,GAAWG,CAE1BV,GAAgB,KAARA,EAAe,EAAIA,EAC3BC,EAAoB,KAAVA,EAAiB,EAAIA,CAK/B,IAAIY,IAAWb,IAASC,EAEpB1F,KAcAuG,GACFC,YAAa,KACbC,aAAc,KACdC,YAAa,KACbC,aAAc,KAEhB,QAAQvB,GAAS,IACf,IAAK,GACHA,EAAQ,eACR,MACF,KAAK,UACL,IAAK,SACHK,EAAO,EACPL,EAAQ,MACR,MACF,KAAK,OACHA,EAAQ,MACR,MACF,KAAK,WACHM,EAAS,EACTN,EAAQ,MACR,MACF,KAAK,OACH,KACF,KAAK,OACHK,EAAO,EACPC,EAAS,EACTN,EAAQ,MACR,MACF,SAEOiB,GAAYH,GAAc3C,MAAK,KAClC6B,GAAgB,KAIJ,OAAVA,IACFiB,GAAU,GAGE,QAAVjB,IACFA,EAAQ,MAKRpF,EADEgG,EACIhK,EAAauK,GACjBK,YAAanB,EACboB,cAAenB,EACfoB,aAAcT,EAAUjB,EAAQ,SAG5BpJ,EAAauK,GACjBQ,KAAWtB,EAAvB,IAA+BC,EAA/B,KAAyCW,EAAUjB,EAAQ,UA2CvD,MApCMpF,GAAU,MAAKA,EAAI,eAErBA,EADEgG,EACIhK,EAAauK,GACjBK,YAAanB,EACboB,cAAenB,EACfoB,aAAc1B,IAGVpJ,EAAauK,GACjBQ,KAAWtB,EAArB,IAA6BC,EAA7B,IAAuCN,KAOrB,OAAVA,IACFpF,EAAI+F,GAAOO,GAAYF,GAAQX,EAAQL,EAAQ,KAC/CpF,EAAI6F,GAAOS,IAAaL,GAAaP,EAAUN,EAAQ,MAIpDpF,EAAI+F,IAAS/F,EAAI6F,KAElB7F,EADEgG,EACIhK,EAAauK,GACjBK,YAAanB,EACboB,cAAenB,EACfoB,aAAc1B,IAGVpJ,EAAauK,GACjBQ,KAAWtB,EAArB,IAA6BC,EAA7B,IAAuCN,KAK5BpJ,EAAagE,GAAMgH,aAAc,+BA7P5ChV,KAACC,EAAAA,UAADC,OAAYC,SAAU,oQAnBtBH,KAAsCK,KATtCL,KAAEI,EAAAA,aAaFJ,KAAQ4G,GAARrG,aAAAP,KA2DeW,EAAAA,WA3DfX,KA2D2BiV,EAAAA,aA/D3BjV,KAAoDM,wBAsCpDoT,SAAA1T,KAAGc,EAAAA,MAAHZ,MAAS,cACTuT,OAAAzT,KAAGc,EAAAA,MAAHZ,MAAS,YAET6U,OAAA/U,KAAGc,EAAAA,MAAHZ,MAAS,YACTgV,SAAAlV,KAAGc,EAAAA,MAAHZ,MAAS,eACTiV,SAAAnV,KAAGc,EAAAA,MAAHZ,MAAS,eACTkV,SAAApV,KAAGc,EAAAA,MAAHZ,MAAS,eACTmV,SAAArV,KAAGc,EAAAA,MAAHZ,MAAS,eACToV,SAAAtV,KAAGc,EAAAA,MAAHZ,MAAS,eAETqV,WAAAvV,KAAGc,EAAAA,MAAHZ,MAAS,kBACTsV,WAAAxV,KAAGc,EAAAA,MAAHZ,MAAS,kBACTuV,WAAAzV,KAAGc,EAAAA,MAAHZ,MAAS,kBACTwV,WAAA1V,KAAGc,EAAAA,MAAHZ,MAAS,kBAETyV,WAAA3V,KAAGc,EAAAA,MAAHZ,MAAS,kBACT0V,WAAA5V,KAAGc,EAAAA,MAAHZ,MAAS,kBACT2V,WAAA7V,KAAGc,EAAAA,MAAHZ,MAAS,kBACT4V,WAAA9V,KAAGc,EAAAA,MAAHZ,MAAS,mBA1ET8S,GA4CmCpR,mBCOjC,QAAFmU,GAAcjU,EACAqD,EACAC,GACd,MAAI/C,GAAJC,KAAA3D,KAAUmD,EAASqD,EAAOC,IAA1BzG,KAtDA,MA8BwC6D,GAAxCuT,EAAA1T,GAGA3C,OAAAC,eAAkCoW,EAAlCzW,UAAA,aAAA,SAAwCmD,GAAW9D,KAAKc,YAAY,QAASgD,oCAC7E/C,OAAAC,eAAkCoW,EAAlCzW,UAAA,eAAA,SAA0CmD,GAAS9D,KAAKc,YAAY,UAAWgD,oCAC/E/C,OAAAC,eAAkCoW,EAAlCzW,UAAA,eAAA,SAA0CmD,GAAS9D,KAAKc,YAAY,UAAWgD,oCAC/E/C,OAAAC,eAAkCoW,EAAlCzW,UAAA,eAAA,SAA0CmD,GAAS9D,KAAKc,YAAY,UAAWgD,oCAC/E/C,OAAAC,eAAkCoW,EAAlCzW,UAAA,eAAA,SAA0CmD,GAAS9D,KAAKc,YAAY,UAAWgD,oCAC/E/C,OAAAC,eAAkCoW,EAAlCzW,UAAA,eAAA,SAA0CmD,GAAS9D,KAAKc,YAAY,UAAWgD,oCAE/E/C,OAAAC,eAAkCoW,EAAlCzW,UAAA,iBAAA,SAA4CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACjF/C,OAAAC,eAAkCoW,EAAlCzW,UAAA,iBAAA,SAA4CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACjF/C,OAAAC,eAAkCoW,EAAlCzW,UAAA,iBAAA,SAA4CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACjF/C,OAAAC,eAAkCoW,EAAlCzW,UAAA,iBAAA,SAA4CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCAEjF/C,OAAAC,eAAkCoW,EAAlCzW,UAAA,iBAAA,SAA4CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACjF/C,OAAAC,eAAkCoW,EAAlCzW,UAAA,iBAAA,SAA4CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACjF/C,OAAAC,eAAkCoW,EAAlCzW,UAAA,iBAAA,SAA4CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACjF/C,OAAAC,eAAkCoW,EAAlCzW,UAAA,iBAAA,SAA4CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCAgB/EsT,EAAFzW,UAAAyD,YAAE,SAAYC,IACc,MAApBA,EAAe,OAAarE,KAAKmH,gBACnCnH,KAAK+G,oBAQTqQ,EAAFzW,UAAA8D,SAAE,WAAA,GAAFhB,GAAAzD,IACI0D,GAAJ/C,UAAU8D,SAAVd,KAAA3D,MAEIA,KAAKqH,4BAA4B,QAAS,IAAK,SAAChD,GAC9CZ,EAAKsD,iBAAiB1C,EAAQxD,SAEhCb,KAAK+G,oBAOGqQ,EAAZzW,UAAAoG,iBAAE,SAA2BlG,GACzBA,EAAQA,GAASb,KAAKiB,YAAY,UAAY,IAC1CjB,KAAKmH,gBACPtG,EAAQb,KAAKmH,cAAc3C,gBAG7BxE,KAAKyH,qBAAqBzH,KAAK0H,UAAU7G,KAIjCuW,EAAZzW,UAAA+G,UAAE,SAAoB7G,GAElB,MADAA,GAAQwW,SAASxW,EAAO,KAChByW,MAAO1E,MAAM/R,GAAS,EAAIA,mBA3EtCQ,KAACC,EAAAA,UAADC,OAAYC,SAAU,yUARtBH,KAAsCK,KAPtCL,KAAEI,EAAAA,aAOFJ,KAAoDM,wBAiBpD2V,QAAAjW,KAAGc,EAAAA,MAAHZ,MAAS,iBACTgW,UAAAlW,KAAGc,EAAAA,MAAHZ,MAAS,oBACTiW,UAAAnW,KAAGc,EAAAA,MAAHZ,MAAS,oBACTkW,UAAApW,KAAGc,EAAAA,MAAHZ,MAAS,oBACTmW,UAAArW,KAAGc,EAAAA,MAAHZ,MAAS,oBACToW,UAAAtW,KAAGc,EAAAA,MAAHZ,MAAS,oBAETqW,YAAAvW,KAAGc,EAAAA,MAAHZ,MAAS,uBACTsW,YAAAxW,KAAGc,EAAAA,MAAHZ,MAAS,uBACTuW,YAAAzW,KAAGc,EAAAA,MAAHZ,MAAS,uBACTwW,YAAA1W,KAAGc,EAAAA,MAAHZ,MAAS,uBAETyW,YAAA3W,KAAGc,EAAAA,MAAHZ,MAAS,uBACT0W,YAAA5W,KAAGc,EAAAA,MAAHZ,MAAS,uBACT2W,YAAA7W,KAAGc,EAAAA,MAAHZ,MAAS,uBACT4W,YAAA9W,KAAGc,EAAAA,MAAHZ,MAAS,wBAhDT6V,GA8BwCnU,mBCiCtC,QAAFmV,GAAcjV,EACAqD,EACkC8N,EAC1B7D,EACRhK,GAJZ,GAAFhD,GAKIC,EALJC,KAAA3D,KAKUmD,EAASqD,EAAOC,IAL1BzG,WAEgDyD,GAAhD6Q,WAAgDA,EAC1B7Q,EAAtBgN,gBAAsBA,EAqDtBhN,EAAAiN,QAAsB,MAjDlBjN,EAAKmN,kBACDnN,EAAKgN,gBAAgBI,OAAO/J,UAAUrD,EAAKsD,iBAAiBgE,KAAKtH,IAErEA,EAAK4U,oBAzET,MAyCyCxU,GAAzCuU,EAAA1U,GAIA3C,OAAAC,eAAmCoX,EAAnCzX,UAAA,cAAA,SAA0CmD,GAAW9D,KAAKc,YAAY,SAAUgD,oCAChF/C,OAAAC,eAAmCoX,EAAnCzX,UAAA,gBAAA,SAA4CmD,GAAS9D,KAAKc,YAAY,WAAYgD,oCAClF/C,OAAAC,eAAmCoX,EAAnCzX,UAAA,gBAAA,SAA4CmD,GAAS9D,KAAKc,YAAY,WAAYgD,oCAClF/C,OAAAC,eAAmCoX,EAAnCzX,UAAA,gBAAA,SAA4CmD,GAAS9D,KAAKc,YAAY,WAAYgD,oCAClF/C,OAAAC,eAAmCoX,EAAnCzX,UAAA,gBAAA,SAA4CmD,GAAS9D,KAAKc,YAAY,WAAYgD,oCAClF/C,OAAAC,eAAmCoX,EAAnCzX,UAAA,gBAAA,SAA4CmD,GAAS9D,KAAKc,YAAY,WAAYgD,oCAElF/C,OAAAC,eAAmCoX,EAAnCzX,UAAA,kBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCACpF/C,OAAAC,eAAmCoX,EAAnCzX,UAAA,kBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCACpF/C,OAAAC,eAAmCoX,EAAnCzX,UAAA,kBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCACpF/C,OAAAC,eAAmCoX,EAAnCzX,UAAA,kBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCAEpF/C,OAAAC,eAAmCoX,EAAnCzX,UAAA,kBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCACpF/C,OAAAC,eAAmCoX,EAAnCzX,UAAA,kBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCACpF/C,OAAAC,eAAmCoX,EAAnCzX,UAAA,kBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCACpF/C,OAAAC,eAAmCoX,EAAnCzX,UAAA,kBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,aAAcgD,oCAuBlFsU,EAAFzX,UAAAyD,YAAE,SAAYC,IACe,MAArBA,EAAgB,QAAarE,KAAKmH,gBACpCnH,KAAK+G,oBAOTqR,EAAFzX,UAAAiE,YAAE,WACElB,EAAJ/C,UAAUiE,YAAVjB,KAAA3D,MACQA,KAAK4G,gBACP5G,KAAK4G,eAAeU,cAElBtH,KAAK4Q,mBACP5Q,KAAK4Q,kBAAkBtJ,eAQ3B8Q,EAAFzX,UAAA8D,SAAE,WAAA,GAAFhB,GAAAzD,IACI0D,GAAJ/C,UAAU8D,SAAVd,KAAA3D,MAEIA,KAAKqH,4BAA4B,SAAU,EAAI,SAAChD,GAC9CZ,EAAKsD,iBAAiB1C,EAAQxD,UAqBxBuX,EAAZzX,UAAA0X,gBAAE,WAAA,GAAF5U,GAAAzD,IACQA,MAAKsU,aAEPtU,KAAK4G,eAAiB5G,KAAKsU,WAAWzN,QAAQC,UAAU,SAAC8K,GAEvDnO,EAAKkN,gBAAgBiB,OASjBwG,EAAZzX,UAAAgQ,gBAAE,SAA0BiB,GACxB5R,KAAK0Q,QAAUkB,GAAa5R,KAAK0Q,SAAW,MAC5C1Q,KAAK+G,oBAQGqR,EAAZzX,UAAAoG,iBAAE,SAA2BlG,GACzBA,EAAQA,GAASb,KAAKiB,YAAY,WAAa,EAC3CjB,KAAKmH,gBACPtG,EAAQb,KAAKmH,cAAc3C,gBAG7BxE,KAAKyH,qBAAqBzH,KAAK0H,UAAU7G,KAGjCuX,EAAZzX,UAAA+G,UAAE,SAAoB4Q,GAClB,GAAI/C,GAAY9U,OAAO6X,GAAQtQ,QAAQ,MAAQ,CACpCvH,QAAO6X,GAAQtQ,QAAQ,OAAS,GAC7BuN,GAAc3C,MAAM0F,KAChCA,GAAkB,IAIpB,IAAMC,GAAuC,QAA/BvY,KAAKyQ,gBAAgB5P,MAC7B0F,EAASvG,KAAKgV,kBAAkBhV,KAAKiV,eAAe,GACpDuD,EAAsBD,EAAQ,eAAiB,aAErD,OAAOpD,GAAiB5O,IAA5BkS,KAAuCA,EAACD,GAAsB,GAAGF,EAAjEG,IACuCtF,aAAc,GAAGmF,yBA9IxDjX,KAACC,EAAAA,UAADC,OAAYC,SAAU,uVAbtBH,KAAEK,KAbFL,KAAEI,EAAAA,aAmBFJ,KAAQ4G,GAARrG,aAAAP,KAqCeW,EAAAA,WArCfX,KAqC2BiV,EAAAA,aA/C3BjV,KAAQiS,EAAAA,iBAMRjS,KAAEM,wBAqBF2W,SAAAjX,KAAGc,EAAAA,MAAHZ,MAAS,kBACTmX,WAAArX,KAAGc,EAAAA,MAAHZ,MAAS,qBACToX,WAAAtX,KAAGc,EAAAA,MAAHZ,MAAS,qBACTqX,WAAAvX,KAAGc,EAAAA,MAAHZ,MAAS,qBACTsX,WAAAxX,KAAGc,EAAAA,MAAHZ,MAAS,qBACTuX,WAAAzX,KAAGc,EAAAA,MAAHZ,MAAS,qBAETwX,aAAA1X,KAAGc,EAAAA,MAAHZ,MAAS,wBACTyX,aAAA3X,KAAGc,EAAAA,MAAHZ,MAAS,wBACT0X,aAAA5X,KAAGc,EAAAA,MAAHZ,MAAS,wBACT2X,aAAA7X,KAAGc,EAAAA,MAAHZ,MAAS,wBAET4X,aAAA9X,KAAGc,EAAAA,MAAHZ,MAAS,wBACT6X,aAAA/X,KAAGc,EAAAA,MAAHZ,MAAS,wBACT8X,aAAAhY,KAAGc,EAAAA,MAAHZ,MAAS,wBACT+X,aAAAjY,KAAGc,EAAAA,MAAHZ,MAAS,yBA5DT6W,GAyCyCnV,mBCYvC,QAAFsW,GAAcpW,EACAqD,EACAC,GACd,MAAI/C,GAAJC,KAAA3D,KAAUmD,EAASqD,EAAOC,IAA1BzG,KAxDA,MAgCwC6D,GAAxC0V,EAAA7V,GAGA3C,OAAAC,eAAkCuY,EAAlC5Y,UAAA,aAAA,SAAwCmD,GAAQ9D,KAAKc,YAAY,QAASgD,oCAC1E/C,OAAAC,eAAkCuY,EAAlC5Y,UAAA,eAAA,SAA0CmD,GAAQ9D,KAAKc,YAAY,UAAWgD,oCAC9E/C,OAAAC,eAAkCuY,EAAlC5Y,UAAA,eAAA,SAA0CmD,GAAQ9D,KAAKc,YAAY,UAAWgD,oCAC9E/C,OAAAC,eAAkCuY,EAAlC5Y,UAAA,eAAA,SAA0CmD,GAAQ9D,KAAKc,YAAY,UAAWgD,oCAC9E/C,OAAAC,eAAkCuY,EAAlC5Y,UAAA,eAAA,SAA0CmD,GAAQ9D,KAAKc,YAAY,UAAWgD,oCAC9E/C,OAAAC,eAAkCuY,EAAlC5Y,UAAA,eAAA,SAA0CmD,GAAQ9D,KAAKc,YAAY,UAAWgD,oCAE9E/C,OAAAC,eAAkCuY,EAAlC5Y,UAAA,iBAAA,SAA4CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACjF/C,OAAAC,eAAkCuY,EAAlC5Y,UAAA,iBAAA,SAA4CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACjF/C,OAAAC,eAAkCuY,EAAlC5Y,UAAA,iBAAA,SAA4CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACjF/C,OAAAC,eAAkCuY,EAAlC5Y,UAAA,iBAAA,SAA4CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCAEjF/C,OAAAC,eAAkCuY,EAAlC5Y,UAAA,iBAAA,SAA4CmD,GAAQ9D,KAAKc,YAAY,YAAagD,oCAClF/C,OAAAC,eAAkCuY,EAAlC5Y,UAAA,iBAAA,SAA4CmD,GAAQ9D,KAAKc,YAAY,YAAagD,oCAClF/C,OAAAC,eAAkCuY,EAAlC5Y,UAAA,iBAAA,SAA4CmD,GAAQ9D,KAAKc,YAAY,YAAagD,oCAClF/C,OAAAC,eAAkCuY,EAAlC5Y,UAAA,iBAAA,SAA4CmD,GAAQ9D,KAAKc,YAAY,YAAagD,oCAiBhFyV,EAAF5Y,UAAAyD,YAAE,SAAYC,IACc,MAApBA,EAAe,OAAarE,KAAKmH,gBACnCnH,KAAK+G,oBAQTwS,EAAF5Y,UAAA8D,SAAE,WAAA,GAAFhB,GAAAzD,IACI0D,GAAJ/C,UAAU8D,SAAVd,KAAA3D,MAEIA,KAAKqH,4BAA4B,QAAS,UAAW,SAAChD,GACpDZ,EAAKsD,iBAAiB1C,EAAQxD,SAEhCb,KAAK+G,oBAOGwS,EAAZ5Y,UAAAoG,iBAAE,SAA2BlG,GACzBA,EAAQA,GAASb,KAAKiB,YAAY,UAAY,UAC1CjB,KAAKmH,gBACPtG,EAAQb,KAAKmH,cAAc3C,gBAG7BxE,KAAKyH,qBAAqBzH,KAAK0H,UAAU7G,KAGjC0Y,EAAZ5Y,UAAA+G,UAAE,SAAoB8R,GAClB,GAAInK,KAGJ,QAAQmK,GACN,IAAK,QACHnK,EAAI,cAAgB,YACpB,MACF,KAAK,MACHA,EAAI,cAAgB,UACpB,MACF,SACEA,EAAI,cAAgBmK,EAIxB,MAAOnK,mBA3FXhO,KAACC,EAAAA,UAADC,OACEC,SAAU,yUATZH,KAAsCK,KAPtCL,KAAEI,EAAAA,aAOFJ,KAAoDM,wBAmBpD6X,QAAAnY,KAAGc,EAAAA,MAAHZ,MAAS,iBACTkY,UAAApY,KAAGc,EAAAA,MAAHZ,MAAS,oBACTmY,UAAArY,KAAGc,EAAAA,MAAHZ,MAAS,oBACToY,UAAAtY,KAAGc,EAAAA,MAAHZ,MAAS,oBACTqY,UAAAvY,KAAGc,EAAAA,MAAHZ,MAAS,oBACTsY,UAAAxY,KAAGc,EAAAA,MAAHZ,MAAS,oBAETuY,YAAAzY,KAAGc,EAAAA,MAAHZ,MAAS,uBACTwY,YAAA1Y,KAAGc,EAAAA,MAAHZ,MAAS,uBACTyY,YAAA3Y,KAAGc,EAAAA,MAAHZ,MAAS,uBACT0Y,YAAA5Y,KAAGc,EAAAA,MAAHZ,MAAS,uBAET2Y,YAAA7Y,KAAGc,EAAAA,MAAHZ,MAAS,uBACT4Y,YAAA9Y,KAAGc,EAAAA,MAAHZ,MAAS,uBACT6Y,YAAA/Y,KAAGc,EAAAA,MAAHZ,MAAS,uBACT8Y,YAAAhZ,KAAGc,EAAAA,MAAHZ,MAAS,wBAlDTgY,GAgCwCtW,ICrBlCqX,IACJC,OAAU,EACVC,MAAS,OACTC,OAAU,OACV1E,YAAa,OACbC,aAAc,uBAcd,QAAF0E,GAAcvX,EACOqD,EACPC,GAFZ,GAAFhD,GAGIC,EAHJC,KAAA3D,KAGUmD,EAASqD,EAAOC,IAH1BzG,WACqByD,GAArB+C,MAAqBA,EAGjB/C,EAAKgE,qBAAqB6S,MAlC9B,MA6BuCzW,GAAvC6W,EAAAhX,kBAJArC,KAACC,EAAAA,UAADC,OAAYC,SAAU,0EAjBtBH,KAAyBK,KADzBL,KAAmBI,EAAAA,aACnBJ,KAAuCM,MARvC+Y,GA6BuCzX,mBCmCrC,QAAF0X,GACMxX,EACAqD,EACoB+J,EACpB9J,GAJJ,GAAFhD,GAKIC,EALJC,KAAA3D,KAKUmD,EAASqD,EAAOC,IAL1BzG,WAtBAyD,GAAAiN,QAAsB,MA6BdH,IACF9M,EAAKmD,eAAiB2J,EAAU1J,QAAQC,UAAUrD,EAAKkN,gBAAgB5F,KAAKtH,OAxElF,MAwC0CI,GAA1C8W,EAAAjX,GAMA3C,OAAAC,eAAoC2Z,EAApCha,UAAA,aAAA,SAA0CmD,GAAW9D,KAAKc,YAAY,QAASgD,oCAC/E/C,OAAAC,eAAoC2Z,EAApCha,UAAA,eAAA,SAA4CmD,GAAS9D,KAAKc,YAAY,UAAWgD,oCACjF/C,OAAAC,eAAoC2Z,EAApCha,UAAA,eAAA,SAA4CmD,GAAS9D,KAAKc,YAAY,UAAWgD,oCACjF/C,OAAAC,eAAoC2Z,EAApCha,UAAA,eAAA,SAA4CmD,GAAS9D,KAAKc,YAAY,UAAWgD,oCACjF/C,OAAAC,eAAoC2Z,EAApCha,UAAA,eAAA,SAA4CmD,GAAS9D,KAAKc,YAAY,UAAWgD,oCACjF/C,OAAAC,eAAoC2Z,EAApCha,UAAA,eAAA,SAA4CmD,GAAS9D,KAAKc,YAAY,UAAWgD,oCAEjF/C,OAAAC,eAAoC2Z,EAApCha,UAAA,iBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACnF/C,OAAAC,eAAoC2Z,EAApCha,UAAA,iBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACnF/C,OAAAC,eAAoC2Z,EAApCha,UAAA,iBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACnF/C,OAAAC,eAAoC2Z,EAApCha,UAAA,iBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCAEnF/C,OAAAC,eAAoC2Z,EAApCha,UAAA,iBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACnF/C,OAAAC,eAAoC2Z,EAApCha,UAAA,iBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACnF/C,OAAAC,eAAoC2Z,EAApCha,UAAA,iBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCACnF/C,OAAAC,eAAoC2Z,EAApCha,UAAA,iBAAA,SAA8CmD,GAAO9D,KAAKc,YAAY,YAAagD,oCAmBjF6W,EAAFha,UAAAyD,YAAE,SAAYC,IACc,MAApBA,EAAe,OAAarE,KAAKmH,gBACnCnH,KAAK+G,oBAQT4T,EAAFha,UAAA8D,SAAE,WAAA,GAAFhB,GAAAzD,IACI0D,GAAJ/C,UAAU8D,SAAVd,KAAA3D,MAEIA,KAAKqH,4BAA4B,QAAS,gBAAiB,SAAChD,GAC1DZ,EAAKsD,iBAAiB1C,EAAQxD,SAEhCb,KAAK+G,oBAGP4T,EAAFha,UAAAiE,YAAE,WACElB,EAAJ/C,UAAUiE,YAAVjB,KAAA3D,MACSA,KAAK4G,gBACR5G,KAAK4G,eAAeU,eAWdqT,EAAZha,UAAAoG,iBAAE,SAA2BlG,GACzBA,EAAQA,GAASb,KAAKiB,YAAY,UAAY,gBAC1CjB,KAAKmH,gBACPtG,EAAQb,KAAKmH,cAAc3C,gBAG7BxE,KAAKyH,qBAAqBzH,KAAK0H,UAAU7G,IACzCb,KAAK4a,iBAAiB/Z,EAAQb,KAAK0Q,QAAkB1Q,KAAK0Q,QAAb,QAMrCiK,EAAZha,UAAAgQ,gBAAE,SAA0BiB,GAA1B,GAAFnO,GAAAzD,IACIA,MAAK0Q,SAAWkB,GAAa,IAAIC,cAC5BC,GAAcC,KAAK,SAAAC,GAAK,MAAAA,KAAMvO,EAAKiN,YACtC1Q,KAAK0Q,QAAU,MAGjB,IAAI7P,GAAQb,KAAKiB,YAAY,UAAY,eACrCjB,MAAKmH,gBACPtG,EAAQb,KAAKmH,cAAc3C,gBAE7BxE,KAAK4a,iBAAiB/Z,EAAOb,KAAK0Q,SAAW,QAGrCiK,EAAZha,UAAA+G,UAAE,SAAoB8R,GAClB,GAAInK,MAARoJ,EAAAe,EAAAqB,MAAA,KAAmBC,EAAnBrC,EAAA,GAA8BsC,EAA9BtC,EAAA,EAGI,QAAQqC,GACN,IAAK,SACHzL,EAAI,mBAAqB,QACzB,MACF,KAAK,eACHA,EAAI,mBAAqB,cACzB,MACF,KAAK,gBACHA,EAAI,mBAAqB,eACzB,MACF,KAAK,eACHA,EAAI,mBAAqB,cACzB,MACF,KAAK,MACL,IAAK,WACHA,EAAI,mBAAqB,UACzB,MACF,KAAK,QACL,IAAK,aACL,QACEA,EAAI,mBAAqB,aAK7B,OAAQ0L,GACN,IAAK,QACL,IAAK,aACH1L,EAAI,eAAiBA,EAAI,iBAAmB,YAC5C,MACF,KAAK,WACHA,EAAI,eAAiB,UACrB,MACF,KAAK,SACHA,EAAI,eAAiBA,EAAI,iBAAmB,QAC5C,MACF,KAAK,MACL,IAAK,WACHA,EAAI,eAAiBA,EAAI,iBAAmB,UAC5C,MACF,KAAK,UACL,QACEA,EAAI,eAAiBA,EAAI,iBAAmB,UAIhD,MAAOhE,GAAagE,GAClBvH,QAAY,OACZkT,iBAAmBhb,KAAK0Q,SAAW,MACnC2F,aAAe,gBASTsE,EAAZha,UAAAia,iBAAE,SAA2BpB,EAAOjT,GAGd,WAFtBiT,EAAAqB,MAAA,KAAA,IAIM7a,KAAKyH,sBACH4O,aAAc,aACdR,YAAcV,EAAiB5O,GAAmB,KAAT,OACzCuP,aAAcX,EAAiB5O,GAAU,OAAS,uBA/K1DlF,KAACC,EAAAA,UAADC,OAAYC,SAAU,oWAhBtBH,KAAsCK,KATtCL,KAAEI,EAAAA,aAaFJ,KAAQ4G,GAARrG,aAAAP,KA6COW,EAAAA,WA7CPX,KA6CmBgE,EAAAA,SAjDnBhE,KAAoDM,wBA4BpD6X,QAAAnY,KAAGc,EAAAA,MAAHZ,MAAS,mBACTkY,UAAApY,KAAGc,EAAAA,MAAHZ,MAAS,sBACTmY,UAAArY,KAAGc,EAAAA,MAAHZ,MAAS,sBACToY,UAAAtY,KAAGc,EAAAA,MAAHZ,MAAS,sBACTqY,UAAAvY,KAAGc,EAAAA,MAAHZ,MAAS,sBACTsY,UAAAxY,KAAGc,EAAAA,MAAHZ,MAAS,sBAET2Y,YAAA7Y,KAAGc,EAAAA,MAAHZ,MAAS,yBACT4Y,YAAA9Y,KAAGc,EAAAA,MAAHZ,MAAS,yBACT6Y,YAAA/Y,KAAGc,EAAAA,MAAHZ,MAAS,yBACT8Y,YAAAhZ,KAAGc,EAAAA,MAAHZ,MAAS,yBAETuY,YAAAzY,KAAGc,EAAAA,MAAHZ,MAAS,yBACTwY,YAAA1Y,KAAGc,EAAAA,MAAHZ,MAAS,yBACTyY,YAAA3Y,KAAGc,EAAAA,MAAHZ,MAAS,yBACT0Y,YAAA5Y,KAAGc,EAAAA,MAAHZ,MAAS,0BA7DToZ,GAwC0C1X,ICbpC2J,IACJ3E,GACAqI,GACAqK,GACAtG,GACA+C,GACAgB,GACAsC,GACAnB,gCAnCF,sBA4CAlY,KAACwL,EAAAA,SAADtL,OACEuL,SAAUC,GAAYkO,EAAAA,YACtBjO,aAAkBJ,GAApBK,QACEC,QAAaN,GAAfK,QACEE,WACEC,GACAzL,GACA0L,GACAC,8CApDJ6B,oBlBgEE,QAAFzO,GAAwBwa,EACAC,EACAhb,EACqBF,EACaC,GAJxD,GAAFuD,GAKIC,EALJC,KAAA3D,KAKUmb,EAAUD,EAAQ/a,IAL5BH,WAAwByD,GAAxByX,OAAwBA,EACAzX,EAAxB0X,SAAwBA,EACA1X,EAAxBtD,QAAwBA,EACqBsD,EAA7CxD,YAA6CA,EACawD,EAA1DvD,oBAA0DA,EAEtDuD,EAAK3C,YAAY,MAAOoa,EAAO7a,cAAc+a,aAAa,QAAU,IAChErb,EAAAA,iBAAiB0D,EAAKxD,cAAgBwD,EAAKvD,qBAC7CuD,EAAKpD,cAAcG,aAAa,MAAO,MAxE7C,MA0CqCqD,GAArCnD,EAAAgD,GAGA3C,OAAAC,eAA2BN,EAA3BC,UAAA,eAAA,SAAmCmD,GAAO9D,KAAKY,gBAAgBkD,oCAE/D/C,OAAAC,eAA2BN,EAA3BC,UAAA,aAAA,SAAiCmD,GAAS9D,KAAKc,YAAY,QAASgD,oCACpE/C,OAAAC,eAA2BN,EAA3BC,UAAA,aAAA,SAAiCmD,GAAS9D,KAAKc,YAAY,QAASgD,oCACpE/C,OAAAC,eAA2BN,EAA3BC,UAAA,aAAA,SAAiCmD,GAAS9D,KAAKc,YAAY,QAASgD,oCACpE/C,OAAAC,eAA2BN,EAA3BC,UAAA,aAAA,SAAiCmD,GAAS9D,KAAKc,YAAY,QAASgD,oCACpE/C,OAAAC,eAA2BN,EAA3BC,UAAA,aAAA,SAAiCmD,GAAS9D,KAAKc,YAAY,QAASgD,oCAEpE/C,OAAAC,eAA2BN,EAA3BC,UAAA,eAAA,SAAmCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCACtE/C,OAAAC,eAA2BN,EAA3BC,UAAA,eAAA,SAAmCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCACtE/C,OAAAC,eAA2BN,EAA3BC,UAAA,eAAA,SAAmCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCACtE/C,OAAAC,eAA2BN,EAA3BC,UAAA,eAAA,SAAmCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCAEtE/C,OAAAC,eAA2BN,EAA3BC,UAAA,eAAA,SAAmCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCACtE/C,OAAAC,eAA2BN,EAA3BC,UAAA,eAAA,SAAmCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCACtE/C,OAAAC,eAA2BN,EAA3BC,UAAA,eAAA,SAAmCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCACtE/C,OAAAC,eAA2BN,EAA3BC,UAAA,eAAA,SAAmCmD,GAAO9D,KAAKc,YAAY,UAAWgD,oCAkBpEpD,EAAFC,UAAA8D,SAAE,WAAA,GAAFhB,GAAAzD,IACI0D,GAAJ/C,UAAU8D,SAAVd,KAAA3D,MAEQA,KAAKqb,mBAEPrb,KAAKqH,4BAA4B,MAAOrH,KAAKsb,WAAY,WACvD7X,EAAK8X,kBAGTvb,KAAKub,iBAMP7a,EAAFC,UAAAyD,YAAE,WACMpE,KAAKkH,gBACPlH,KAAKub,iBAYC7a,EAAZC,UAAA4a,cAAE,WACE,GAAIvb,KAAKqb,kBAAmB,CAC1B,GAAI9a,GAAMP,KAAKwb,gBAAkBxb,KAAKsb;0CAClCvb,GAAAA,iBAAiBC,KAAKC,cAAgBD,KAAKE,oBAC7CF,KAAKG,QAAQC,oBAAoBJ,KAAKK,eAAgBC,QAAWC,EAAM,OAAOA,EAAtF,IAA+F,KAEvFP,KAAKK,cAAcG,aAAa,MAAOC,OAAOF,MAW1CG,EAAZC,UAAAC,gBAAE,SAA0BC,GACxBb,KAAKc,YAAY,MAAOD,GAAS,KAMnCE,OAAFC,eAAgBN,EAAhBC,UAAA,kBAAE,WACE,MAAOX,MAAKiB,YAAY,QAAU,oCAOpCF,OAAFC,eAAgBN,EAAhBC,UAAA,yBAAE,WACE,MAAOI,QAAOG,KAAKlB,KAAKmB,WAAWC,OAAS,kDA1GhDC,KAACC,EAAAA,UAADC,OACEC,SAAU,iQA3BZH,KAAEI,EAAAA,aAWFJ,KAAEK,KAEFL,KAAEM,KA6CFN,KAAAN,OAAAa,aAAAP,KAAeQ,EAAAA,OAAfN,MAAsBO,EAAAA,iBACtBT,SAAAU,GAAAH,aAAAP,KAAeW,EAAAA,WAAfX,KAA2BQ,EAAAA,OAA3BN,MAAkCU,2BAvBlCC,UAAAb,KAAGc,EAAAA,MAAHZ,MAAS,SAETa,QAAAf,KAAGc,EAAAA,MAAHZ,MAAS,YACTc,QAAAhB,KAAGc,EAAAA,MAAHZ,MAAS,YACTe,QAAAjB,KAAGc,EAAAA,MAAHZ,MAAS,YACTgB,QAAAlB,KAAGc,EAAAA,MAAHZ,MAAS,YACTiB,QAAAnB,KAAGc,EAAAA,MAAHZ,MAAS,YAETkB,UAAApB,KAAGc,EAAAA,MAAHZ,MAAS,eACTmB,UAAArB,KAAGc,EAAAA,MAAHZ,MAAS,eACToB,UAAAtB,KAAGc,EAAAA,MAAHZ,MAAS,eACTqB,UAAAvB,KAAGc,EAAAA,MAAHZ,MAAS,eAETsB,UAAAxB,KAAGc,EAAAA,MAAHZ,MAAS,eACTuB,UAAAzB,KAAGc,EAAAA,MAAHZ,MAAS,eACTwB,UAAA1B,KAAGc,EAAAA,MAAHZ,MAAS,eACTyB,UAAA3B,KAAGc,EAAAA,MAAHZ,MAAS,gBA7DTb,GA0CqCuC,mBCiDnC,QAAFC,GAAwBC,EACAC,EACAC,EACAC,EACAC,EACkBC,EAClBrD,GANtB,GAAFsD,GAOIC,EAPJC,KAAA3D,KAOUmD,EAASG,EAAOnD,IAP1BH,WAAwByD,GAAxBN,QAAwBA,EACAM,EAAxBL,iBAAwBA,EACAK,EAAxBJ,iBAAwBA,EACAI,EAAxBH,MAAwBA,EACAG,EAAxBF,UAAwBA,EACkBE,EAA1CD,iBAA0CA,EAClBC,EAAxBtD,QAAwBA,EAEpBsD,EAAKG,uBAnGT,MA+CoCC,GAApCX,EAAAQ,GASA3C,OAAAC,eAAMkC,EAANvC,UAAA,mBAAA,SAAkBmD,GAEd9D,KAAK+D,MAAMC,WADC,UACeF,GAAK,GAChC9D,KAAKwD,iBAAiBS,QAAUjE,KAAK+D,MAAMG,WAF/B,4CAUhBnD,OAAAC,eAAMkC,EAANvC,UAAA,aAAA,SAAYmD,GAER9D,KAAK+D,MAAMC,WADC,QACeF,GAC3B9D,KAAKwD,iBAAiBW,MAAQL,mCAIlC/C,OAAAC,eAA8BkC,EAA9BvC,UAAA,iBAAA,SAAwCmD,GAAsB9D,KAAK+D,MAAMC,WAAW,YAAeF,GAAK,oCACxG/C,OAAAC,eAA8BkC,EAA9BvC,UAAA,iBAAA,SAAwCmD,GAAsB9D,KAAK+D,MAAMC,WAAW,YAAeF,GAAK,oCACxG/C,OAAAC,eAA8BkC,EAA9BvC,UAAA,iBAAA,SAAwCmD,GAAsB9D,KAAK+D,MAAMC,WAAW,YAAeF,GAAK,oCACxG/C,OAAAC,eAA8BkC,EAA9BvC,UAAA,iBAAA,SAAwCmD,GAAsB9D,KAAK+D,MAAMC,WAAW,YAAeF,GAAK,oCACxG/C,OAAAC,eAA8BkC,EAA9BvC,UAAA,iBAAA,SAAwCmD,GAAsB9D,KAAK+D,MAAMC,WAAW,YAAeF,GAAK,oCAExG/C,OAAAC,eAA8BkC,EAA9BvC,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCACxG/C,OAAAC,eAA8BkC,EAA9BvC,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCACxG/C,OAAAC,eAA8BkC,EAA9BvC,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCACxG/C,OAAAC,eAA8BkC,EAA9BvC,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCAExG/C,OAAAC,eAA8BkC,EAA9BvC,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCACxG/C,OAAAC,eAA8BkC,EAA9BvC,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCACxG/C,OAAAC,eAA8BkC,EAA9BvC,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCACxG/C,OAAAC,eAA8BkC,EAA9BvC,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCAqBtGZ,EAAFvC,UAAAyD,YAAE,SAAYC,GACNrE,KAAK+D,MAAMO,YAAaD,KAC1BrE,KAAKwD,iBAAiBS,QAAUjE,KAAK+D,MAAMQ,aAAaC,gBAAkB,KAI9EtB,EAAFvC,UAAA8D,SAAE,WACEzE,KAAK0E,wBAMPxB,EAAFvC,UAAAgE,UAAE,WACE3E,KAAKwD,iBAAiBmB,aAGxBzB,EAAFvC,UAAAiE,YAAE,WACE5E,KAAK+D,MAAMa,oBACJ5E,MAAKwD,kBAWJN,EAAZvC,UAAAiD,mBAAE,WACE5D,KAAK+D,MAAQ,GAAIc,IACf,UACA7E,KAAKmD,QACLnD,KAAKsD,MACLtD,KAAKG,SAEFH,KAAKwD,mBAGRxD,KAAKwD,iBAAmB,GAAIsB,GAAAA,QACxB9E,KAAKoD,iBAAkBpD,KAAKqD,iBAAkBrD,KAAKsD,MAAOtD,KAAKuD,aAW7DL,EAAZvC,UAAA+D,qBAAE,SAA+BK,GAA/B,GAAFtB,GAAAzD,SAAA,KAAA+E,IAAiCA,EAAjC,UACI,IAAMC,GAAgBhF,KAAK+D,MAAMG,WAAWa,EAC5C/E,MAAK+D,MAAMkB,2BAA2BF,EAASC,EAAe,SAACX,GAC7DZ,EAAKD,iBAAiBS,QAAUI,EAAQxD,OAAS,GACjD4C,EAAKD,iBAAiBmB,8BA7H5BtD,KAACC,EAAAA,UAADC,OACEC,SAAU,2QAdZH,KAAEK,KAfFL,KAAE6D,EAAAA,kBACF7D,KAAE8D,EAAAA,kBAHF9D,KAAEI,EAAAA,aAOFJ,KAAE+D,EAAAA,YAKF/D,KAAQyD,EAAAA,QAARlD,aAAAP,KA0EeW,EAAAA,WA1EfX,KA0E2BgE,EAAAA,SApE3BhE,KAAEM,wBA2BF2D,cAAAjE,KAAGc,EAAAA,MAAHZ,MAAS,aAWTgE,QAAAlE,KAAGc,EAAAA,MAAHZ,MAAS,WAQTiE,YAAAnE,KAAGc,EAAAA,MAAHZ,MAAS,gBACTkE,YAAApE,KAAGc,EAAAA,MAAHZ,MAAS,gBACTmE,YAAArE,KAAGc,EAAAA,MAAHZ,MAAS,gBACToE,YAAAtE,KAAGc,EAAAA,MAAHZ,MAAS,gBACTqE,YAAAvE,KAAGc,EAAAA,MAAHZ,MAAS,gBAETsE,cAAAxE,KAAGc,EAAAA,MAAHZ,MAAS,mBACTuE,cAAAzE,KAAGc,EAAAA,MAAHZ,MAAS,mBACTwE,cAAA1E,KAAGc,EAAAA,MAAHZ,MAAS,mBACTyE,cAAA3E,KAAGc,EAAAA,MAAHZ,MAAS,mBAET0E,cAAA5E,KAAGc,EAAAA,MAAHZ,MAAS,mBACT2E,cAAA7E,KAAGc,EAAAA,MAAHZ,MAAS,mBACT4E,cAAA9E,KAAGc,EAAAA,MAAHZ,MAAS,mBACT6E,cAAA/E,KAAGc,EAAAA,MAAHZ,MAAS,oBAxFT2B,GA+CoCD,ICf9BoD,IAAS,SAAS,EAAO,kBA4E7B,QAAFC,GAAcnD,EAC8BoD,EACpBC,EACAC,EACqBC,EACaC,GALxD,GAAFlD,GAOIC,EAPJC,KAAA3D,KAOUmD,EAASqD,EAAOC,IAP1BzG,WAC4CyD,GAA5C8C,OAA4CA,EACpB9C,EAAxB+C,MAAwBA,EACA/C,EAAxBgD,WAAwBA,EACqBhD,EAA7CiD,WAA6CA,EACajD,EAA1DkD,mBAA0DA,EAIlDJ,IAKF9C,EAAKmD,eAAiBL,EAAOM,QAAQC,UAAU,WAAM,MAAArD,GAAKsD,wBA1HhE,MA6DuClD,GAAvCyC,EAAA5C,GASA3C,OAAAC,eAA6BsF,EAA7B3F,UAAA,YAAA,SAAkCmD,GAAQ9D,KAAKc,YAAY,OAAQgD,oCACnE/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,cAAA,SAAoCmD,GAAM9D,KAAKc,YAAY,SAAUgD,oCACrE/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,cAAA,SAAoCmD,GAAM9D,KAAKc,YAAY,SAAUgD,oCACrE/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,cAAA,SAAoCmD,GAAM9D,KAAKc,YAAY,SAAUgD,oCACrE/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,cAAA,SAAoCmD,GAAM9D,KAAKc,YAAY,SAAUgD,oCACrE/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,cAAA,SAAoCmD,GAAM9D,KAAKc,YAAY,SAAUgD,oCAErE/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAO9D,KAAKc,YAAY,WAAYgD,oCAC1E/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAO9D,KAAKc,YAAY,WAAYgD,oCAC1E/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAO9D,KAAKc,YAAY,WAAYgD,oCAC1E/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAO9D,KAAKc,YAAY,WAAYgD,oCAE1E/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAM9D,KAAKc,YAAY,WAAYgD,oCACzE/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAM9D,KAAKc,YAAY,WAAYgD,oCACzE/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAM9D,KAAKc,YAAY,WAAYgD,oCACzE/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAM9D,KAAKc,YAAY,WAAYgD,oCAEzE/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,YAAA,SAAkCmD,GAAM9D,KAAKc,YAAY,OAAQkG,EAAWlD,qCAC5E/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,cAAA,SAAoCmD,GAAM9D,KAAKc,YAAY,SAAUkG,EAAWlD,qCAChF/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,cAAA,SAAoCmD,GAAM9D,KAAKc,YAAY,SAAUkG,EAAWlD,qCAChF/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,cAAA,SAAoCmD,GAAM9D,KAAKc,YAAY,SAAUkG,EAAWlD,qCAChF/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,cAAA,SAAoCmD,GAAM9D,KAAKc,YAAY,SAAUkG,EAAWlD,qCAChF/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,cAAA,SAAoCmD,GAAM9D,KAAKc,YAAY,SAAUkG,EAAWlD,qCAEhF/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAO9D,KAAKc,YAAY,WAAYkG,EAAWlD,qCACrF/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAO9D,KAAKc,YAAY,WAAYkG,EAAWlD,qCACrF/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAO9D,KAAKc,YAAY,WAAYkG,EAAWlD,qCACrF/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAO9D,KAAKc,YAAY,WAAYkG,EAAWlD,qCAErF/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAM9D,KAAKc,YAAY,WAAYkG,EAAWlD,qCACpF/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAM9D,KAAKc,YAAY,WAAYkG,EAAWlD,qCACpF/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAM9D,KAAKc,YAAY,WAAYkG,EAAWlD,qCACpF/C,OAAAC,eAA6BsF,EAA7B3F,UAAA,gBAAA,SAAsCmD,GAAM9D,KAAKc,YAAY,WAAYkG,EAAWlD,qCAiCxEwC,EAAZ3F,UAAAsG,iBAAE,WACE,MAAOjH,MAAKuG,OAAS,OAAS7C,EAAlC/C,UAAwCsG,iBAAxCtD,KAAA3D,OASEsG,EAAF3F,UAAAyD,YAAE,SAAYC,GACNrE,KAAKkH,iBAAsC,MAAnB7C,EAAc,MAAarE,KAAKmH,gBAC1DnH,KAAK+G,oBAQTT,EAAF3F,UAAA8D,SAAE,WAAA,GAAFhB,GAAAzD,IACI0D,GAAJ/C,UAAU8D,SAAVd,KAAA3D,KAEI,IAAIa,GAAQb,KAAKoH,eAAe,QAAQ,EAExCpH,MAAKqH,4BAA4B,OAAQxG,EAAO,SAACwD,GAC/CZ,EAAKsD,iBAAiB1C,EAAQxD,SAGhCb,KAAK+G,oBAGPT,EAAF3F,UAAAiE,YAAE,WACElB,EAAJ/C,UAAUiE,YAAVjB,KAAA3D,MACQA,KAAK4G,gBACP5G,KAAK4G,eAAeU,eASdhB,EAAZ3F,UAAAoG,iBAAE,SAA2BlG,GACzBA,EAAQA,GAASb,KAAKoH,eAAe,QAAQ,GACzCpH,KAAKmH,gBACPtG,EAAQb,KAAKmH,cAAc3C,eAG7B,IAAI+C,GAAavH,KAAKwH,gBAAgB3G,EACtCb,MAAKyH,qBAAqBzH,KAAK0H,UAAUH,IACrCxH,EAAAA,iBAAiBC,KAAK0G,aAAe1G,KAAK2G,oBAC5C3G,KAAKK,cAAcsH,MAAMC,YAAY,UAAW,KAM1CtB,EAAZ3F,UAAA+G,UAAE,SAAoBG,GAClB,OAAQC,QAAWD,EAAO7H,KAAK+H,SAAW,SAI5CzB,EAAF3F,UAAA6G,gBAAE,SAAgBK,GACd,OAAgC,GAAxBxB,GAAM2B,QAAQH,mBAvJ1BxG,KAACC,EAAAA,UAADC,OACEC,SAAU,0dAzBZH,KAAEK,KAKFL,KAAQ4G,GAARrG,aAAAP,KA+EeW,EAAAA,WA/EfX,KA+E2BgE,EAAAA,SApG3BhE,KAAEI,EAAAA,aAkBFJ,KAAEM,KAqFFN,KAAAN,OAAAa,aAAAP,KAAeQ,EAAAA,OAAfN,MAAsBO,EAAAA,iBACtBT,SAAAU,GAAAH,aAAAP,KAAeW,EAAAA,WAAfX,KAA2BQ,EAAAA,OAA3BN,MAAkCU,2BA3ClC4F,OAAAxG,KAAGc,EAAAA,MAAHZ,MAAS,YACT2G,SAAA7G,KAAGc,EAAAA,MAAHZ,MAAS,eACT4G,SAAA9G,KAAGc,EAAAA,MAAHZ,MAAS,eACT6G,SAAA/G,KAAGc,EAAAA,MAAHZ,MAAS,eACT8G,SAAAhH,KAAGc,EAAAA,MAAHZ,MAAS,eACT+G,SAAAjH,KAAGc,EAAAA,MAAHZ,MAAS,eAETgH,WAAAlH,KAAGc,EAAAA,MAAHZ,MAAS,kBACTiH,WAAAnH,KAAGc,EAAAA,MAAHZ,MAAS,kBACTkH,WAAApH,KAAGc,EAAAA,MAAHZ,MAAS,kBACTmH,WAAArH,KAAGc,EAAAA,MAAHZ,MAAS,kBAEToH,WAAAtH,KAAGc,EAAAA,MAAHZ,MAAS,kBACTqH,WAAAvH,KAAGc,EAAAA,MAAHZ,MAAS,kBACTsH,WAAAxH,KAAGc,EAAAA,MAAHZ,MAAS,kBACTuH,WAAAzH,KAAGc,EAAAA,MAAHZ,MAAS,kBAETwH,OAAA1H,KAAGc,EAAAA,MAAHZ,MAAS,YACTyH,SAAA3H,KAAGc,EAAAA,MAAHZ,MAAS,eACT0H,SAAA5H,KAAGc,EAAAA,MAAHZ,MAAS,eACT2H,SAAA7H,KAAGc,EAAAA,MAAHZ,MAAS,eACT4H,SAAA9H,KAAGc,EAAAA,MAAHZ,MAAS,eACT6H,SAAA/H,KAAGc,EAAAA,MAAHZ,MAAS,eAET8H,WAAAhI,KAAGc,EAAAA,MAAHZ,MAAS,kBACT+H,WAAAjI,KAAGc,EAAAA,MAAHZ,MAAS,kBACTgI,WAAAlI,KAAGc,EAAAA,MAAHZ,MAAS,kBACTiI,WAAAnI,KAAGc,EAAAA,MAAHZ,MAAS,kBAETkI,WAAApI,KAAGc,EAAAA,MAAHZ,MAAS,kBACTmI,WAAArI,KAAGc,EAAAA,MAAHZ,MAAS,kBACToI,WAAAtI,KAAGc,EAAAA,MAAHZ,MAAS,kBACTqI,WAAAvI,KAAGc,EAAAA,MAAHZ,MAAS,mBAtGT+E,GA6DuCrD,ICxCvC4G,GAAA,WACE,QAAFA,GAAqBC,EAAoBjJ,EAAekJ,OAAxD,KAAAA,IAAwDA,GAAxD,GAAqB/J,KAArB8J,IAAqBA,EAAoB9J,KAAzCa,MAAyCA,EACrCb,KAAK8J,IAAMC,EAAWD,EAAIE,QAAQ,QAAS,IAAIC,OAASH,EAAIG,OAE5DjK,KAAKa,MAAQkJ,EAAWlJ,EAAMmJ,QAAQ,QAAS,IAAIC,OAASpJ,EAAMoJ,OAClEjK,KAAKa,MAAQb,KAAKa,MAAMmJ,QAAQ,IAAK,IA1BzC,MAAAH,MAiCaK,IACXC,QAAFA,EACEC,aAAFA,EACEC,iBAAFA,EACEC,gBAAFA,kBCmDE,QAAFC,GAAsBpH,EACEqH,EACAlH,EACAC,EACAkH,EACkBC,EAClBvK,GANtB,GAAFsD,GAQIC,EARJC,KAAA3D,KAQUmD,EAASG,EAAOnD,IAR1BH,WAAsByD,GAAtBN,QAAsBA,EACEM,EAAxB+G,WAAwBA,EACA/G,EAAxBH,MAAwBA,EACAG,EAAxBF,UAAwBA,EACAE,EAAxBgH,SAAwBA,EACkBhH,EAA1CiH,iBAA0CA,EAClBjH,EAAxBtD,QAAwBA,EAGpBsD,EAAKG,uBAjGT,MAoDoCC,GAApC0G,EAAA7G,GAQA3C,OAAAC,eAAMuJ,EAAN5J,UAAA,mBAAA,SAAkBmD,GAEd9D,KAAK+D,MAAMC,WADC,UACeF,GAAK,GAChC9D,KAAK0K,iBAAiBC,QAAU3K,KAAK+D,MAAMG,WAF/B,4CAMhBnD,OAAAC,eAA8BuJ,EAA9B5J,UAAA,iBAAA,SAAwCmD,GAAoB9D,KAAK+D,MAAMC,WAAW,YAAaF,GAAK,oCACpG/C,OAAAC,eAA8BuJ,EAA9B5J,UAAA,iBAAA,SAAwCmD,GAAoB9D,KAAK+D,MAAMC,WAAW,YAAaF,GAAK,oCACpG/C,OAAAC,eAA8BuJ,EAA9B5J,UAAA,iBAAA,SAAwCmD,GAAoB9D,KAAK+D,MAAMC,WAAW,YAAaF,GAAK,oCACpG/C,OAAAC,eAA8BuJ,EAA9B5J,UAAA,iBAAA,SAAwCmD,GAAoB9D,KAAK+D,MAAMC,WAAW,YAAaF,GAAK,oCACpG/C,OAAAC,eAA8BuJ,EAA9B5J,UAAA,iBAAA,SAAwCmD,GAAoB9D,KAAK+D,MAAMC,WAAW,YAAaF,GAAK,oCAEpG/C,OAAAC,eAA8BuJ,EAA9B5J,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCACxG/C,OAAAC,eAA8BuJ,EAA9B5J,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCACxG/C,OAAAC,eAA8BuJ,EAA9B5J,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCACxG/C,OAAAC,eAA8BuJ,EAA9B5J,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCAExG/C,OAAAC,eAA8BuJ,EAA9B5J,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCACxG/C,OAAAC,eAA8BuJ,EAA9B5J,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCACxG/C,OAAAC,eAA8BuJ,EAA9B5J,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCACxG/C,OAAAC,eAA8BuJ,EAA9B5J,UAAA,mBAAA,SAA0CmD,GAAoB9D,KAAK+D,MAAMC,WAAW,cAAeF,GAAK,oCA0BtGyG,EAAF5J,UAAAyD,YAAE,SAAYC,GACNrE,KAAK+D,MAAMO,YAAaD,KAC1BrE,KAAK0K,iBAAiBC,QAAU3K,KAAK+D,MAAMQ,aAAaC,gBAAkB,KAK9E+F,EAAF5J,UAAA8D,SAAE,WACEzE,KAAK0E,wBAKP6F,EAAF5J,UAAAgE,UAAE,WACE3E,KAAK0K,iBAAiB/F,aAGxB4F,EAAF5J,UAAAiE,YAAE,WACE5E,KAAK+D,MAAMa,oBACJ5E,MAAK0K,kBAWFH,EAAd5J,UAAAiD,mBAAI,WACI5D,KAAK+D,MAAQ,GAAIc,IACf,UACA7E,KAAKmD,QACLnD,KAAKsD,MACLtD,KAAKG,SAEFH,KAAK0K,mBAGR1K,KAAK0K,iBAAmB,GAAIE,GAAAA,QAAQ5K,KAAKyK,SAAUzK,KAAKsD,MAAOtD,KAAKuD,YAGtEvD,KAAK6K,yBACL7K,KAAK8K,oBAOCP,EAAd5J,UAAA+D,qBAAI,SAA+BK,GAA/B,GAAJtB,GAAAzD,SAAA,KAAA+E,IAAmCA,EAAnC,UACM,IAAMC,GAAgBhF,KAAK+D,MAAMG,WAAWa,EAC5C/E,MAAK+D,MAAMkB,2BAA2BF,EAASC,EAAe,SAACX,GAC7DZ,EAAKiH,iBAAiBC,QAAUtG,EAAQxD,OAAS,GACjD4C,EAAKiH,iBAAiB/F,eAWlB4F,EAAZ5J,UAAAkK,uBAAE,WAAA,GAAFpH,GAAAzD,KACQgE,EAAahE,KAAK+D,MAAMC,WAAW+G,KAAK/K,KAAK+D,MACjD/D,MAAK+D,MAAMC,WAAa,SAAC8F,EAAckB,EAAcC,EAAkBC,OAA3E,KAAAD,IAAyDA,GAAzD,OAAA,KAAAC,IAA2EA,GAA3E,EACM,IAAIC,GAAS1H,EAAK2H,eAAeJ,EAC7BE,KACFC,EAASE,KAAiB5H,EAAKM,MAAMuH,SAAkB,QAAGH,IAE5DnH,EAAW8F,EAAKqB,EAAQF,KASlBV,EAAZ5J,UAAAyK,eAAE,SAAyBD,GAAzB,GAAF1H,GAAAzD,KACQuL,EAA8B,SAACzH,GAEjC,MAAOL,GAAK+G,WAAWgB,SAASC,EAAAA,gBAAgBC,MAAO5H,IAAQ,GAEjE,IAAIqH,EACF,OAASQ,GAAExB,QAAQgB,IACjB,IAAK,SAAW,MAAOQ,IAAEtB,iBAAiBsB,GAAEvB,aAAae,GAASI,EAClE,KAAK,QAAW,MAAOI,IAAEtB,iBAAgB,EAA2BkB,EACpE,KAAK,MACL,QAAgB,MAAOI,IAAErB,gBAAgBa,EAAQI,GAGrD,MAAOJ,IAMCZ,EAAZ5J,UAAAmK,iBAAE,WACO9K,KAAK+D,MAAMG,WAAW,aACzBlE,KAAK4L,YAAc5L,KAAK6L,mBAAmB,UAAY,oBArK7DxK,KAACC,EAAAA,UAADC,OACEC,SAAU,2QAlBZH,KAAEK,KALFL,KAAQyK,EAAAA,eAbRzK,KAAEI,EAAAA,aAMFJ,KAAE+D,EAAAA,YAJF/D,KAAE8D,EAAAA,kBAUF9D,KAAQuJ,EAAAA,QAARhJ,aAAAP,KAuEeW,EAAAA,WAvEfX,KAuE2BgE,EAAAA,SAhE3BhE,KAAEM,wBA8BFiK,cAAAvK,KAAGc,EAAAA,MAAHZ,MAAS,aAQTwK,YAAA1K,KAAGc,EAAAA,MAAHZ,MAAS,gBACTyK,YAAA3K,KAAGc,EAAAA,MAAHZ,MAAS,gBACT0K,YAAA5K,KAAGc,EAAAA,MAAHZ,MAAS,gBACT2K,YAAA7K,KAAGc,EAAAA,MAAHZ,MAAS,gBACT4K,YAAA9K,KAAGc,EAAAA,MAAHZ,MAAS,gBAET6K,cAAA/K,KAAGc,EAAAA,MAAHZ,MAAS,mBACT8K,cAAAhL,KAAGc,EAAAA,MAAHZ,MAAS,mBACT+K,cAAAjL,KAAGc,EAAAA,MAAHZ,MAAS,mBACTgL,cAAAlL,KAAGc,EAAAA,MAAHZ,MAAS,mBAETiL,cAAAnL,KAAGc,EAAAA,MAAHZ,MAAS,mBACTkL,cAAApL,KAAGc,EAAAA,MAAHZ,MAAS,mBACTmL,cAAArL,KAAGc,EAAAA,MAAHZ,MAAS,mBACToL,cAAAtL,KAAGc,EAAAA,MAAHZ,MAAS,oBAjFTgJ,GAoDoCtH,IC9B9B2J,IACJtG,GACApD,GACAqH,GACA7J,gCA1BF,sBAmCAW,KAACwL,EAAAA,SAADtL,OACEuL,SAAUC,IACVC,aAAkBJ,GAApBK,QACEC,QAAaN,GAAfK,QACEE,WACEC,GACAzL,GACA0L,GACAC,8CA3CJC,KC+EaC,KAETC,QAAqCC,EAAqB,sBAC1DC,WAAYC,EACZC,MACET,GACAU,GACAC,EAAAA,SACAC,IAEFC,OAAO,IAGPR,QAASxL,GACTiM,UAAU,IAGVT,QAASK,GACTK,SAAUC,KAKVC,GAAS,EACPC,IAAgB,EChGtBC,GAAA,yBAPA,sBAWAlN,KAACwL,EAAAA,SAADtL,OACE4L,WAAYK,8CAZde,KCWaC,GAAU,GAAIC,GAAAA,QAAQ,mCC0BjC,QAAFC,GACsC/H,EACbD,GAEjB3G,EAAAA,iBAAiB2G,KAAgBC,GACnCgI,QAAQC,KAAK,4EA1CnB,MAqDSF,GAATG,mBAAE,SAA0BC,EACAC,GACxB,OACEC,SAAUN,EACVvB,WACE8B,EAAoCH,EAAaC,IAAYG,cAAc,sBA3BnF7N,KAACwL,EAAAA,SAADtL,OACEuL,SAAUqC,GAAY5B,GAAgBR,IACtCG,SAAUiC,GAAY5B,GAAgBR,4CAKxC1L,SAAAU,GAAAH,aAAAP,KAAKW,EAAAA,WAALX,KAAiBQ,EAAAA,OAAjBN,MAAwBU,QACxBZ,KAAAN,OAAAa,aAAAP,KAAKQ,EAAAA,OAALN,MAAYO,EAAAA,kBAvCZ4M"}