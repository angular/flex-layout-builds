{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../src/lib/grid/grid-align/grid-align.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/add-alias.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/match-media/server-match-media.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('7.0.0-beta.23-002eb66');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../breakpoints/breakpoint-tools';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected iterableDiffers: IterableDiffers,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(\n        this.iterableDiffers, this.keyValueDiffers, this.elementRef, this.renderer\n      );\n    }\n    this.init();\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  KeyValueDiffers,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.keyValueDiffers, this.elementRef, this.renderer);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  let key, margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n\n  switch (parent.layout) {\n    case 'column':\n      key = 'margin-bottom';\n      break;\n    case 'column-reverse':\n      key = 'margin-top';\n      break;\n    case 'row':\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n    case 'row-reverse':\n      key = parent.directionality === 'rtl' ? 'margin-right' : 'margin-left';\n      break;\n    default :\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n  }\n  margins[key] = gapValue;\n\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue, this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    if (layout === 'row') {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse') {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column') {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse') {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    this.layout = layout.split(' ')[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OptionalBreakPoint} from './break-point-registry';\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n/** HOF to sort the breakpoints by priority */\nexport function sortDescendingPriority(a: OptionalBreakPoint, b: OptionalBreakPoint): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\nexport function sortAscendingPriority(a: BreakPoint, b: BreakPoint): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize with 'all' so all non-responsive APIs trigger style updates */\n  protected _source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n\n  protected _registry = new Map<string, MediaQueryList>();\n  protected _observable$ = this._source.asObservable();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this._source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this._source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this._registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this._registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<any>window).matchMedia('all').addListener;\n\n  return canListen ? (<any>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {extendObject} from '../utils/object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  return extendObject(dest || {}, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../breakpoints/breakpoint-tools';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is not supported; so 'print' mediaQuery activations must be used.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else {\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '') {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: []\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n  'Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 5000px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from './breakpoint-tools';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  protected _registry: Map<string, MockMediaQueryList> = new Map();\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql = this._registry.get(mediaQuery);\n    const alreadyAdded = this._actives\n        .reduce((found, it) => (found || (mql ? (it.media === mql.media) : false)), false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this._actives.forEach(it => it.deactivate());\n    this._actives = [];\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this._actives.length > 0;\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | AddEventListenerOptions): void;\n  addEventListener(_: string,\n                   __: EventListenerOrEventListenerObject,\n                   ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | EventListenerOptions): void;\n  removeEventListener(_: string,\n                      __: EventListenerOrEventListenerObject,\n                      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList> = new Map();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\n\n/**\n * Class internalizes a MatchMedia service and exposes an Observable interface.\n\n * This exposes an Observable with a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the MediaObserver\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.media$` with syntax like mediaObserver.media$.map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const onChange = (change: MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g. mediaObserver.media$.subscribe(onChange);\n *\n *      mediaObserver.media$()\n *        .pipe(\n *          filter((change: MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver {\n  /**\n   * Whether to announce gt-<xxx> breakpoint activations\n   */\n  filterOverlaps = true;\n  readonly media$: Observable<MediaChange>;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n      protected mediaWatcher: MatchMedia,\n      protected hook: PrintHook) {\n    this.media$ = this.watchActivations();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    return this.mediaWatcher.isActive(this.toMediaQuery(alias));\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange> {\n    const locator = this.breakpoints;\n    const onlyActivations = (change: MediaChange) => change.matches;\n    const excludeUnknown = (change: MediaChange) => change.mediaQuery !== '';\n    const excludeCustomPrints = (change: MediaChange) => !change.mediaQuery.startsWith('print');\n    const excludeOverlaps = (change: MediaChange) => {\n      const bp = locator.findByQuery(change.mediaQuery);\n      return !bp ? true : !(this.filterOverlaps && bp.overlapping);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      if (this.hook.isPrintEvent(change)) {\n        // replace with aliased substitute (if configured)\n        return this.hook.updateEvent(change);\n      }\n      let bp: OptionalBreakPoint = locator.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     *\n     * Inject associated (if any) alias information into the MediaChange event\n     * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     * - Exclude print activations that do not have an associated mediaQuery\n     */\n    return this.mediaWatcher.observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter(onlyActivations),\n            filter(excludeOverlaps),\n            map(replaceWithPrintAlias),\n            filter(excludeCustomPrints),\n            filter(excludeUnknown)\n        );\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private toMediaQuery(query: string) {\n    const locator = this.breakpoints;\n    const bp = locator.findByAlias(query) || locator.findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value.trim();\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n"],"names":["type","ElementRef","GridAlignColumnsStyleBuilder","decorators","Optional","StyleUtils","MediaMarshaller","inline","Input","args","GridAlignColumnsDirective","BaseDirective2","alignColumnsCache","Map","alignColumnsInlineCache","inputs","_this","tslib_1.__extends","DefaultGridAlignColumnsDirective","_super","Directive","selector","DEFAULT_MAIN","DEFAULT_CROSS","GridAlignRowsStyleBuilder","prototype","buildStyles","input","parent","buildCss","Injectable","providedIn","StyleBuilder","GridAlignRowsDirective","elementRef","styleBuilder","styler","marshal","call","this","DIRECTIVE_KEY","_inline","init","Object","defineProperty","val","coerceBooleanProperty","updateWithValue","value","styleCache","alignRowsInlineCache","alignRowsCache","addStyles","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","split","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","ALL_DIRECTIVES","DefaultGridAlignDirective","NgModule","imports","CoreModule","declarations","slice","exports","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","tslib_1.__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","FlexModule","ExtendedModule","Boolean","Inject","PLATFORM_ID","builders","updateFn","get","key","subject","next","element","releaseElement","watcherMap","forEach","s","unsubscribe","delete","elementMap","_","triggerUpdate","bpMap","valueMap","getActivatedValues","updateElement","k","buildElementKeyMap","keyMap","elementKeyMap","Set","set","add","watchExtraTriggers","triggers","length","watchers","newSubscription","merge","apply","subscribe","currentValue","getValue","findByQuery","query","i","activatedBreakpoints","activatedBp","alias","undefined","has","lastHope","observeActivations","target","queries","items","bp","mediaQuery","matchMedia","observe","hook","withPrintQuery","pipe","tap","interceptEvents","filter","blockPropagation","onMediaChange","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","setValue","nativeElement","getAttribute","setAttribute","src","DefaultImgSrcDirective","ClassDirective","iterableDiffers","keyValueDiffers","renderer","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","IterableDiffers","KeyValueDiffers","Renderer2","Self","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","hasValue","DISPLAY_MAP","getDisplayStyle","defaultValue","ngOnChanges","changes","keys","inputKey","inputValue","shouldShow","trackValue","takeUntil","destroySubject","addFlexToParent","lookupStyle","style","setProperty","WeakMap","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","DomSanitizer","DefaultStyleDirective","INLINE","LAYOUT_VALUES","LayoutStyleBuilder","buildLayoutCSS","LayoutDirective","layoutCache","DefaultLayoutDirective","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","sideEffect","_styles","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapDirective","zone","layout","observerSubject","Subject","extraTriggers","change","asObservable","onLayoutChange","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","matcher","find","x","childrenNodes","el","nodeType","willDisplay","sort","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","childList","NgZone","Directionality","DefaultLayoutGapDirective","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","FlexDirective","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","DefaultFlexDirective","FlexOrderStyleBuilder","order","parseInt","FlexOrderDirective","flexOrderCache","DefaultFlexOrderDirective","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","DefaultFlexOffsetDirective","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","DefaultFlexAlignDirective","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","_input","FlexFillDirective","flexFillCache","LayoutAlignStyleBuilder","align","mainAxis","crossAxis","flex-direction","LayoutAlignDirective","layoutAlignHorizontalCache","layoutAlignHorizontalRevCache","layoutAlignVerticalCache","layoutAlignVerticalRevCache","DefaultLayoutAlignDirective","BidiModule","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","GridAlignDirective","alignCache","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","dest","sources","_i","arguments","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","suffix","overlapping","mergeByAlias","defaults","custom","dict","sortDescendingPriority","priorityA","priority","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","matches","media","removeListener","mergeAlias","mqAlias","isPrintBreakPoint","PRINT","applyCssPrefixes","j","_validateCalcValue","substr","calc","initBuilderMap","oldMap","what","delimiter","sanitizeValue","stringToKeyValue","entry","reduce","keyValuesToMap","push","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","__assign","assign","t","n","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","MediaChange","property","clone","stylesheet","StylesheetMap","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","InjectionToken","factory","mru","activatedAlias","complete","builder","useCache","shouldCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","concat","isArray","findByMap","findByAlias","findWithPredicate","searchFn","response","_zone","_platformId","_source","BehaviorSubject","_registry","_observable$","isActive","mql","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","_actives","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","found","deactivate","MockMediaQueryList","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","useClass","ServerMediaQueryList","ServerMatchMedia","activateBreakpoint","lookupBreakpoint","deactivateBreakpoint","BREAKPOINT_PRINT","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","startPrinting","updateStyles","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","mediaWatcher","filterOverlaps","media$","watchActivations","toMediaQuery","buildObservable","locator","onlyActivations","excludeUnknown","excludeCustomPrints","excludeOverlaps","replaceWithPrintAlias","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values","values_1","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","Error","name_1","styleAttrValue","_parent","updateMap","clearMap","mc","splice","clearFn","clearElement"],"mappings":"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"}