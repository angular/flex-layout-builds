{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts","../../src/lib/version.ts","../../src/lib/module.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/extended/img-src/img-src.ts","../../src/lib/extended/class/class.ts","../../src/lib/extended/show-hide/show-hide.ts","../../src/lib/extended/style/style-transforms.ts","../../src/lib/extended/style/style.ts","../../src/lib/extended/module.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flex/layout/layout.ts","../../src/lib/flex/layout-gap/layout-gap.ts","../../src/lib/flex/flex/flex.ts","../../src/lib/flex/flex-order/flex-order.ts","../../src/lib/flex/flex-offset/flex-offset.ts","../../src/lib/flex/flex-align/flex-align.ts","../../src/lib/flex/flex-fill/flex-fill.ts","../../src/lib/flex/layout-align/layout-align.ts","../../src/lib/flex/module.ts","../../src/lib/grid/grid-align/grid-align.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/utils/sort.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreaStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAreasStyleBuiler,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAutoStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridColumnsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridRowsStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('7.0.0-beta.23-53a6ebb');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\n\nimport {\n  SERVER_TOKEN,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  DEFAULT_CONFIG,\n  BreakPoint,\n  BREAKPOINT,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\nimport {GridModule} from '@angular/flex-layout/grid';\n\n/**\n * FlexLayoutModule -- the main import for all utilities in the Angular Layout library\n * * Will automatically provide Flex, Grid, and Extended modules for use in the application\n * * Can be configured using the static withConfig method, options viewable on the Wiki's\n *   Configuration page\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, GridModule],\n  exports: [FlexModule, ExtendedModule, GridModule]\n})\nexport class FlexLayoutModule {\n\n  /**\n   * Initialize the FlexLayoutModule with a set of config options,\n   * which sets the corresponding tokens accordingly\n   */\n  static withConfig(configOptions: LayoutConfigOptions,\n                    breakpoints: BreakPoint|BreakPoint[] = []): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: configOptions.serverLoaded ?\n        [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n          {provide: SERVER_TOKEN, useValue: true},\n        ] : [\n          {provide: LAYOUT_CONFIG, useValue: {...DEFAULT_CONFIG, ...configOptions}},\n          {provide: BREAKPOINT, useValue: breakpoints, multi: true},\n        ]\n    };\n  }\n\n  constructor(@Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ImgSrcStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected iterableDiffers: IterableDiffers,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(\n        this.iterableDiffers, this.keyValueDiffers, this.elementRef, this.renderer\n      );\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Optional,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(protected elementRef: ElementRef,\n              protected styleBuilder: ShowHideStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Optional() @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  KeyValueDiffers,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(protected elementRef: ElementRef,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller,\n              protected keyValueDiffers: KeyValueDiffers,\n              protected renderer: Renderer2,\n              protected sanitizer: DomSanitizer,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Optional() @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(this.keyValueDiffers, this.elementRef, this.renderer);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\n@Injectable({providedIn: 'root'})\nexport class LayoutStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildLayoutCSS(input);\n  }\n}\n\nconst inputs = [\n  'fxLayout', 'fxLayout.xs', 'fxLayout.sm', 'fxLayout.md',\n  'fxLayout.lg', 'fxLayout.xl', 'fxLayout.lt-sm', 'fxLayout.lt-md',\n  'fxLayout.lt-lg', 'fxLayout.lt-xl', 'fxLayout.gt-xs', 'fxLayout.gt-sm',\n  'fxLayout.gt-md', 'fxLayout.gt-lg'\n];\nconst selector = `\n  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],\n  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],\n  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],\n  [fxLayout.gt-md], [fxLayout.gt-lg]\n`;\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\nexport class LayoutDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'layout';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = layoutCache;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutDirective extends LayoutDirective {\n  protected inputs = inputs;\n}\n\nconst layoutCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  OnDestroy,\n  NgZone,\n  Injectable,\n  AfterContentInit,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\nexport interface LayoutGapParent {\n  directionality: string;\n  items: HTMLElement[];\n  layout: string;\n}\n\nconst CLEAR_MARGIN_CSS = {\n  'margin-left': null,\n  'margin-right': null,\n  'margin-top': null,\n  'margin-bottom': null\n};\n\n@Injectable({providedIn: 'root'})\nexport class LayoutGapStyleBuilder extends StyleBuilder {\n  constructor(private _styler: StyleUtils) {\n    super();\n  }\n\n  buildStyles(gapValue: string, parent: LayoutGapParent) {\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n\n      // Add the margin to the host element\n      return buildGridMargin(gapValue, parent.directionality);\n    } else {\n      return {};\n    }\n  }\n\n  sideEffect(gapValue: string, _styles: StyleDefinition, parent: LayoutGapParent) {\n    const items = parent.items;\n    if (gapValue.endsWith(GRID_SPECIFIER)) {\n      gapValue = gapValue.slice(0, gapValue.indexOf(GRID_SPECIFIER));\n      // For each `element` children, set the padding\n      const paddingStyles = buildGridPadding(gapValue, parent.directionality);\n      this._styler.applyStyleToElements(paddingStyles, parent.items);\n    } else {\n      const lastItem = items.pop()!;\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      const gapCss = buildGapCSS(gapValue, parent);\n      this._styler.applyStyleToElements(gapCss, items);\n\n      // Clear all gaps for all visible elements\n      this._styler.applyStyleToElements(CLEAR_MARGIN_CSS, [lastItem]);\n    }\n  }\n}\n\nconst inputs = [\n  'fxLayoutGap', 'fxLayoutGap.xs', 'fxLayoutGap.sm', 'fxLayoutGap.md',\n  'fxLayoutGap.lg', 'fxLayoutGap.xl', 'fxLayoutGap.lt-sm', 'fxLayoutGap.lt-md',\n  'fxLayoutGap.lt-lg', 'fxLayoutGap.lt-xl', 'fxLayoutGap.gt-xs', 'fxLayoutGap.gt-sm',\n  'fxLayoutGap.gt-md', 'fxLayoutGap.gt-lg'\n];\nconst selector = `\n  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],\n  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],\n  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],\n  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`;\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\nexport class LayoutGapDirective extends BaseDirective2 implements AfterContentInit, OnDestroy {\n  protected layout = 'row';  // default flex-direction\n  protected DIRECTIVE_KEY = 'layout-gap';\n  protected observerSubject = new Subject<void>();\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--;) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  constructor(protected elRef: ElementRef,\n              protected zone: NgZone,\n              protected directionality: Directionality,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutGapStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    const extraTriggers = [this.directionality.change, this.observerSubject.asObservable()];\n    this.init(extraTriggers);\n    this.marshal\n      .trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterContentInit() {\n    this.buildChildObservable();\n    this.triggerUpdate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    // Make sure to filter out 'wrap' option\n    const direction = layout.split(' ');\n    this.layout = direction[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    // Gather all non-hidden Element nodes\n    const items = this.childrenNodes\n      .filter(el => el.nodeType === 1 && this.willDisplay(el))\n      .sort((a, b) => {\n        const orderA = +this.styler.lookupStyle(a, 'order');\n        const orderB = +this.styler.lookupStyle(b, 'order');\n        if (isNaN(orderA) || isNaN(orderB) || orderA === orderB) {\n          return 0;\n        } else {\n          return orderA > orderB ? 1 : -1;\n        }\n      });\n\n    if (items.length > 0) {\n      const directionality = this.directionality.value;\n      const layout = this.layout;\n      if (layout === 'row' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheRowRtl;\n      } else if (layout === 'row' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheRowLtr;\n      } else if (layout === 'column' && directionality === 'rtl') {\n        this.styleCache = layoutGapCacheColumnRtl;\n      } else if (layout === 'column' && directionality !== 'rtl') {\n        this.styleCache = layoutGapCacheColumnLtr;\n      }\n      this.addStyles(value, {directionality, items, layout});\n    }\n  }\n\n  /** Determine if an element will show or hide based on current activation */\n  protected willDisplay(source: HTMLElement): boolean {\n    const value = this.marshal.getValue(source, 'show-hide');\n    return value === true ||\n      (value === undefined && this.styleUtils.lookupStyle(source, 'display') !== 'none');\n  }\n\n  protected buildChildObservable(): void {\n    this.zone.runOutsideAngular(() => {\n      if (typeof MutationObserver !== 'undefined') {\n        this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n          const validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n              (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this.observerSubject.next();\n          }\n        });\n        this.observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  protected observer?: MutationObserver;\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutGapDirective extends LayoutGapDirective {\n  protected inputs = inputs;\n}\n\nconst layoutGapCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst layoutGapCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n\nconst GRID_SPECIFIER = ' grid';\n\nfunction buildGridPadding(value: string, directionality: string): StyleDefinition {\n  let paddingTop = '0px', paddingRight = '0px', paddingBottom = value, paddingLeft = '0px';\n\n  if (directionality === 'rtl') {\n    paddingLeft = value;\n  } else {\n    paddingRight = value;\n  }\n\n  return {'padding': `${paddingTop} ${paddingRight} ${paddingBottom} ${paddingLeft}`};\n}\n\nfunction buildGridMargin(value: string, directionality: string): StyleDefinition {\n  let marginTop = '0px', marginRight = '0px', marginBottom = '-' + value, marginLeft = '0px';\n\n  if (directionality === 'rtl') {\n    marginLeft = '-' + value;\n  } else {\n    marginRight = '-' + value;\n  }\n\n  return {'margin': `${marginTop} ${marginRight} ${marginBottom} ${marginLeft}`};\n}\n\nfunction buildGapCSS(gapValue: string,\n                     parent: {directionality: string, layout: string}): StyleDefinition {\n  let key, margins: {[key: string]: string | null} = {...CLEAR_MARGIN_CSS};\n\n  switch (parent.layout) {\n    case 'column':\n      key = 'margin-bottom';\n      break;\n    case 'column-reverse':\n      key = 'margin-top';\n      break;\n    case 'row':\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n    case 'row-reverse':\n      key = parent.directionality === 'rtl' ? 'margin-right' : 'margin-left';\n      break;\n    default :\n      key = parent.directionality === 'rtl' ? 'margin-left' : 'margin-right';\n      break;\n  }\n  margins[key] = gapValue;\n\n  return margins;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  LayoutConfigOptions,\n  LAYOUT_CONFIG,\n  StyleUtils,\n  validateBasis,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\ninterface FlexBuilderParent {\n  direction: string;\n  hasWrap: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexStyleBuilder extends StyleBuilder {\n  constructor(@Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n    super();\n  }\n  buildStyles(input: string, parent: FlexBuilderParent) {\n    let [grow, shrink, ...basisParts]: (string|number)[] = input.split(' ');\n    let basis = basisParts.join(' ');\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const direction = (parent.direction.indexOf('column') > -1) ? 'column' : 'row';\n\n    const max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n    const min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n    const hasCalc = String(basis).indexOf('calc') > -1;\n    const usingCalc = hasCalc || (basis === 'auto');\n    const isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n    const hasUnits = String(basis).indexOf('px') > -1 || String(basis).indexOf('rem') > -1 ||\n      String(basis).indexOf('em') > -1 || String(basis).indexOf('vw') > -1 ||\n      String(basis).indexOf('vh') > -1;\n\n    let isValue = (hasCalc || hasUnits);\n\n    grow = (grow == '0') ? 0 : grow;\n    shrink = (shrink == '0') ? 0 : shrink;\n\n    // make box inflexible when shrink and grow are both zero\n    // should not set a min when the grow is zero\n    // should not set a max when the shrink is zero\n    const isFixed = !grow && !shrink;\n\n    let css: {[key: string]: string | number | null} = {};\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    const clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        const useColumnBasisZero = this.layoutConfig.useColumnBasisZero !== false;\n        basis = direction === 'row' ? '0%' : (useColumnBasisZero ? '0.000000001px' : 'auto');\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        basis = 'auto';\n        break;\n      case 'grow':\n        basis = '100%';\n        break;\n      case 'noshrink':\n        shrink = 0;\n        basis = 'auto';\n        break;\n      case 'auto':\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        basis = 'auto';\n        break;\n      default:\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        // Fix for issue 280\n        if (basis === '0%') {\n          isValue = true;\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // fix issue #5345\n        if (hasCalc) {\n          css = extendObject(clearStyles, {\n            'flex-grow': grow,\n            'flex-shrink': shrink,\n            'flex-basis': isValue ? basis : '100%'\n          });\n        } else {\n          css = extendObject(clearStyles, {\n            'flex': `${grow} ${shrink} ${isValue ? basis : '100%'}`\n          });\n        }\n\n        break;\n    }\n\n    if (!(css['flex'] || css['flex-grow'])) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    }\n\n    // Fix for issues 277, 534, and 728\n    if (basis !== '0%' && basis !== '0px' && basis !== '0.000000001px' && basis !== 'auto') {\n      css[min] = isFixed || (isValue && grow) ? basis : null;\n      css[max] = isFixed || (!usingCalc && shrink) ? basis : null;\n    }\n\n    // Fix for issue 528\n    if (!css[min] && !css[max]) {\n      if (hasCalc) {\n        css = extendObject(clearStyles, {\n          'flex-grow': grow,\n          'flex-shrink': shrink,\n          'flex-basis': basis\n        });\n      } else {\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${basis}`\n        });\n      }\n    } else {\n      // Fix for issue 660\n      if (parent.hasWrap) {\n        css[hasCalc ? 'flex-basis' : 'flex'] = css[max] ?\n          (hasCalc ? css[max] : `${grow} ${shrink} ${css[max]}`) :\n          (hasCalc ? css[min] : `${grow} ${shrink} ${css[min]}`);\n      }\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'}) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxFlex', 'fxFlex.xs', 'fxFlex.sm', 'fxFlex.md',\n  'fxFlex.lg', 'fxFlex.xl', 'fxFlex.lt-sm', 'fxFlex.lt-md',\n  'fxFlex.lt-lg', 'fxFlex.lt-xl', 'fxFlex.gt-xs', 'fxFlex.gt-sm',\n  'fxFlex.gt-md', 'fxFlex.gt-lg'\n];\nconst selector = `\n  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],\n  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],\n  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],\n  [fxFlex.gt-md], [fxFlex.gt-lg]\n`;\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\nexport class FlexDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex';\n  protected direction = '';\n  protected wrap = false;\n\n\n  @Input('fxShrink')\n  get shrink(): string { return this.flexShrink; }\n  set shrink(value: string) {\n    this.flexShrink = value || '1';\n    this.triggerReflow();\n  }\n\n  @Input('fxGrow')\n  get grow(): string { return this.flexGrow; }\n  set grow(value: string) {\n    this.flexGrow = value || '1';\n    this.triggerReflow();\n  }\n\n  protected flexGrow = '1';\n  protected flexShrink = '1';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              protected styleBuilder: FlexStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    if (this.parentElement) {\n      this.marshal.trackValue(this.parentElement, 'layout')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.onLayoutChange.bind(this));\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    const layoutParts = layout.split(' ');\n    this.direction = layoutParts[0];\n    this.wrap = layoutParts[1] !== undefined && layoutParts[1] === 'wrap';\n    this.triggerUpdate();\n  }\n\n  /** Input to this is exclusively the basis input value */\n  protected updateWithValue(value: string) {\n    const addFlexToParent = this.layoutConfig.addFlexToParent !== false;\n    if (!this.direction) {\n      this.direction = this.getFlexFlowDirection(this.parentElement!, addFlexToParent);\n    }\n    const direction = this.direction;\n    const isHorizontal = direction.startsWith('row');\n    const hasWrap = this.wrap;\n    if (isHorizontal && hasWrap) {\n      this.styleCache = flexRowWrapCache;\n    } else if (isHorizontal && !hasWrap) {\n      this.styleCache = flexRowCache;\n    } else if (!isHorizontal && hasWrap) {\n      this.styleCache = flexColumnWrapCache;\n    } else if (!isHorizontal && !hasWrap) {\n      this.styleCache = flexColumnCache;\n    }\n    const basis = String(value).replace(';', '');\n    const parts = validateBasis(basis, this.flexGrow, this.flexShrink);\n    this.addStyles(parts.join(' '), {direction, hasWrap});\n  }\n\n  /** Trigger a style reflow, usually based on a shrink/grow input event */\n  protected triggerReflow() {\n    const activatedValue = this.activatedValue;\n    if (activatedValue !== undefined) {\n      const parts = validateBasis(activatedValue, this.flexGrow, this.flexShrink);\n      this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, parts.join(' '));\n    }\n  }\n}\n\n@Directive({inputs, selector})\nexport class DefaultFlexDirective extends FlexDirective {\n  protected inputs = inputs;\n}\n\nconst flexRowCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnCache: Map<string, StyleDefinition> = new Map();\nconst flexRowWrapCache: Map<string, StyleDefinition> = new Map();\nconst flexColumnWrapCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, OnChanges, Injectable, Optional} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexOrderStyleBuilder extends StyleBuilder {\n  buildStyles(value: string) {\n    return {order: (value && parseInt(value, 10)) || ''};\n  }\n}\n\nconst inputs = [\n  'fxFlexOrder', 'fxFlexOrder.xs', 'fxFlexOrder.sm', 'fxFlexOrder.md',\n  'fxFlexOrder.lg', 'fxFlexOrder.xl', 'fxFlexOrder.lt-sm', 'fxFlexOrder.lt-md',\n  'fxFlexOrder.lt-lg', 'fxFlexOrder.lt-xl', 'fxFlexOrder.gt-xs', 'fxFlexOrder.gt-sm',\n  'fxFlexOrder.gt-md', 'fxFlexOrder.gt-lg'\n];\nconst selector = `\n  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],\n  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],\n  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],\n  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`;\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\nexport class FlexOrderDirective extends BaseDirective2 implements OnChanges {\n\n  protected DIRECTIVE_KEY = 'flex-order';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOrderStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexOrderCache;\n}\n\nconst flexOrderCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexOrderDirective extends FlexOrderDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  Optional,\n  Injectable,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface FlexOffsetParent {\n  layout: string;\n  isRtl: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class FlexOffsetStyleBuilder extends StyleBuilder {\n  buildStyles(offset: string, parent: FlexOffsetParent) {\n    if (offset === '') {\n      offset = '0';\n    }\n    const isPercent = String(offset).indexOf('%') > -1;\n    const isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(+offset)) {\n      offset = offset + '%';\n    }\n    const horizontalLayoutKey = parent.isRtl ? 'margin-right' : 'margin-left';\n    const styles: StyleDefinition = isFlowHorizontal(parent.layout) ?\n      {[horizontalLayoutKey]: `${offset}`} : {'margin-top': `${offset}`};\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexOffset', 'fxFlexOffset.xs', 'fxFlexOffset.sm', 'fxFlexOffset.md',\n  'fxFlexOffset.lg', 'fxFlexOffset.xl', 'fxFlexOffset.lt-sm', 'fxFlexOffset.lt-md',\n  'fxFlexOffset.lt-lg', 'fxFlexOffset.lt-xl', 'fxFlexOffset.gt-xs', 'fxFlexOffset.gt-sm',\n  'fxFlexOffset.gt-md', 'fxFlexOffset.gt-lg'\n];\nconst selector = `\n  [fxFlexOffset], [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md],\n  [fxFlexOffset.lg], [fxFlexOffset.xl], [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md],\n  [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl], [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm],\n  [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`;\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\nexport class FlexOffsetDirective extends BaseDirective2 implements OnChanges {\n  protected DIRECTIVE_KEY = 'flex-offset';\n\n  constructor(protected elRef: ElementRef,\n              protected directionality: Directionality,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexOffsetStyleBuilder,\n              protected marshal: MediaMarshaller,\n              protected styler: StyleUtils) {\n    super(elRef, styleBuilder, styler, marshal);\n    this.init([this.directionality.change]);\n    // Parent DOM `layout-gap` with affect the nested child with `flex-offset`\n    if (this.parentElement) {\n      this.marshal\n        .trackValue(this.parentElement, 'layout-gap')\n        .pipe(takeUntil(this.destroySubject))\n        .subscribe(this.triggerUpdate.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected updateWithValue(value: string|number = ''): void {\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    const layout = this.getFlexFlowDirection(this.parentElement!, true);\n    const isRtl = this.directionality.value === 'rtl';\n    if (layout === 'row' && isRtl) {\n      this.styleCache = flexOffsetCacheRowRtl;\n    } else if (layout === 'row' && !isRtl) {\n      this.styleCache = flexOffsetCacheRowLtr;\n    } else if (layout === 'column' && isRtl) {\n      this.styleCache = flexOffsetCacheColumnRtl;\n    } else if (layout === 'column' && !isRtl) {\n      this.styleCache = flexOffsetCacheColumnLtr;\n    }\n    this.addStyles(value + '', {layout, isRtl});\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultFlexOffsetDirective extends FlexOffsetDirective {\n  protected inputs = inputs;\n}\n\nconst flexOffsetCacheRowRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnRtl: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheRowLtr: Map<string, StyleDefinition> = new Map();\nconst flexOffsetCacheColumnLtr: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class FlexAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    input = input || 'stretch';\n    const styles: StyleDefinition = {};\n\n    // Cross-axis\n    switch (input) {\n      case 'start':\n        styles['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        styles['align-self'] = 'flex-end';\n        break;\n      default:\n        styles['align-self'] = input;\n        break;\n    }\n\n    return styles;\n  }\n}\n\nconst inputs = [\n  'fxFlexAlign', 'fxFlexAlign.xs', 'fxFlexAlign.sm', 'fxFlexAlign.md',\n  'fxFlexAlign.lg', 'fxFlexAlign.xl', 'fxFlexAlign.lt-sm', 'fxFlexAlign.lt-md',\n  'fxFlexAlign.lt-lg', 'fxFlexAlign.lt-xl', 'fxFlexAlign.gt-xs', 'fxFlexAlign.gt-sm',\n  'fxFlexAlign.gt-md', 'fxFlexAlign.gt-lg'\n];\nconst selector = `\n  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],\n  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],\n  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],\n  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`;\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\nexport class FlexAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'flex-align';\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: FlexAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = flexAlignCache;\n}\n\nconst flexAlignCache: Map<string, StyleDefinition> = new Map();\n\n@Directive({selector, inputs})\nexport class DefaultFlexAlignDirective extends FlexAlignDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n@Injectable({providedIn: 'root'})\nexport class FlexFillStyleBuilder extends StyleBuilder {\n  buildStyles(_input: string) {\n    return FLEX_FILL_CSS;\n  }\n}\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `[fxFill], [fxFlexFill]`})\nexport class FlexFillDirective extends BaseDirective2 {\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              protected styleBuilder: FlexFillStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.addStyles('');\n  }\n\n  protected styleCache = flexFillCache;\n}\n\nconst flexFillCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Optional, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n  MediaMarshaller,\n  ElementMatcher,\n} from '@angular/flex-layout/core';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\nexport interface LayoutAlignParent {\n  layout: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class LayoutAlignStyleBuilder extends StyleBuilder {\n  buildStyles(align: string, parent: LayoutAlignParent) {\n    const css: StyleDefinition = {}, [mainAxis, crossAxis] = align.split(' ');\n\n    // Main axis\n    switch (mainAxis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (crossAxis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'space-between':\n        css['align-content'] = 'space-between';\n        css['align-items'] = 'stretch';\n        break;\n      case 'space-around':\n        css['align-content'] = 'space-around';\n        css['align-items'] = 'stretch';\n        break;\n      case 'baseline':\n        css['align-content'] = 'stretch';\n        css['align-items'] = 'baseline';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : parent.layout,\n      'box-sizing' : 'border-box',\n      'max-width': crossAxis === 'stretch' ?\n        !isFlowHorizontal(parent.layout) ? '100%' : null : null,\n      'max-height': crossAxis === 'stretch' ?\n        isFlowHorizontal(parent.layout) ? '100%' : null : null,\n    }) as StyleDefinition;\n  }\n}\n\nconst inputs = [\n  'fxLayoutAlign', 'fxLayoutAlign.xs', 'fxLayoutAlign.sm', 'fxLayoutAlign.md',\n  'fxLayoutAlign.lg', 'fxLayoutAlign.xl', 'fxLayoutAlign.lt-sm', 'fxLayoutAlign.lt-md',\n  'fxLayoutAlign.lt-lg', 'fxLayoutAlign.lt-xl', 'fxLayoutAlign.gt-xs', 'fxLayoutAlign.gt-sm',\n  'fxLayoutAlign.gt-md', 'fxLayoutAlign.gt-lg'\n];\nconst selector = `\n  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],\n  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],\n  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],\n  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`;\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\nexport class LayoutAlignDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'layout-align';\n  protected layout = 'row';  // default flex-direction\n\n  constructor(protected elRef: ElementRef,\n              protected styleUtils: StyleUtils,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: LayoutAlignStyleBuilder,\n              protected marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n    this.marshal.trackValue(this.nativeElement, 'layout')\n      .pipe(takeUntil(this.destroySubject))\n      .subscribe(this.onLayoutChange.bind(this));\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected updateWithValue(value: string) {\n    const layout = this.layout || 'row';\n    if (layout === 'row') {\n      this.styleCache = layoutAlignHorizontalCache;\n    } else if (layout === 'row-reverse') {\n      this.styleCache = layoutAlignHorizontalRevCache;\n    } else if (layout === 'column') {\n      this.styleCache = layoutAlignVerticalCache;\n    } else if (layout === 'column-reverse') {\n      this.styleCache = layoutAlignVerticalRevCache;\n    }\n    this.addStyles(value, {layout});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected onLayoutChange(matcher: ElementMatcher) {\n    const layout: string = matcher.value;\n    this.layout = layout.split(' ')[0];\n    if (!LAYOUT_VALUES.find(x => x === this.layout)) {\n      this.layout = 'row';\n    }\n    this.triggerUpdate();\n  }\n}\n\n@Directive({selector, inputs})\nexport class DefaultLayoutAlignDirective extends LayoutAlignDirective {\n  protected inputs = inputs;\n}\n\nconst layoutAlignHorizontalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignHorizontalRevCache: Map<string, StyleDefinition> = new Map();\nconst layoutAlignVerticalRevCache: Map<string, StyleDefinition> = new Map();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultLayoutDirective} from './layout/layout';\nimport {DefaultLayoutGapDirective} from './layout-gap/layout-gap';\nimport {DefaultFlexDirective} from './flex/flex';\nimport {DefaultFlexOrderDirective} from './flex-order/flex-order';\nimport {DefaultFlexOffsetDirective} from './flex-offset/flex-offset';\nimport {DefaultFlexAlignDirective} from './flex-align/flex-align';\nimport {FlexFillDirective} from './flex-fill/flex-fill';\nimport {DefaultLayoutAlignDirective} from './layout-align/layout-align';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultLayoutDirective,\n  DefaultLayoutGapDirective,\n  DefaultLayoutAlignDirective,\n  DefaultFlexOrderDirective,\n  DefaultFlexOffsetDirective,\n  FlexFillDirective,\n  DefaultFlexAlignDirective,\n  DefaultFlexDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Flex API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule, BidiModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class FlexModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Optional} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(protected elementRef: ElementRef,\n              // NOTE: not actually optional, but we need to force DI without a\n              // constructor call\n              @Optional() protected styleBuilder: GridAlignStyleBuilder,\n              protected styler: StyleUtils,\n              protected marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize with 'all' so all non-responsive APIs trigger style updates */\n  protected _source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n\n  protected _registry = new Map<string, MediaQueryList>();\n  protected _observable$ = this._source.asObservable();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this._registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this._source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this._source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this._registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this._registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is not supported; so 'print' mediaQuery activations must be used.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else {\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 7.0.0-beta.24\n   * @deletion-target v7.0.0-beta.25\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    const query = toMediaQuery(alias, this.breakpoints);\n    return this.matchMedia.isActive(query);\n  }\n\n  /**\n   * Subscribers to activation list can use this function to easily exclude overlaps\n   */\n\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(10),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: []\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n  'Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 5000px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  protected _registry: Map<string, MockMediaQueryList> = new Map();\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql = this._registry.get(mediaQuery);\n    const alreadyAdded = this._actives\n        .reduce((found, it) => (found || (mql ? (it.media === mql.media) : false)), false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this._actives.forEach(it => it.deactivate());\n    this._actives = [];\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this._actives.length > 0;\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value.trim();\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n"],"names":["inputs","DefaultGridAlignColumnsDirective","GridAlignColumnsDirective","DEFAULT_MAIN","DEFAULT_CROSS","tslib_1.__extends","GridAlignRowsStyleBuilder","_super","prototype","buildStyles","input","parent","buildCss","inline","type","Injectable","args","providedIn","StyleBuilder","GridAlignRowsDirective","elementRef","styleBuilder","styler","marshal","_this","call","this","DIRECTIVE_KEY","_inline","init","Object","defineProperty","val","coerceBooleanProperty","updateWithValue","value","styleCache","alignRowsInlineCache","alignRowsCache","addStyles","ElementRef","decorators","Optional","StyleUtils","MediaMarshaller","Input","BaseDirective2","Map","DefaultGridAlignRowsDirective","Directive","selector","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","split","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","_a","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","css","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","ALL_DIRECTIVES","DefaultGridAlignDirective","NgModule","imports","CoreModule","declarations","slice","exports","GridModule","VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","withConfig","configOptions","breakpoints","ngModule","providers","serverLoaded","provide","LAYOUT_CONFIG","useValue","tslib_1.__assign","DEFAULT_CONFIG","BREAKPOINT","multi","SERVER_TOKEN","FlexModule","ExtendedModule","Boolean","Inject","PLATFORM_ID","findByQuery","query","getActivatedValues","bpMap","key","i","activatedBreakpoints","length","activatedBp","valueMap","get","alias","undefined","has","lastHope","observeActivations","target","queries","items","bp","mediaQuery","matchMedia","observe","hook","withPrintQuery","pipe","tap","interceptEvents","filter","blockPropagation","subscribe","onMediaChange","bind","MatchMedia","BreakPointRegistry","PrintHook","ImgSrcStyleBuilder","url","content","ImgSrcDirective","defaultSrc","imgSrcCache","setValue","nativeElement","getAttribute","setAttribute","src","DefaultImgSrcDirective","ClassDirective","iterableDiffers","keyValueDiffers","renderer","ngClassInstance","NgClass","klass","ngClass","ngDoCheck","IterableDiffers","KeyValueDiffers","Renderer2","Self","DefaultClassDirective","ShowHideStyleBuilder","show","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","hasValue","DISPLAY_MAP","getDisplayStyle","set","defaultValue","getValue","triggerUpdate","ngOnChanges","changes","keys","forEach","inputKey","inputValue","currentValue","shouldShow","trackValue","takeUntil","destroySubject","addFlexToParent","lookupStyle","style","setProperty","WeakMap","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","StyleDirective","sanitizer","ngStyleInstance","NgStyle","styles","fallbackStyles","buildStyleMap","isServer","ngStyle","applyStyleToElement","clearStyles","sanitize","SecurityContext","STYLE","getType","buildMapFromList","buildRawList","buildMapFromSet","DomSanitizer","DefaultStyleDirective","INLINE","LAYOUT_VALUES","LayoutStyleBuilder","buildLayoutCSS","LayoutDirective","layoutCache","DefaultLayoutDirective","CLEAR_MARGIN_CSS","margin-left","margin-right","margin-top","margin-bottom","LayoutGapStyleBuilder","_styler","gapValue","GRID_SPECIFIER","buildGridMargin","directionality","sideEffect","_styles","paddingStyles","buildGridPadding","applyStyleToElements","lastItem","pop","gapCss","buildGapCSS","LayoutGapDirective","zone","layout","observerSubject","Subject","extraTriggers","change","asObservable","onLayoutChange","obj","buffer","ngAfterContentInit","buildChildObservable","ngOnDestroy","observer","disconnect","matcher","find","x","childrenNodes","el","nodeType","willDisplay","sort","a","b","orderA","orderB","isNaN","layoutGapCacheRowRtl","layoutGapCacheRowLtr","layoutGapCacheColumnRtl","layoutGapCacheColumnLtr","source","runOutsideAngular","MutationObserver","mutations","validatedChanges","it","addedNodes","removedNodes","some","next","childList","NgZone","Directionality","DefaultLayoutGapDirective","FlexStyleBuilder","grow","shrink","basisParts","basis","max","isFlowHorizontal","min","hasCalc","String","usingCalc","isPercent","hasUnits","isValue","isFixed","max-width","max-height","min-width","min-height","useColumnBasisZero","extendObject","flex-grow","flex-shrink","flex-basis","flex","hasWrap","box-sizing","FlexDirective","wrap","flexGrow","flexShrink","parentElement","triggerReflow","layoutParts","getFlexFlowDirection","isHorizontal","startsWith","flexRowWrapCache","flexRowCache","flexColumnWrapCache","flexColumnCache","parts","validateBasis","activatedValue","updateElement","DefaultFlexDirective","FlexOrderStyleBuilder","order","parseInt","FlexOrderDirective","flexOrderCache","DefaultFlexOrderDirective","FlexOffsetStyleBuilder","offset","horizontalLayoutKey","isRtl","FlexOffsetDirective","flexOffsetCacheRowRtl","flexOffsetCacheColumnRtl","flexOffsetCacheColumnLtr","flexOffsetCacheRowLtr","DefaultFlexOffsetDirective","FlexAlignStyleBuilder","FlexAlignDirective","flexAlignCache","DefaultFlexAlignDirective","FLEX_FILL_CSS","margin","width","height","FlexFillStyleBuilder","_input","FlexFillDirective","flexFillCache","LayoutAlignStyleBuilder","align","mainAxis","crossAxis","flex-direction","LayoutAlignDirective","layoutAlignHorizontalCache","layoutAlignHorizontalRevCache","layoutAlignVerticalCache","layoutAlignVerticalRevCache","DefaultLayoutAlignDirective","BidiModule","ROW_DEFAULT","COL_DEFAULT","GridAlignStyleBuilder","GridAlignDirective","alignCache","GridAlignColumnsStyleBuilder","alignColumnsInlineCache","alignColumnsCache","__extends","d","__","constructor","extendStatics","create","removeStyles","_document","isPlatformBrowser","classRegex_1","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","mergeAlias","dest","clone","MediaChange","mqAlias","suffix","priority","validateValue","buildCSS","toLowerCase","validateWrapValue","flex-wrap","sources","_i","arguments","TypeError","sources_1","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","toUpperCase","camelCase","name","ALIAS_DELIMITERS","validateSuffixes","list","overlapping","mergeByAlias","defaults","custom","dict","k","sortDescendingPriority","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","ALL_STYLES","styleEl_1","createElement","styleSheet","cssText","appendChild","createTextNode","mq","e","error","constructMql","isBrowser","addListener","matches","media","removeListener","isPrintBreakPoint","PRINT","toMediaQuery","locator","findByAlias","applyCssPrefixes","j","_validateCalcValue","substr","calc","initBuilderMap","element","oldMap","what","Set","delimiter","sanitizeValue","stringToKeyValue","entry","reduce","keyValuesToMap","push","vals","paddingRight","paddingBottom","paddingLeft","padding","paddingTop","marginRight","marginBottom","marginLeft","marginTop","margins","rowAxis","columnAxis","setPrototypeOf","__proto__","p","__assign","assign","t","s","n","apply","BROWSER_PROVIDER","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","property","stylesheet","StylesheetMap","addStyleToElement","clear","getStyleForElement","styleName","addOrientationBps","disableDefaultBps","disableVendorPrefixes","printWithBreakpoints","InjectionToken","factory","mru","activatedAlias","complete","releaseElement","builder","useCache","shouldCache","genStyles","addIfMissing","getFlowDirection","elements","DEFAULT_BREAKPOINTS","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","inject","bpFlattenArray","concat","isArray","findByMap","findWithPredicate","searchFn","response","_zone","_platformId","_source","BehaviorSubject","_registry","_observable$","results","mql","isActive","mqList","filterOthers","matchMedia$","registration$","Observable","registerQuery","lastChange","merge","onMQLEvent","run","buildMQL","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","_actives","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","found","deactivate","MockMediaQueryList","_mediaQuery","_isActive","_listeners","onchange","callback","listener","_","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","useClass","BREAKPOINT_PRINT","isPrinting","queue","PrintQueue","deactivations","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","startPrinting","updateStyles","stopPrinting","collectActivations","bpList","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","filterOverlaps","_media$","watchActivations","media$","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","activations","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","lookupAttributeValue","attribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values","values_1","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","Error","name_1","styleAttrValue","_parent","elementMap","elementKeyMap","watcherMap","updateMap","clearMap","subject","mc","splice","updateFn","clearFn","buildElementKeyMap","watchExtraTriggers","keyMap","delete","clearElement","builders","unsubscribe","add","triggers","watchers","newSubscription"],"mappings":"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"}