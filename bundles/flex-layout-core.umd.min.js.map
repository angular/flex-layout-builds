{"version":3,"file":"flex-layout-core.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/match-media/server-match-media.ts","../../src/lib/core/media-marshaller/print-hook.service.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n/** HOF to sort the breakpoints by priority */\nexport function sortDescendingPriority(a: BreakPoint, b: BreakPoint): number {\n  const priorityA = a.priority || 0;\n  const priorityB = b.priority || 0;\n  return priorityB - priorityA;\n}\n\nexport function sortAscendingPriority(a: BreakPoint, b: BreakPoint): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  protected _registry = new Map<string, MediaQueryList>();\n  protected _source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  protected _observable$ = this._source.asObservable();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[]): Observable<MediaChange> {\n    if (mqList) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter(change => mqList.indexOf(change.mediaQuery) > -1)\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n\n          matches.forEach(observer.next);\n          this._source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this._source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this._registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this._registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<any>window).matchMedia('all').addListener;\n\n  return canListen ? (<any>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {extendObject} from '../utils/object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../breakpoints/breakpoint-tools';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHookService, HookTarget} from './print-hook.service';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedBreakpoint(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHookService) {\n    this.observeActivations();\n  }\n\n  /**\n   * activate or deactivate a given breakpoint\n   * @param mc\n   */\n  activate(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n\n    if (bp) {\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n        this.updateStyles();\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getFallback(bpMap, key);\n      if (values) {\n        const value = values.get(key);\n        return value !== undefined ? value : '';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getFallback(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    this.updateElement(element, key, this.getValue(element, key));\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject.asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /**\n   * update all styles for all elements on the current breakpoint\n   */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const valueMap = this.getFallback(bpMap);\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n      keyMap.forEach(k => {\n        const fallbackMap = this.getFallback(bpMap, k);\n        if (fallbackMap) {\n          const value = fallbackMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getFallback(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    return bpMap.get('');\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.addPrintListener(queries))\n        .pipe(filter(this.hook.interceptEvents(target)))\n        .subscribe(this.activate.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '') {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoint?: string;\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n  'Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedBreakpoint);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    const val = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n    this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, val);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599px)',\n    priority: 10000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959px)',\n    priority: 9000,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279px)',\n    priority: 8000,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919px)',\n    priority: 7000,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 5000px)',\n    priority: 6000,\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: 200,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: 300,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: 400,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: 500,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599px)',\n    priority: 1000,\n  },\n\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959px)',\n    priority: 800,\n  },\n\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279px)',\n    priority: 700,\n  },\n  {\n     alias: 'lt-xl',\n     overlapping: true,\n     priority: 600,\n     mediaQuery: 'screen and (max-width: 1919px)',\n   }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from './breakpoint-tools';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  protected _registry: Map<string, MockMediaQueryList> = new Map();\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually activate any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activate of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql = this._registry.get(mediaQuery);\n    const alreadyAdded = this._actives\n      .reduce((found, it) => (found || (mql ? (it.media === mql.media) : false)), false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current Mock MQLs */\n  private _deactivateAll() {\n    if (this._actives.length) {\n      // Deactivate all current MQLs and reset the buffer\n      for (const it of this._actives) {\n        it.deactivate();\n      }\n      this._actives = [];\n    }\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this._actives.length > 0;\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: EventListenerOrEventListenerObject | null) {\n  }\n\n  addEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | AddEventListenerOptions): void;\n  addEventListener(_: string,\n                   __: EventListenerOrEventListenerObject,\n                   ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                  ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | EventListenerOptions): void;\n  removeEventListener(_: string,\n                      __: EventListenerOrEventListenerObject,\n                      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: EventListenerOrEventListenerObject | null) {\n  }\n\n  addEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | AddEventListenerOptions): void;\n  addEventListener(_: string,\n                   __: EventListenerOrEventListenerObject,\n                   ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | EventListenerOptions): void;\n  removeEventListener(_: string,\n                      __: EventListenerOrEventListenerObject,\n                      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList> = new Map();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n\n  updateStyles(): void;\n}\n\n@Injectable({providedIn: 'root'})\nexport class PrintHookService {\n  protected offlineActivations: BreakPoint[] | null = null;\n\n  constructor(\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      protected breakpoints: BreakPointRegistry,\n  ) {\n  }\n\n  /**\n   * Add 'print' mediaQuery: to listen for matchMedia activations\n   */\n  addPrintListener(queries: string[]) {\n    if (!!this.printAlias) {\n      queries.push('print');\n    }\n    return queries;\n  }\n\n  /**\n   * Is this service currently in Print-mode ?\n   */\n  get isPrinting(): boolean {\n    return !!this.offlineActivations;\n  }\n\n  /**\n   * What is the desired mqAlias to use while printing?\n   */\n  get printAlias(): string {\n    return this.layoutConfig.printWithBreakpoint || '';\n  }\n\n  /**\n   * Lookup breakpoint associated with print alias.\n   */\n  get printBreakPoint(): OptionalBreakPoint {\n    return this.breakpoints.findByAlias(this.printAlias!);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (change: MediaChange): boolean => {\n      if (change.mediaQuery == 'print') {\n\n        if (change.matches && !this.isPrinting) {\n          this.enablePrintMode(target, this.printBreakPoint);\n          target.updateStyles();\n        } else if (!change.matches && this.isPrinting) {\n          this.disablePrintMode(target);\n          target.updateStyles();\n        }\n      }\n\n      return !this.isPrinting;\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected enablePrintMode(target: HookTarget, bp: OptionalBreakPoint) {\n    if (!!bp) {\n      this.offlineActivations = target.activatedBreakpoints;\n      target.activatedBreakpoints = [bp];\n    }\n  }\n\n  /**\n   * Restore cached activatedBreakpoints and clear isPrinting\n   * state\n   */\n  protected disablePrintMode(target: HookTarget) {\n    target.activatedBreakpoints = this.offlineActivations!;\n    this.offlineActivations = null;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHookService} from '../media-marshaller/print-hook.service';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\n\n/**\n * Class internalizes a MatchMedia service and exposes an Observable interface.\n\n * This exposes an Observable with a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the MediaObserver\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.media$` with syntax like mediaObserver.media$.map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const onChange = (change: MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g. mediaObserver.media$.subscribe(onChange);\n *\n *      mediaObserver.media$()\n *        .pipe(\n *          filter((change: MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver {\n  /**\n   * Whether to announce gt-<xxx> breakpoint activations\n   */\n  filterOverlaps = true;\n  readonly media$: Observable<MediaChange>;\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected mediaWatcher: MatchMedia,\n      protected hook: PrintHookService) {\n    this.media$ = this.watchActivations();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    return this.mediaWatcher.isActive(this.toMediaQuery(alias));\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange> {\n    const locator = this.breakpoints;\n    const excludeOverlaps = (change: MediaChange) => {\n      const bp = locator.findByQuery(change.mediaQuery);\n      return !bp ? true : !(this.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return this.mediaWatcher.observe(this.hook.addPrintListener(mqList))\n        .pipe(\n            filter(change => change.matches),\n            filter(excludeOverlaps),\n            map((change: MediaChange) => {\n              const bp = (change.mediaQuery === 'print')\n                  ? locator.findByAlias(this.hook.printAlias!)\n                  : locator.findByQuery(change.mediaQuery);\n              if (bp) {\n                change.mediaQuery = bp.mediaQuery;\n              }\n\n              return mergeAlias(change, bp);\n            })\n        );\n  }\n\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private toMediaQuery(query: string) {\n    const locator = this.breakpoints;\n    const bp = locator.findByAlias(query) || locator.findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value.trim();\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","removeStyles","_document","platformId","isPlatformBrowser","classRegex_1","Array","from","querySelectorAll","CLASS_NAME","forEach","el","classList","contains","parentNode","removeChild","className","replace","buildLayoutCSS","value","_a","validateValue","buildCSS","toLowerCase","split","direction","wrap","inline","LAYOUT_VALUES","find","x","INLINE","validateWrapValue","display","box-sizing","flex-direction","flex-wrap","extendObject","dest","sources","_i","arguments","length","TypeError","sources_1","source","key","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","slice","toUpperCase","camelCase","name","ALIAS_DELIMITERS","map","join","validateSuffixes","list","bp","suffix","alias","overlapping","mergeByAlias","defaults","custom","dict","keys","k","sortDescendingPriority","a","priorityA","priority","sortAscendingPriority","buildQueryCss","mediaQueries","filter","it","ALL_STYLES","query","styleEl_1","createElement","setAttribute","styleSheet","cssText","appendChild","createTextNode","mq","e","console","error","constructMql","isBrowser","matchMedia","addListener","matches","media","removeListener","mergeAlias","mqAlias","applyCssPrefixes","target","isNaN","validateBasis","basis","grow","shrink","parts","j","indexOf","_validateCalcValue","substring","trim","substr","calc","initBuilderMap","element","input","undefined","oldMap","get","Map","set","setPrototypeOf","__proto__","p","__assign","assign","t","s","i","n","call","apply","BROWSER_PROVIDER","provide","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","PLATFORM_ID","multi","type","NgModule","args","providers","CoreModule","MediaChange","mediaQuery","property","clone","stylesheet","StylesheetMap","addStyleToElement","style","clearStyles","clear","getStyleForElement","styleName","styles","Injectable","providedIn","DEFAULT_CONFIG","addFlexToParent","addOrientationBps","disableDefaultBps","disableVendorPrefixes","serverLoaded","useColumnBasisZero","LAYOUT_CONFIG","InjectionToken","factory","SERVER_TOKEN","BREAKPOINT","BaseDirective2","elementRef","styleBuilder","styler","marshal","DIRECTIVE_KEY","inputs","mru","destroySubject","Subject","styleCache","defineProperty","nativeElement","parentElement","getValue","setValue","activatedBreakpoint","ngOnChanges","changes","_this","val","currentValue","ngOnDestroy","next","complete","releaseElement","init","extraTriggers","updateWithValue","bind","addStyles","parent","builder","useCache","shouldCache","genStyles","buildStyles","tslib_1.__assign","applyStyleToElement","sideEffect","triggerUpdate","updateElement","getFlexFlowDirection","addIfMissing","getFlowDirection","elements","applyStyleToElements","DEFAULT_BREAKPOINTS","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","breakpoints","inject","layoutConfig","bpFlattenArray","concat","v","isArray","BreakPointRegistry","findByMap","items","sort","findByAlias","findWithPredicate","findByQuery","searchFn","response","decorators","Inject","MatchMedia","_zone","_platformId","_registry","_source","BehaviorSubject","_observable$","asObservable","isActive","mql","observe","mqList","matchMedia$","pipe","change","registration$","Observable","observer","registerQuery","lastChange","pop","merge","onMQLEvent","run","buildMQL","push","NgZone","MockMatchMedia","_breakpoints","_super","autoRegisterQueries","useOverlaps","_actives","tslib_1.__extends","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","reduce","found","deactivate","has","MockMediaQueryList","_mediaQuery","_isActive","_listeners","onchange","callback","listener","_","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","useClass","ServerMediaQueryList","ServerMatchMedia","activateBreakpoint","lookupBreakpoint","deactivateBreakpoint","PrintHookService","offlineActivations","addPrintListener","queries","printAlias","printWithBreakpoint","interceptEvents","isPrinting","enablePrintMode","printBreakPoint","updateStyles","disablePrintMode","activatedBreakpoints","MediaObserver","mediaWatcher","hook","filterOverlaps","media$","watchActivations","toMediaQuery","buildObservable","locator","excludeOverlaps","StyleUtils","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","lookupStyle","hasInlineValue","lookupInlineStyle","isPlatformServer","lookupAttributeValue","attribute","getAttribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values","values_1","setProperty","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","Error","name_1","styleAttrValue","Optional","Boolean","StyleBuilder","_input","_styles","_parent","MediaMarshaller","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","observeActivations","mc","splice","updateFn","clearFn","buildElementKeyMap","watchExtraTriggers","bpMap","getFallback","hasValue","trackValue","valueMap","keyMap","Set","delete","fallbackMap","clearElement","builders","unsubscribe","add","triggers","watchers","newSubscription","subscribe","activatedBp"],"mappings":"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"}