{"version":3,"file":"flex-layout-core.umd.min.js","sources":["../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/media-change.ts","../../src/lib/core/observable-media/observable-media.ts","../../src/lib/core/module.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/responsive-activation/responsive-activation.ts","../../src/lib/core/base/base.ts","../../src/lib/core/base/base-adapter.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/match-media/server-match-media.ts","../../src/lib/core/media-monitor/media-monitor.ts","../../src/lib/core/media-observer/media-observer.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value.trim();\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {prioritySort} from '../breakpoints/breakpoint-tools';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\ntype Builder = Function;\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();\n  private builderMap: BuilderMap = new WeakMap();\n  private clearBuilderMap: BuilderMap = new WeakMap();\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedBreakpoint(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry) {\n    this.registerBreakpoints();\n    this.matchMedia.observe().subscribe(this.activate.bind(this));\n  }\n\n  /**\n   * activate or deactivate a given breakpoint\n   * @param mc\n   */\n  activate(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (mc.matches && bp) {\n      this.activatedBreakpoints.push(bp);\n      this.activatedBreakpoints.sort(prioritySort);\n    } else if (!mc.matches && bp) {\n      // Remove the breakpoint when it's deactivated\n      this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n    }\n    this.updateStyles();\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param builder optional so that custom bp directives don't have to re-provide this\n   * @param clearBuilder optional so that custom bp directives don't have to re-provide this\n   * @param observables\n   */\n  init(element: HTMLElement,\n       key: string,\n       builder?: Builder,\n       clearBuilder?: Builder,\n       observables: Observable<any>[] = []): void {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n    initBuilderMap(this.builderMap, element, key, builder);\n    initBuilderMap(this.clearBuilderMap, element, key, clearBuilder);\n    if (observables) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...observables).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getFallback(bpMap, key);\n      if (values) {\n        const value = values.get(key);\n        return value !== undefined ? value : '';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getFallback(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    this.updateElement(element, key, this.getValue(element, key));\n  }\n\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject.asObservable()\n      .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const valueMap = this.getFallback(bpMap);\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n      keyMap.forEach(k => {\n        const fallbackMap = this.getFallback(bpMap, k);\n        if (fallbackMap) {\n          const value = fallbackMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearBuilderMap.get(element);\n    if (builders) {\n      const builder: Builder | undefined = builders.get(key);\n      if (builder) {\n        builder();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.builderMap.get(element);\n    if (builders) {\n      const builder: Builder | undefined = builders.get(key);\n      if (builder) {\n        builder(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getFallback(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    return bpMap.get('');\n  }\n\n  private registerBreakpoints() {\n    const queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.matchMedia.registerQuery(queries);\n  }\n}\n\nfunction initBuilderMap(map: BuilderMap, element: HTMLElement, key: string, input?: Builder): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n/** HOF to sort the breakpoints by priority */\nexport function prioritySort(a: BreakPoint, b: BreakPoint): number {\n  const priorityA = a.priority || 0;\n  const priorityB = b.priority || 0;\n  return priorityB - priorityA;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  protected _registry = new Map<string, MediaQueryList>();\n  protected _source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  protected _observable$ = this._source.asObservable();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    if (mediaQuery) {\n      this.registerQuery(mediaQuery);\n    }\n\n    return this._observable$.pipe(\n      filter(change => (mediaQuery ? (change.mediaQuery === mediaQuery) : true))\n    );\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? Array.from(new Set(mediaQuery)) : [mediaQuery];\n\n    if (list.length > 0) {\n      buildQueryCss(list, this._document);\n    }\n\n    list.forEach(query => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this._source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this._registry.get(query);\n\n      if (!mql) {\n        mql = this._buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this._registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        onMQLEvent(mql as unknown as MediaQueryListEvent);\n      }\n    });\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: {[key: string]: any} = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n` ;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<any>window).matchMedia('all').addListener;\n\n  return canListen ? (<any>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {extendObject} from '../utils/object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(min-width: 0px) and (max-width: 599px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)',\n    priority: 7,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)',\n    priority: 10,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)',\n    priority: 8,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)',\n    priority: 9,\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)',\n    priority: 9,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)',\n    priority: 8,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)',\n    priority: 10,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1919px)',\n    priority: 7,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)',\n    priority: 100,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n  'Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint | null {\n    return this._registry.find(bp => bp.alias == alias) || null;\n  }\n\n  findByQuery(query: string): BreakPoint | null {\n    return this._registry.find(bp => bp.mediaQuery == query) || null;\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => !!it.suffix ? it.suffix : '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable, PartialObserver, Subscribable, Subscription} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {mergeAlias} from '../add-alias';\nimport {BreakPoint} from '../breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n * @deprecated use MediaObserver instead\n * @deletion-target v7.0.0-beta.21-147d224\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n  abstract subscribe(observer?: PartialObserver<MediaChange>): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import {filter} from 'rxjs/operators/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .pipe(\n *          filter((change:MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n *  @deprecated use MediaObserver instead\n *  @deletion-target v7.0.0-beta.21-147d224\n */\n@Injectable({providedIn: 'root'})\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    return this.mediaWatcher.isActive(this._toMediaQuery(alias));\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(observerOrNext?: PartialObserver<MediaChange> | ((value: MediaChange) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    if (observerOrNext) {\n      if (typeof observerOrNext === 'object') {\n        return this.observable$.subscribe(observerOrNext.next, observerOrNext.error,\n          observerOrNext.complete);\n      }\n    }\n\n    return this.observable$.subscribe(observerOrNext, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    const queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const excludeOverlaps = (change: MediaChange) => {\n      const bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(this.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return this.mediaWatcher.observe().pipe(\n      filter(change => change.matches),\n      filter(excludeOverlaps),\n      map((change: MediaChange) =>\n        mergeAlias(change, this._findByQuery(change.mediaQuery)))\n    );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias: string) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query: string) {\n    const bp: BreakPoint | null = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private readonly observable$: Observable<MediaChange>;\n}\n\n/**\n * @deprecated\n * @deletion-target v7.0.0-beta.21-147d224\n */\nexport const ObservableMediaProvider = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  useClass: MediaService\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\nimport {ObservableMediaProvider} from './observable-media/observable-media';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER, ObservableMediaProvider]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {MediaChange, MediaQuerySubscriber} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\n\n/**\n * @deprecated\n * @deletion-target v7.0.0-beta.21-147d224\n */\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\n/**\n * @deprecated\n * @deletion-target v7.0.0-beta.21-147d224\n */\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n * @deprecated\n * @deletion-target v7.0.0-beta.21-147d224\n */\nexport class ResponsiveActivation {\n  private _activatedInputKey: string = '';\n  private _registryMap: BreakPointX[] = this._buildRegistryMap();\n  private _subscribers: Subscription[] = this._configureChangeObservers();\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n  }\n\n  /**\n   * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n   * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n   * important when several media queries are 'registered' and from which, the browser uses the\n   * first matching media query.\n   */\n  get registryFromLargest(): BreakPointX[] {\n    return [...this._registryMap].reverse();\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    const key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  hasKeyValue(key: string) {\n    return this._options.inputKeys[key] !== undefined;\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach(link => link.unsubscribe());\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): Subscription[] {\n    const subscriptions: Subscription[] = [];\n\n    this._registryMap.forEach(bp => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        const buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n          this._mediaMonitor\n              .observe(bp.alias)\n              .pipe(map(buildChanges))\n              .subscribe(change => {\n                this._onMonitorEvents(change);\n              })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this._mediaMonitor.breakpoints\n      .map(bp => <BreakPointX>extendObject({}, bp, {\n        baseKey: this._options.baseKey,         // e.g. layout, hide, self-align, flex-wrap\n        key: this._options.baseKey + bp.suffix  // e.g. layoutGtSm, layoutMd, layoutGtLg\n      }))\n      .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property === this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key: string): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                       // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey === currentKey) ? '' : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey: string) {\n    const isMissingKey = (key: string) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      this._mediaMonitor.activeOverlaps.some(bp => {\n        const key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key: string) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  SimpleChange,\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  StyleUtils,\n} from '../style-utils/style-utils';\nimport {ResponsiveActivation, KeyOptions} from '../responsive-activation/responsive-activation';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {MediaQuerySubscriber} from '../media-change';\nimport {StyleBuilder} from '../style-builder/style-builder';\n\n/**\n * Abstract base class for the Layout API styling directives.\n * @deprecated\n * @deletion-target v7.0.0-beta.21-147d224\n */\nexport abstract class BaseDirective implements OnDestroy, OnChanges {\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    const change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n  protected constructor(protected _mediaMonitor: MediaMonitor,\n                        protected _elementRef: ElementRef,\n                        protected _styler: StyleUtils,\n                        protected _styleBuilder?: StyleBuilder) {\n  }\n\n  /**\n   * Does this directive have 1 or more responsive keys defined\n   * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n   */\n  hasResponsiveAPI(baseKey: string) {\n    const totalKeys = Object.keys(this._inputMap).length;\n    const baseValue = this._inputMap[baseKey];\n    return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    delete this._mediaMonitor;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  protected get nativeElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this._styleBuilder!;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this._styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this._styleCache.set(input, genStyles);\n      }\n    }\n\n    this._applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Access the current value (if any) of the @Input property */\n  protected _queryInput(key: string) {\n    return this._inputMap[key];\n  }\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    const val = this._queryInput(key);\n    const hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows us to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source: HTMLElement = this.nativeElement): string {\n    const query = 'display';\n    return this._styler.lookupStyle(source, query);\n  }\n\n  /** Quick accessor to raw attribute value on the target DOM element */\n  protected _getAttributeValue(attribute: string,\n                               source: HTMLElement = this.nativeElement): string {\n    return this._styler.lookupAttributeValue(source, attribute);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      let [value, hasInlineValue] = this._styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this._styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 element: HTMLElement = this.nativeElement) {\n    this._styler.applyStyleToElement(element, style, value);\n  }\n\n  /** Applies styles given via string pair or object map to the directive's element */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[]) {\n    this._styler.applyStyleToElements(style, elements);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      if (!!key) {\n        this._inputMap[key] = source;\n      }\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(keyOptions, this._mediaMonitor,\n        (change) => onMediaQueryChange(change));\n    }\n    return this._mqActivation;\n  }\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** MediaQuery Activation Tracker */\n  protected _mqActivation?: ResponsiveActivation;\n\n  /** Dictionary of input keys with associated values */\n  protected _inputMap: {[key: string]: any} = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n\n  /** Cache map for style computation */\n  protected _styleCache: Map<string, StyleDefinition> = new Map();\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef} from '@angular/core';\n\nimport {BaseDirective} from './base';\nimport {ResponsiveActivation} from '../responsive-activation/responsive-activation';\nimport {MediaQuerySubscriber} from '../media-change';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {StyleUtils} from '../style-utils/style-utils';\n\n\n/**\n * Adapter to the BaseDirective abstract class so it can be used via composition.\n * @see BaseDirective\n * @deprecated\n * @deletion-target v7.0.0-beta.21-147d224\n */\nexport class BaseDirectiveAdapter extends BaseDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation!;\n  }\n\n  /**\n   * BaseDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n    super(_mediaMonitor, _elementRef, _styler);\n  }\n\n  /**\n    * Does this directive have 1 or more responsive keys defined\n    * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n    */\n  hasResponsiveAPI() {\n   return super.hasResponsiveAPI(this._baseKey);\n  }\n\n  /**\n   * @see BaseDirective._queryInput\n   */\n  queryInput(key: string | null) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error(\n        `Invalid class value '${key}' provided. Did you want to cache the raw value?`\n      );\n    }\n  }\n\n  /**\n   * @see BaseDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    if (key) {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source ? source.join(' ') : '';\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes: string[] = [];\n    if (source) {\n      for (let prop in source) {\n        if (!!source[prop]) {\n          classes.push(prop);\n        }\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  protected destroySubject: Subject<void> = new Subject();\n  protected observables: Observable<any>[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedBreakpoint);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.')[1] || '';\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  protected init(): void {\n    this.marshal.init(this.elementRef.nativeElement, this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this), this.clearStyles.bind(this), this.observables);\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  protected triggerUpdate() {\n    const val = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n    this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, val);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  protected _registry: Map<string, MockMediaQueryList> = new Map();\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually activate any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activate of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql = this._registry.get(mediaQuery);\n    const alreadyAdded = this._actives\n      .reduce((found, it) => (found || (mql ? (it.media === mql.media) : false)), false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current Mock MQLs */\n  private _deactivateAll() {\n    if (this._actives.length) {\n      // Deactivate all current MQLs and reset the buffer\n      for (const it of this._actives) {\n        it.deactivate();\n      }\n      this._actives = [];\n    }\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this._actives.length > 0;\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: EventListenerOrEventListenerObject | null) {\n  }\n\n  addEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | AddEventListenerOptions): void;\n  addEventListener(_: string,\n                   __: EventListenerOrEventListenerObject,\n                   ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                  ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | EventListenerOptions): void;\n  removeEventListener(_: string,\n                      __: EventListenerOrEventListenerObject,\n                      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: EventListenerOrEventListenerObject | null) {\n  }\n\n  addEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | AddEventListenerOptions): void;\n  addEventListener(_: string,\n                   __: EventListenerOrEventListenerObject,\n                   ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | EventListenerOptions): void;\n  removeEventListener(_: string,\n                      __: EventListenerOrEventListenerObject,\n                      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList> = new Map();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\nimport {mergeAlias} from '../add-alias';\n\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n * @deprecated\n * @deletion-target v7.0.0-beta.21-147d224\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    return this._breakpoints.overlappings\n      .reverse()\n      .filter(bp => this._matchMedia.isActive(bp.mediaQuery));\n  }\n\n  get active(): BreakPoint | null {\n    const items = this.breakpoints.reverse();\n    const first = items.find(bp => bp.alias !== '' && this._matchMedia.isActive(bp.mediaQuery));\n    return first || null;\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    const bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias: string = ''): Observable<MediaChange> {\n    const bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    const hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    const media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return media$.pipe(\n      map(change => mergeAlias(change, bp)),\n      filter(hasAlias)\n    );\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    const queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {mergeAlias} from '../add-alias';\n\n/**\n * Class internalizes a MatchMedia service and exposes an Observable interface.\n\n * This exposes an Observable with a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the MediaObserver\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.media$` with syntax like mediaObserver.media$.map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const onChange = (change: MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g. mediaObserver.media$.subscribe(onChange);\n *\n *      mediaObserver.media$()\n *        .pipe(\n *          filter((change: MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver {\n  /**\n   * Whether to announce gt-<xxx> breakpoint activations\n   */\n  filterOverlaps = true;\n  readonly media$: Observable<MediaChange>;\n\n  constructor(private breakpoints: BreakPointRegistry, private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.media$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    return this.mediaWatcher.isActive(this._toMediaQuery(alias));\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    const queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const excludeOverlaps = (change: MediaChange) => {\n      const bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(this.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return this.mediaWatcher.observe()\n      .pipe(\n        filter(change => change.matches),\n        filter(excludeOverlaps),\n        map((change: MediaChange) =>\n          mergeAlias(change, this._findByQuery(change.mediaQuery))\n        )\n      );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias: string) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query: string) {\n    const bp = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n}\n"],"names":["decorators","type","Optional","Inject","args","SERVER_TOKEN","Object","PLATFORM_ID","undefined","LAYOUT_CONFIG","StyleUtils","StyleBuilder","this","shouldCache","prototype","sideEffect","_input","_styles","_parent","MediaMarshaller","matchMedia","breakpoints","activatedBreakpoints","elementMap","Map","elementKeyMap","WeakMap","watcherMap","builderMap","clearBuilderMap","subject","Subject","registerBreakpoints","observe","subscribe","activate","bind","defineProperty","alias","mc","bp","findByQuery","mediaQuery","matches","push","sort","prioritySort","splice","indexOf","updateStyles","init","element","key","builder","clearBuilder","observables","_this","keyMap","get","Set","set","add","initBuilderMap","watchers","newSubscription","merge","apply","currentValue","getValue","updateElement","bpMap","values","getFallback","value","hasValue","setValue","val","trackValue","asObservable","pipe","filter","v","forEach","el","valueMap","k","delete","fallbackMap","clearElement","builders","next","releaseElement","s","unsubscribe","_","query","i","length","activatedBp","has","queries","sortedItems","map","registerQuery","Injectable","providedIn","MatchMedia","BreakPointRegistry","__extends","d","b","__","constructor","extendStatics","create","removeStyles","_document","platformId","isPlatformBrowser","classRegex_1","Array","from","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","replace","extendObject","dest","sources","_i","arguments","TypeError","_a","sources_1","source","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","slice","toUpperCase","camelCase","name","ALIAS_DELIMITERS","split","join","validateSuffixes","list","suffix","overlapping","mergeByAlias","defaults","custom","dict","keys","a","priorityA","priority","buildQueryCss","mediaQueries","it","ALL_STYLES","styleEl_1","createElement","setAttribute","styleSheet","cssText","appendChild","createTextNode","mq","e","console","error","constructMql","isBrowser","addListener","media","removeListener","mergeAlias","mqAlias","buildLayoutCSS","validateValue","buildCSS","toLowerCase","direction","wrap","inline","LAYOUT_VALUES","find","x","INLINE","validateWrapValue","display","box-sizing","flex-direction","flex-wrap","applyCssPrefixes","target","isNaN","validateBasis","basis","grow","shrink","parts","j","_validateCalcValue","substring","trim","substr","calc","input","oldMap","setPrototypeOf","__proto__","p","__assign","assign","t","n","call","BROWSER_PROVIDER","provide","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","multi","BREAKPOINT","InjectionToken","factory","RESPONSIVE_ALIASES","DEFAULT_BREAKPOINTS","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","DEFAULT_CONFIG","addFlexToParent","addOrientationBps","disableDefaultBps","disableVendorPrefixes","serverLoaded","useColumnBasisZero","BREAKPOINTS","inject","layoutConfig","bpFlattenArray","concat","isArray","_registry","overlaps","nonOverlaps","findByAlias","MediaChange","property","clone","_zone","_platformId","_source","BehaviorSubject","_observable$","isActive","mql","change","onMQLEvent","run","_buildMQL","NgZone","ObservableMedia","MediaService","mediaWatcher","filterOverlaps","_registerBreakPoints","observable$","_buildObservable","_toMediaQuery","observerOrNext","complete","excludeOverlaps","_findByQuery","_findByAlias","ObservableMediaProvider","useClass","NgModule","providers","CoreModule","stylesheet","StylesheetMap","addStyleToElement","style","clearStyles","clear","getStyleForElement","styleName","styles","KeyOptions","baseKey","defaultValue","inputKeys","ResponsiveActivation","_options","_mediaMonitor","_onMediaChanges","_activatedInputKey","_registryMap","_buildRegistryMap","_subscribers","_configureChangeObservers","reverse","activatedInputKey","hasKeyValue","_lookupKeyValue","destroy","link","subscriptions","_keyInUse","buildChanges","_onMonitorEvents","_calculateActivatedValue","current","currentKey","newKey","_validateInputKey","activatedInput","inputKey","isMissingKey","activeOverlaps","some","BaseDirective","_elementRef","_styler","_styleBuilder","_inputMap","_hasInitialized","_styleCache","_mqActivation","previousVal","SimpleChange","ngOnChanges","hasResponsiveAPI","ngOnInit","Error","ngOnDestroy","nativeElement","addStyles","parent","useCache","genStyles","buildStyles","_applyStyleToElement","_queryInput","_getDefaultVal","fallbackVal","_getDisplayStyle","lookupStyle","_getAttributeValue","attribute","lookupAttributeValue","_getFlexFlowDirection","addIfMissing","getFlowDirection","elements","applyStyleToElements","applyStyleToElement","_applyStyleToElements","_cacheInput","prop","_listenForMediaQueryChanges","onMediaQueryChange","keyOptions","obj","children","buffer","BaseDirectiveAdapter","_super","_baseKey","tslib_1.__extends","mqa","queryInput","cacheInput","cacheRaw","_cacheInputRaw","_cacheInputArray","_cacheInputObject","_cacheInputString","listenForMediaQueryChanges","classes","BaseDirective2","elementRef","styleBuilder","styler","marshal","DIRECTIVE_KEY","inputs","destroySubject","mru","styleCache","parentElement","activatedBreakpoint","changes","updateWithValue","tslib_1.__assign","triggerUpdate","getFlexFlowDirection","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","_actives","clearAll","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","reduce","found","deactivate","MockMediaQueryList","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","ServerMediaQueryList","ServerMatchMedia","activateBreakpoint","lookupBreakpoint","deactivateBreakpoint","MediaMonitor","_matchMedia","_registerBreakpoints","items","overlappings","hasAlias","MediaObserver","media$","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","isPlatformServer","getAttribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","setProperty","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","name_1","styleAttrValue","Boolean"],"mappings":"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"}