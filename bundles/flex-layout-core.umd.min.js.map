{"version":3,"file":"flex-layout-core.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/utils/sort.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-marshaller/print-hook.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize with 'all' so all non-responsive APIs trigger style updates */\n  protected _source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n\n  protected _registry = new Map<string, MediaQueryList>();\n  protected _observable$ = this._source.asObservable();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this._registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this._source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this._source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this._registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this._registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is not supported; so 'print' mediaQuery activations must be used.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else {\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 7.0.0-beta.24\n   * @deletion-target v7.0.0-beta.25\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    const query = toMediaQuery(alias, this.breakpoints);\n    return this.matchMedia.isActive(query);\n  }\n\n  /**\n   * Subscribers to activation list can use this function to easily exclude overlaps\n   */\n\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(10),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: []\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n  'Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 5000px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  protected _registry: Map<string, MockMediaQueryList> = new Map();\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql = this._registry.get(mediaQuery);\n    const alreadyAdded = this._actives\n        .reduce((found, it) => (found || (mql ? (it.media === mql.media) : false)), false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this._actives.forEach(it => it.deactivate());\n    this._actives = [];\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this._actives.length > 0;\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value.trim();\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","removeStyles","_document","platformId","isPlatformBrowser","classRegex_1","Array","from","querySelectorAll","CLASS_NAME","forEach","el","classList","contains","parentNode","removeChild","className","replace","mergeAlias","dest","source","clone","MediaChange","mqAlias","alias","mediaQuery","suffix","priority","buildLayoutCSS","value","_a","validateValue","buildCSS","toLowerCase","split","direction","wrap","inline","LAYOUT_VALUES","find","x","INLINE","validateWrapValue","display","box-sizing","flex-direction","flex-wrap","extendObject","sources","_i","arguments","length","TypeError","sources_1","key","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","slice","toUpperCase","camelCase","name","ALIAS_DELIMITERS","map","join","validateSuffixes","list","bp","overlapping","mergeByAlias","defaults","custom","dict","keys","k","sortDescendingPriority","a","priorityA","sortAscendingPriority","buildQueryCss","mediaQueries","filter","it","ALL_STYLES","query","styleEl_1","createElement","setAttribute","styleSheet","cssText","appendChild","createTextNode","mq","e","console","error","constructMql","isBrowser","matchMedia","addListener","matches","media","removeListener","isPrintBreakPoint","startsWith","PRINT","toMediaQuery","locator","findByAlias","findByQuery","applyCssPrefixes","target","isNaN","validateBasis","basis","grow","shrink","parts","j","indexOf","_validateCalcValue","substring","trim","substr","calc","initBuilderMap","element","input","undefined","oldMap","get","Map","set","setPrototypeOf","__proto__","p","__assign","assign","t","s","i","n","call","apply","BROWSER_PROVIDER","provide","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","PLATFORM_ID","multi","type","NgModule","args","providers","CoreModule","property","stylesheet","StylesheetMap","addStyleToElement","style","clearStyles","clear","getStyleForElement","styleName","styles","Injectable","providedIn","DEFAULT_CONFIG","addFlexToParent","addOrientationBps","disableDefaultBps","disableVendorPrefixes","serverLoaded","useColumnBasisZero","printWithBreakpoints","LAYOUT_CONFIG","InjectionToken","factory","SERVER_TOKEN","BREAKPOINT","BaseDirective2","elementRef","styleBuilder","styler","marshal","DIRECTIVE_KEY","inputs","mru","destroySubject","Subject","styleCache","defineProperty","nativeElement","parentElement","getValue","setValue","activatedAlias","ngOnChanges","changes","_this","val","currentValue","ngOnDestroy","next","complete","releaseElement","init","extraTriggers","updateWithValue","bind","addStyles","parent","builder","useCache","shouldCache","genStyles","buildStyles","tslib_1.__assign","applyStyleToElement","sideEffect","triggerUpdate","getFlexFlowDirection","addIfMissing","getFlowDirection","elements","applyStyleToElements","DEFAULT_BREAKPOINTS","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","breakpoints","inject","layoutConfig","bpFlattenArray","concat","v","isArray","BreakPointRegistry","findByMap","items","sort","findWithPredicate","searchFn","response","decorators","Inject","MatchMedia","_zone","_platformId","_source","BehaviorSubject","_registry","_observable$","asObservable","results","mql","push","isActive","observe","mqList","filterOthers","matchMedia$","pipe","change","registration$","Observable","observer","registerQuery","lastChange","pop","merge","onMQLEvent","run","buildMQL","NgZone","MockMatchMedia","_breakpoints","_super","autoRegisterQueries","useOverlaps","_actives","tslib_1.__extends","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","reduce","found","deactivate","has","MockMediaQueryList","_mediaQuery","_isActive","_listeners","onchange","callback","listener","_","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","useClass","BREAKPOINT_PRINT","PrintHook","isPrinting","queue","PrintQueue","deactivations","withPrintQuery","queries","isPrintEvent","printAlias","getEventBreakpoints","printBreakPoints","updateEvent","event","interceptEvents","startPrinting","updateStyles","stopPrinting","collectActivations","blockPropagation","bpList","activatedBreakpoints","addPrintBreakpoints","printBreakpoints","addBreakpoint","MediaObserver","hook","filterOverlaps","_media$","watchActivations","media$","buildObservable","hasChanges","isValidQuery","excludeOverlaps","debounceTime","switchMap","of","findAllActivations","mergeMQAlias","replaceWithPrintAlias","activations","StyleUtils","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","lookupStyle","hasInlineValue","lookupInlineStyle","isPlatformServer","lookupAttributeValue","attribute","getAttribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values","values_1","setProperty","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","Error","name_1","styleAttrValue","Optional","Boolean","StyleBuilder","_input","_styles","_parent","MediaMarshaller","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","observeActivations","onMediaChange","mc","splice","updateFn","clearFn","buildElementKeyMap","watchExtraTriggers","bpMap","getActivatedValues","hasValue","updateElement","trackValue","keyMap","Set","valueMap","delete","clearElement","builders","unsubscribe","add","triggers","watchers","newSubscription","subscribe","activatedBp","lastHope","tap"],"mappings":"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"}