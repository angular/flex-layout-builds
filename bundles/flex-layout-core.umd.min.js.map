{"version":3,"file":"flex-layout-core.umd.min.js","sources":["../../src/lib/core/media-marshaller/media-marshaller.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/media-change.ts","../../src/lib/core/observable-media/observable-media.ts","../../src/lib/core/module.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/responsive-activation/responsive-activation.ts","../../src/lib/core/base/base.ts","../../src/lib/core/base/base-adapter.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/match-media/server-match-media.ts","../../src/lib/core/media-monitor/media-monitor.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {prioritySort} from '../breakpoints/breakpoint-tools';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\ntype Builder = Function;\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private watcherMap: WatcherMap = new WeakMap();\n  private builderMap: BuilderMap = new WeakMap();\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedBreakpoint(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry) {\n    this.matchMedia.observe().subscribe(this.activate.bind(this));\n  }\n\n  /**\n   * activate or deactivate a given breakpoint\n   * @param mc\n   */\n  activate(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (mc.matches && bp) {\n      this.activatedBreakpoints.push(bp);\n      this.activatedBreakpoints.sort(prioritySort);\n    } else if (!mc.matches && bp) {\n      // Remove the breakpoint when it's deactivated\n      this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n    }\n    this.updateStyles();\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param builder optional so that custom bp directives don't have to re-provide this\n   * @param observables\n   */\n  init(element: HTMLElement,\n       key: string,\n       builder?: Builder,\n       observables: Observable<any>[] = []): void {\n    if (builder) {\n      let builders = this.builderMap.get(element);\n      if (!builders) {\n        builders = new Map();\n        this.builderMap.set(element, builders);\n      }\n      builders.set(key, builder);\n    }\n    if (observables) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...observables).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getFallback(bpMap);\n      if (values) {\n        const value = values.get(key);\n        return value !== undefined ? value : '';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getFallback(bpMap);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    this.updateElement(element, key, this.getValue(element, key));\n  }\n\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject.asObservable()\n      .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const valueMap = this.getFallback(bpMap);\n      if (valueMap) {\n        valueMap.forEach((v, k) => this.updateElement(el, k, v));\n      }\n    });\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.builderMap.get(element);\n    if (builders) {\n      const builder: Builder | undefined = builders.get(key);\n      if (builder) {\n        builder(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   */\n  private getFallback(bpMap: BreakpointMap): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        return valueMap;\n      }\n    }\n    return bpMap.get('');\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n/** HOF to sort the breakpoints by priority */\nexport function prioritySort(a: BreakPoint, b: BreakPoint): number {\n  const priorityA = a.priority || 0;\n  const priorityB = b.priority || 0;\n  return priorityB - priorityA;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  protected _registry = new Map<string, MediaQueryList>();\n  protected _source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  protected _observable$ = this._source.asObservable();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    if (mediaQuery) {\n      this.registerQuery(mediaQuery);\n    }\n\n    return this._observable$.pipe(\n      filter(change => (mediaQuery ? (change.mediaQuery === mediaQuery) : true))\n    );\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? Array.from(new Set(mediaQuery)) : [mediaQuery];\n\n    if (list.length > 0) {\n      buildQueryCss(list, this._document);\n    }\n\n    list.forEach(query => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this._source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this._registry.get(query);\n\n      if (!mql) {\n        mql = this._buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this._registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        onMQLEvent(mql as unknown as MediaQueryListEvent);\n      }\n    });\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: {[key: string]: any} = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n` ;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<any>window).matchMedia('all').addListener;\n\n  return canListen ? (<any>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {extendObject} from '../utils/object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(min-width: 0px) and (max-width: 599px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)',\n    priority: 7,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)',\n    priority: 10,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)',\n    priority: 8,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)',\n    priority: 9,\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)',\n    priority: 9,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)',\n    priority: 8,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)',\n    priority: 10,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1919px)',\n    priority: 7,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)',\n    priority: 100,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n  'Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint | null {\n    return this._registry.find(bp => bp.alias == alias) || null;\n  }\n\n  findByQuery(query: string): BreakPoint | null {\n    return this._registry.find(bp => bp.mediaQuery == query) || null;\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => !!it.suffix ? it.suffix : '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable, PartialObserver, Subscribable, Subscription} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {mergeAlias} from '../add-alias';\nimport {BreakPoint} from '../breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n * @deprecated use MediaObserver instead\n * @deletion-target v7.0.0-beta.21\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n  abstract subscribe(observer?: PartialObserver<MediaChange>): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import {filter} from 'rxjs/operators/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .pipe(\n *          filter((change:MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n *  @deprecated use MediaObserver instead\n *  @deletion-target v7.0.0-beta.21\n */\n@Injectable({providedIn: 'root'})\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    return this.mediaWatcher.isActive(this._toMediaQuery(alias));\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(observerOrNext?: PartialObserver<MediaChange> | ((value: MediaChange) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    if (observerOrNext) {\n      if (typeof observerOrNext === 'object') {\n        return this.observable$.subscribe(observerOrNext.next, observerOrNext.error,\n          observerOrNext.complete);\n      }\n    }\n\n    return this.observable$.subscribe(observerOrNext, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    const queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const excludeOverlaps = (change: MediaChange) => {\n      const bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(this.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return this.mediaWatcher.observe().pipe(\n      filter(change => change.matches),\n      filter(excludeOverlaps),\n      map((change: MediaChange) =>\n        mergeAlias(change, this._findByQuery(change.mediaQuery)))\n    );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias: string) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query: string) {\n    const bp: BreakPoint | null = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private readonly observable$: Observable<MediaChange>;\n}\n\n/**\n * @deprecated\n * @deletion-target v7.0.0-beta.21\n */\nexport const ObservableMediaProvider = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  useClass: MediaService\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\nimport {ObservableMediaProvider} from './observable-media/observable-media';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER, ObservableMediaProvider]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {MediaChange, MediaQuerySubscriber} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\n\n/**\n * @deprecated\n * @deletion-target v7.0.0-beta.21\n */\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\n/**\n * @deprecated\n * @deletion-target v7.0.0-beta.21\n */\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n * @deprecated\n * @deletion-target v7.0.0-beta.21\n */\nexport class ResponsiveActivation {\n  private _activatedInputKey: string = '';\n  private _registryMap: BreakPointX[] = this._buildRegistryMap();\n  private _subscribers: Subscription[] = this._configureChangeObservers();\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n  }\n\n  /**\n   * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n   * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n   * important when several media queries are 'registered' and from which, the browser uses the\n   * first matching media query.\n   */\n  get registryFromLargest(): BreakPointX[] {\n    return [...this._registryMap].reverse();\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    const key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  hasKeyValue(key: string) {\n    return this._options.inputKeys[key] !== undefined;\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach(link => link.unsubscribe());\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): Subscription[] {\n    const subscriptions: Subscription[] = [];\n\n    this._registryMap.forEach(bp => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        const buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n          this._mediaMonitor\n              .observe(bp.alias)\n              .pipe(map(buildChanges))\n              .subscribe(change => {\n                this._onMonitorEvents(change);\n              })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this._mediaMonitor.breakpoints\n      .map(bp => <BreakPointX>extendObject({}, bp, {\n        baseKey: this._options.baseKey,         // e.g. layout, hide, self-align, flex-wrap\n        key: this._options.baseKey + bp.suffix  // e.g. layoutGtSm, layoutMd, layoutGtLg\n      }))\n      .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property === this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key: string): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                       // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey === currentKey) ? '' : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey: string) {\n    const isMissingKey = (key: string) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      this._mediaMonitor.activeOverlaps.some(bp => {\n        const key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key: string) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  SimpleChange,\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  StyleUtils,\n} from '../style-utils/style-utils';\nimport {ResponsiveActivation, KeyOptions} from '../responsive-activation/responsive-activation';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {MediaQuerySubscriber} from '../media-change';\nimport {StyleBuilder} from '../style-builder/style-builder';\n\n/**\n * Abstract base class for the Layout API styling directives.\n * @deprecated\n * @deletion-target v7.0.0-beta.21\n */\nexport abstract class BaseDirective implements OnDestroy, OnChanges {\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    const change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n  protected constructor(protected _mediaMonitor: MediaMonitor,\n                        protected _elementRef: ElementRef,\n                        protected _styler: StyleUtils,\n                        protected _styleBuilder?: StyleBuilder) {\n  }\n\n  /**\n   * Does this directive have 1 or more responsive keys defined\n   * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n   */\n  hasResponsiveAPI(baseKey: string) {\n    const totalKeys = Object.keys(this._inputMap).length;\n    const baseValue = this._inputMap[baseKey];\n    return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    delete this._mediaMonitor;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  protected get nativeElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this._styleBuilder!;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this._styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this._styleCache.set(input, genStyles);\n      }\n    }\n\n    this._applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Access the current value (if any) of the @Input property */\n  protected _queryInput(key: string) {\n    return this._inputMap[key];\n  }\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    const val = this._queryInput(key);\n    const hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows us to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source: HTMLElement = this.nativeElement): string {\n    const query = 'display';\n    return this._styler.lookupStyle(source, query);\n  }\n\n  /** Quick accessor to raw attribute value on the target DOM element */\n  protected _getAttributeValue(attribute: string,\n                               source: HTMLElement = this.nativeElement): string {\n    return this._styler.lookupAttributeValue(source, attribute);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      let [value, hasInlineValue] = this._styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this._styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 element: HTMLElement = this.nativeElement) {\n    this._styler.applyStyleToElement(element, style, value);\n  }\n\n  /** Applies styles given via string pair or object map to the directive's element */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[]) {\n    this._styler.applyStyleToElements(style, elements);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      if (!!key) {\n        this._inputMap[key] = source;\n      }\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(keyOptions, this._mediaMonitor,\n        (change) => onMediaQueryChange(change));\n    }\n    return this._mqActivation;\n  }\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** MediaQuery Activation Tracker */\n  protected _mqActivation?: ResponsiveActivation;\n\n  /** Dictionary of input keys with associated values */\n  protected _inputMap: {[key: string]: any} = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n\n  /** Cache map for style computation */\n  protected _styleCache: Map<string, StyleDefinition> = new Map();\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef} from '@angular/core';\n\nimport {BaseDirective} from './base';\nimport {ResponsiveActivation} from '../responsive-activation/responsive-activation';\nimport {MediaQuerySubscriber} from '../media-change';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {StyleUtils} from '../style-utils/style-utils';\n\n\n/**\n * Adapter to the BaseDirective abstract class so it can be used via composition.\n * @see BaseDirective\n * @deprecated\n * @deletion-target v7.0.0-beta.21\n */\nexport class BaseDirectiveAdapter extends BaseDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation!;\n  }\n\n  /**\n   * BaseDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n    super(_mediaMonitor, _elementRef, _styler);\n  }\n\n  /**\n    * Does this directive have 1 or more responsive keys defined\n    * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n    */\n  hasResponsiveAPI() {\n   return super.hasResponsiveAPI(this._baseKey);\n  }\n\n  /**\n   * @see BaseDirective._queryInput\n   */\n  queryInput(key: string | null) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error(\n        `Invalid class value '${key}' provided. Did you want to cache the raw value?`\n      );\n    }\n  }\n\n  /**\n   * @see BaseDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    if (key) {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source ? source.join(' ') : '';\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes: string[] = [];\n    if (source) {\n      for (let prop in source) {\n        if (!!source[prop]) {\n          classes.push(prop);\n        }\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedBreakpoint);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.')[1] || '';\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  protected triggerUpdate() {\n    const val = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n    this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, val);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  protected _registry: Map<string, MockMediaQueryList> = new Map();\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually activate any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl', true);\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg', true);\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md', true);\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm', true);\n          break;\n      }\n\n      // Simulate activate of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs', true);\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs', true);\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs', true);\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs', true);\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string, useOverlaps = false) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias, useOverlaps);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string, useOverlaps = false) {\n    if (useOverlaps) {\n      this._registerMediaQuery(mediaQuery);\n    }\n    const mql = this._registry.get(mediaQuery);\n    const alreadyAdded = this._actives\n      .reduce((found, it) => (found || (mql ? (it.media === mql.media) : false)), false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current Mock MQLs */\n  private _deactivateAll() {\n    if (this._actives.length) {\n      // Deactivate all current MQLs and reset the buffer\n      for (const it of this._actives) {\n        it.deactivate();\n      }\n      this._actives = [];\n    }\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this._actives.length > 0;\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: EventListenerOrEventListenerObject | null) {\n  }\n\n  addEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | AddEventListenerOptions): void;\n  addEventListener(_: string,\n                   __: EventListenerOrEventListenerObject,\n                   ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                  ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | EventListenerOptions): void;\n  removeEventListener(_: string,\n                      __: EventListenerOrEventListenerObject,\n                      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: EventListenerOrEventListenerObject | null) {\n  }\n\n  addEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | AddEventListenerOptions): void;\n  addEventListener(_: string,\n                   __: EventListenerOrEventListenerObject,\n                   ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | EventListenerOptions): void;\n  removeEventListener(_: string,\n                      __: EventListenerOrEventListenerObject,\n                      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList> = new Map();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\nimport {mergeAlias} from '../add-alias';\n\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n * @deprecated\n * @deletion-target v7.0.0-beta.21\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    return this._breakpoints.overlappings\n      .reverse()\n      .filter(bp => this._matchMedia.isActive(bp.mediaQuery));\n  }\n\n  get active(): BreakPoint | null {\n    const items = this.breakpoints.reverse();\n    const first = items.find(bp => bp.alias !== '' && this._matchMedia.isActive(bp.mediaQuery));\n    return first || null;\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    const bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias: string = ''): Observable<MediaChange> {\n    const bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    const hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    const media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return media$.pipe(\n      map(change => mergeAlias(change, bp)),\n      filter(hasAlias)\n    );\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    const queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {mergeAlias} from '../add-alias';\n\n/**\n * Class internalizes a MatchMedia service and exposes an Observable interface.\n\n * This exposes an Observable with a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the MediaObserver\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.media$` with syntax like mediaObserver.media$.map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const onChange = (change: MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g. mediaObserver.media$.subscribe(onChange);\n *\n *      mediaObserver.media$()\n *        .pipe(\n *          filter((change: MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver {\n  /**\n   * Whether to announce gt-<xxx> breakpoint activations\n   */\n  filterOverlaps = true;\n  readonly media$: Observable<MediaChange>;\n\n  constructor(private breakpoints: BreakPointRegistry, private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.media$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    return this.mediaWatcher.isActive(this._toMediaQuery(alias));\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    const queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const excludeOverlaps = (change: MediaChange) => {\n      const bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(this.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return this.mediaWatcher.observe()\n      .pipe(\n        filter(change => change.matches),\n        filter(excludeOverlaps),\n        map((change: MediaChange) =>\n          mergeAlias(change, this._findByQuery(change.mediaQuery))\n        )\n      );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias: string) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query: string) {\n    const bp = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value.trim();\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n"],"names":["this","matchMedia","observe","subscribe","activate","bind","Object","defineProperty","MediaMarshaller","prototype","activatedBreakpoints","alias","mc","bp","findByQuery","mediaQuery","matches","push","sort","prioritySort","splice","indexOf","updateStyles","init","element","key","builder","observables","_this","builders","builderMap","get","Map","set","watchers","watcherMap","newSubscription","merge","apply","currentValue","getValue","updateElement","bpMap","elementMap","values","undefined","getFallback","value","hasValue","setValue","val","trackValue","subject","asObservable","pipe","filter","v","forEach","el","valueMap","k","next","releaseElement","s","unsubscribe","delete","_","query","breakpoints","i","length","activatedBp","type","Injectable","args","providedIn","MatchMedia","BreakPointRegistry","__extends","d","b","__","constructor","extendStatics","create","removeStyles","_document","platformId","isPlatformBrowser","classRegex_1","Array","from","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","replace","extendObject","dest","sources","_i","arguments","TypeError","_a","sources_1","source","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","slice","toUpperCase","camelCase","name","ALIAS_DELIMITERS","split","map","join","validateSuffixes","list","suffix","overlapping","mergeByAlias","defaults","custom","dict","keys","a","priorityA","priority","buildQueryCss","mediaQueries","it","ALL_STYLES","styleEl_1","createElement","setAttribute","styleSheet","cssText","appendChild","createTextNode","mq","e","console","error","constructMql","isBrowser","addListener","media","removeListener","mergeAlias","mqAlias","buildLayoutCSS","validateValue","buildCSS","toLowerCase","direction","wrap","inline","LAYOUT_VALUES","find","x","INLINE","validateWrapValue","display","box-sizing","flex-direction","flex-wrap","applyCssPrefixes","target","isNaN","validateBasis","basis","grow","shrink","parts","j","_validateCalcValue","substring","trim","substr","calc","setPrototypeOf","__proto__","p","BROWSER_PROVIDER","provide","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","PLATFORM_ID","multi","BREAKPOINT","InjectionToken","factory","RESPONSIVE_ALIASES","DEFAULT_BREAKPOINTS","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","DEFAULT_CONFIG","addFlexToParent","addOrientationBps","disableDefaultBps","disableVendorPrefixes","serverLoaded","useColumnBasisZero","LAYOUT_CONFIG","BREAKPOINTS","inject","layoutConfig","bpFlattenArray","concat","isArray","_registry","overlaps","nonOverlaps","findByAlias","decorators","Inject","MediaChange","property","clone","_zone","_platformId","_source","BehaviorSubject","_observable$","isActive","mql","registerQuery","change","Set","onMQLEvent","run","_buildMQL","NgZone","ObservableMedia","MediaService","mediaWatcher","filterOverlaps","_registerBreakPoints","observable$","_buildObservable","_toMediaQuery","observerOrNext","complete","queries","sortedItems","excludeOverlaps","_findByQuery","_findByAlias","ObservableMediaProvider","useClass","NgModule","providers","CoreModule","stylesheet","StylesheetMap","addStyleToElement","style","clearStyles","clear","getStyleForElement","styleName","styles","SERVER_TOKEN","KeyOptions","baseKey","defaultValue","inputKeys","ResponsiveActivation","_options","_mediaMonitor","_onMediaChanges","_activatedInputKey","_registryMap","_buildRegistryMap","_subscribers","_configureChangeObservers","reverse","activatedInputKey","hasKeyValue","_lookupKeyValue","destroy","link","subscriptions","_keyInUse","buildChanges","_onMonitorEvents","_calculateActivatedValue","current","currentKey","newKey","_validateInputKey","activatedInput","inputKey","isMissingKey","activeOverlaps","some","BaseDirective","_elementRef","_styler","_styleBuilder","_inputMap","_hasInitialized","_styleCache","_mqActivation","previousVal","SimpleChange","ngOnChanges","hasResponsiveAPI","ngOnInit","Error","ngOnDestroy","nativeElement","addStyles","input","parent","useCache","shouldCache","genStyles","buildStyles","_applyStyleToElement","sideEffect","_queryInput","_getDefaultVal","fallbackVal","_getDisplayStyle","lookupStyle","_getAttributeValue","attribute","lookupAttributeValue","_getFlexFlowDirection","addIfMissing","getFlowDirection","elements","applyStyleToElements","applyStyleToElement","_applyStyleToElements","_cacheInput","prop","_listenForMediaQueryChanges","onMediaQueryChange","keyOptions","obj","children","buffer","BaseDirectiveAdapter","_super","_baseKey","call","tslib_1.__extends","mqa","queryInput","cacheInput","cacheRaw","_cacheInputRaw","_cacheInputArray","_cacheInputObject","_cacheInputString","listenForMediaQueryChanges","classes","BaseDirective2","elementRef","styleBuilder","styler","marshal","DIRECTIVE_KEY","inputs","destroySubject","Subject","styleCache","parentElement","activatedBreakpoint","changes","triggerUpdate","getFlexFlowDirection","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","_actives","clearAll","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","reduce","found","deactivate","has","MockMediaQueryList","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","ServerMediaQueryList","ServerMatchMedia","activateBreakpoint","lookupBreakpoint","deactivateBreakpoint","MediaMonitor","_matchMedia","_registerBreakpoints","items","overlappings","hasAlias","MediaObserver","media$","StyleUtils","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","isPlatformServer","getAttribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","setProperty","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","name_1","styleAttrValue","Optional","Boolean","StyleBuilder","_input","_styles","_parent","WeakMap"],"mappings":"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"}