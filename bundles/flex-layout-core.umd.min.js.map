{"version":3,"file":"flex-layout-core.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/add-alias.ts","../../src/lib/core/stylesheet-map/stylesheet-map-provider.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/core/breakpoints/break-points-provider.ts","../../src/lib/core/media-monitor/media-monitor-provider.ts","../../src/lib/core/observable-media/observable-media-provider.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/media-change.ts","../../src/lib/core/observable-media/observable-media.ts","../../src/lib/core/module.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/flex-styles-token.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/vendor-prefixes-token.ts","../../src/lib/core/responsive-activation/responsive-activation.ts","../../src/lib/core/base/base.ts","../../src/lib/core/base/base-adapter.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/match-media/server-match-media.ts","../../src/lib/core/media-monitor/media-monitor.ts","../../src/lib/core/style-utils/style-utils.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  protected _registry: Map<string, MediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    this._registry = new Map<string, MediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    let mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    if (mediaQuery) {\n      this.registerQuery(mediaQuery);\n    }\n\n    return this._observable$.pipe(\n      filter((change: MediaChange) => {\n        return mediaQuery ? (change.mediaQuery === mediaQuery) : true;\n      })\n    );\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    let list = normalizeQuery(mediaQuery);\n\n    if (list.length > 0) {\n      this._prepareQueryCSS(list, this._document);\n\n      list.forEach(query => {\n        let mql = this._registry.get(query);\n        let onMQLEvent = (e: MediaQueryList) => {\n          this._zone.run(() => {\n            let change = new MediaChange(e.matches, query);\n            this._source.next(change);\n          });\n        };\n\n        if (!mql) {\n          mql = this._buildMQL(query);\n          mql.addListener(onMQLEvent);\n          this._registry.set(query, mql);\n        }\n\n        if (mql.matches) {\n          onMQLEvent(mql);  // Announce activate range for initial subscribers\n        }\n      });\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    let canListen = isPlatformBrowser(this._platformId) &&\n      !!(<any>window).matchMedia('all').addListener;\n\n    return canListen ? (<any>window).matchMedia(query) : <MediaQueryList>{\n      matches: query === 'all' || query === '',\n      media: query,\n      addListener: () => {\n      },\n      removeListener: () => {\n      }\n    };\n  }\n\n  /**\n   * For Webkit engines that only trigger the MediaQueryList Listener\n   * when there is at least one CSS selector for the respective media query.\n   *\n   * @param query string The mediaQuery used to create a faux CSS selector\n   *\n   */\n  protected _prepareQueryCSS(mediaQueries: string[], _document: Document) {\n    let list = mediaQueries.filter(it => !ALL_STYLES[it]);\n    if (list.length > 0) {\n      let query = list.join(', ');\n\n      try {\n        let styleEl = _document.createElement('style');\n\n        styleEl.setAttribute('type', 'text/css');\n        if (!styleEl['styleSheet']) {\n          let cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n` ;\n          styleEl.appendChild(_document.createTextNode(cssText));\n        }\n\n        _document.head.appendChild(styleEl);\n\n        // Store in private global registry\n        list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n\n/**\n * Always convert to unique list of queries; for iteration in ::registerQuery()\n */\nfunction normalizeQuery(mediaQuery: string | string[]): string[] {\n  return (typeof mediaQuery === 'undefined') ? [] :\n      (typeof mediaQuery === 'string') ? [mediaQuery] : unique(mediaQuery as string[]);\n}\n\n/**\n * Filter duplicate mediaQueries in the list\n */\nfunction unique(list: string[]): string[] {\n  let seen = {};\n  return list.filter(item => {\n    return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n  });\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {extendObject} from '../utils/object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null) {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {StylesheetMap} from './stylesheet-map';\n\n/**\n * Ensure a single global service provider\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport function STYLESHEET_MAP_PROVIDER_FACTORY(parentSheet: StylesheetMap) {\n  return parentSheet || new StylesheetMap();\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport const STYLESHEET_MAP_PROVIDER = {\n  provide: StylesheetMap,\n  deps: [\n    [new Optional(), new SkipSelf(), StylesheetMap],\n  ],\n  useFactory: STYLESHEET_MAP_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken, Optional, SkipSelf} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {DEFAULT_BREAKPOINTS} from './data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from './data/orientation-break-points';\nimport {mergeByAlias} from './breakpoint-tools';\nimport {\n  ADD_ORIENTATION_BREAKPOINTS,\n  BREAKPOINT,\n  DISABLE_DEFAULT_BREAKPOINTS,\n} from '../tokens/breakpoint-token';\n\n/**\n * Factory that combines the configured breakpoints into one array and then merges\n * them using a utility function\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport function BREAKPOINTS_PROVIDER_FACTORY(parentBreakpoints: BreakPoint[],\n                                             breakpoints: (BreakPoint|BreakPoint[])[],\n                                             disableDefaults: boolean,\n                                             addOrientation: boolean) {\n  const bpFlattenArray = [].concat.apply([], (breakpoints || [])\n    .map(v => Array.isArray(v) ? v : [v]));\n  const builtIns = DEFAULT_BREAKPOINTS.concat(addOrientation ? ORIENTATION_BREAKPOINTS : []);\n  return parentBreakpoints || disableDefaults ?\n     mergeByAlias(bpFlattenArray) : mergeByAlias(builtIns, bpFlattenArray);\n}\n\n/**\n * Provider that combines the provided extra breakpoints with the default and\n * orientation breakpoints based on configuration\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport const BREAKPOINTS_PROVIDER = {\n  provide: <InjectionToken<BreakPoint[]>>BREAKPOINTS,\n  useFactory: BREAKPOINTS_PROVIDER_FACTORY,\n  deps: [\n    [new Optional(), new SkipSelf(), BREAKPOINTS],\n    [new Optional(), BREAKPOINT],\n    [new Optional(), DISABLE_DEFAULT_BREAKPOINTS],\n    [new Optional(), ADD_ORIENTATION_BREAKPOINTS],\n  ]\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\n\n/**\n * Ensure a single global service provider\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport function MEDIA_MONITOR_PROVIDER_FACTORY(parentMonitor: MediaMonitor,\n                                               breakpoints: BreakPointRegistry,\n                                               matchMedia: MatchMedia) {\n  return parentMonitor || new MediaMonitor(breakpoints, matchMedia);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport const MEDIA_MONITOR_PROVIDER = {\n  provide : MediaMonitor,\n  deps : [\n    [ new Optional(), new SkipSelf(), MediaMonitor ],\n    BreakPointRegistry,\n    MatchMedia,\n  ],\n  useFactory : MEDIA_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {ObservableMedia, MediaService} from './observable-media';\n\n/**\n * Ensure a single global ObservableMedia service provider\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport function OBSERVABLE_MEDIA_PROVIDER_FACTORY(parentService: ObservableMedia,\n                                                  matchMedia: MatchMedia,\n                                                  breakpoints: BreakPointRegistry) {\n  return parentService || new MediaService(breakpoints, matchMedia);\n}\n/**\n *  Provider to return global service for observable service for all MediaQuery activations\n *  @deprecated\n *  @deletion-target v6.0.0-beta.16\n */\nexport const OBSERVABLE_MEDIA_PROVIDER = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  deps: [\n    [ new Optional(), new SkipSelf(), ObservableMedia ],\n    MatchMedia,\n    BreakPointRegistry\n  ],\n  useFactory: OBSERVABLE_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const DISABLE_DEFAULT_BREAKPOINTS = new InjectionToken<boolean>(\n  'Flex Layout token, disable the default breakpoints', {\n    providedIn: 'root',\n    factory: () => false\n  });\n\nexport const ADD_ORIENTATION_BREAKPOINTS = new InjectionToken<boolean>(\n  'Flex Layout token, add the orientation breakpoints', {\n    providedIn: 'root',\n    factory: () => false\n  });\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(min-width: 0px) and (max-width: 599px)'\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)'\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)'\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)'\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)'\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)'\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)'\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)'\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)'\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)'\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1920px)'\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)'\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientations: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientations: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientations: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientations: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientations: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientations: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {\n  ADD_ORIENTATION_BREAKPOINTS,\n  BREAKPOINT,\n  DISABLE_DEFAULT_BREAKPOINTS,\n} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const disableDefaults = inject(DISABLE_DEFAULT_BREAKPOINTS);\n      const addOrientation = inject(ADD_ORIENTATION_BREAKPOINTS);\n      const bpFlattenArray = [].concat.apply([], (breakpoints || [])\n        .map(v => Array.isArray(v) ? v : [v]));\n      const builtIns = DEFAULT_BREAKPOINTS.concat(addOrientation ? ORIENTATION_BREAKPOINTS : []);\n      return disableDefaults ?\n        mergeByAlias(bpFlattenArray) : mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint | null {\n    return this._registry.find(bp => bp.alias == alias) || null;\n  }\n\n  findByQuery(query: string): BreakPoint | null {\n    return this._registry.find(bp => bp.mediaQuery == query) || null;\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => !!it.suffix ? it.suffix : '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string;\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable, Subscribable, Subscription} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {mergeAlias} from '../add-alias';\nimport {BreakPoint} from '../breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import {filter} from 'rxjs/operators/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .pipe(\n *          filter((change:MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias): boolean {\n    let query = this._toMediaQuery(alias);\n    return this.mediaWatcher.isActive(query);\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(next?: (value: MediaChange) => void,\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    return this.observable$.subscribe(next, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    let queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const self = this;\n    const media$ = this.mediaWatcher.observe();\n    const activationsOnly = (change: MediaChange) => {\n      return change.matches === true;\n    };\n    const addAliasInformation = (change: MediaChange) => {\n      return mergeAlias(change, this._findByQuery(change.mediaQuery));\n    };\n    const excludeOverlaps = (change: MediaChange) => {\n      let bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(self.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return media$.pipe(\n      filter(activationsOnly),\n      filter(excludeOverlaps),\n      map(addAliasInformation)\n    );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query) {\n    let bp: BreakPoint | null = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private observable$: Observable<MediaChange>;\n}\n\nexport const ObservableMediaProvider = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  useClass: MediaService\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {ObservableMediaProvider} from './observable-media/observable-media';\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [ObservableMediaProvider, BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\nexport const ADD_FLEX_STYLES = new InjectionToken<boolean>(\n  'Flex Layout token, should flex stylings be applied to parents automatically', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\nexport const DISABLE_VENDOR_PREFIXES = new InjectionToken<boolean>(\n  'Flex Layout token, whether to add vendor prefix styles inline for elements', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {MediaChange, MediaQuerySubscriber} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\n\nexport declare type SubscriptionList = Subscription[];\n\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nexport class ResponsiveActivation {\n  private _subscribers: SubscriptionList = [];\n  private _activatedInputKey: string;\n  private _registryMap: BreakPointX[];\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n    this._registryMap = this._buildRegistryMap();\n    this._subscribers = this._configureChangeObservers();\n  }\n\n  /**\n   * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n   * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n   * important when several media queries are 'registered' and from which, the browser uses the\n   * first matching media query.\n   */\n  get registryFromLargest(): BreakPointX[] {\n    return [...this._registryMap].reverse();\n  }\n\n  /**\n   * Accessor to the DI'ed directive property\n   * Each directive instance has a reference to the MediaMonitor which is\n   * used HERE to subscribe to mediaQuery change notifications.\n   */\n  get mediaMonitor(): MediaMonitor {\n    return this._mediaMonitor;\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    let key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  hasKeyValue(key) {\n    let value = this._options.inputKeys[key];\n    return typeof value !== 'undefined';\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach((link: Subscription) => {\n      link.unsubscribe();\n    });\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): SubscriptionList {\n    let subscriptions: Subscription[] = [];\n\n    this._registryMap.forEach((bp: BreakPointX) => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        let buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n          this.mediaMonitor\n              .observe(bp.alias)\n              .pipe(map(buildChanges))\n              .subscribe(change => {\n                this._onMonitorEvents(change);\n              })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this.mediaMonitor.breakpoints\n        .map(bp => {\n          return <BreakPointX> extendObject({}, bp, {\n            baseKey: this._options.baseKey,             // e.g. layout, hide, self-align, flex-wrap\n            key: this._options.baseKey + bp.suffix  // e.g.  layoutGtSm, layoutMd, layoutGtLg\n          });\n        })\n        .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property == this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                     // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey == currentKey) ? '' : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey) {\n    let isMissingKey = (key) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      this.mediaMonitor.activeOverlaps.some(bp => {\n        let key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  SimpleChange,\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  StyleUtils,\n} from '../style-utils/style-utils';\n\nimport {ResponsiveActivation, KeyOptions} from '../responsive-activation/responsive-activation';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {MediaQuerySubscriber} from '../media-change';\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective implements OnDestroy, OnChanges {\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access to host element's parent DOM node\n   */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  protected get nativeElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._display = this._getDisplayStyle();\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseFxDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    delete this._mediaMonitor;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows us to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source: HTMLElement = this.nativeElement): string {\n    const query = 'display';\n    return this._styler.lookupStyle(source, query);\n  }\n\n  /**\n   * Quick accessor to raw attribute value on the target DOM element\n   */\n  protected _getAttributeValue(attribute: string,\n                               source: HTMLElement = this.nativeElement): string {\n    return this._styler.lookupAttributeValue(source, attribute);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    let value = 'row';\n    let hasInlineValue = '';\n\n    if (target) {\n      [value, hasInlineValue] = this._styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this._styler.applyStyleToElements(style, elements);\n      }\n    }\n\n    return value.trim() || 'row';\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 element: HTMLElement = this.nativeElement) {\n    this._styler.applyStyleToElement(element, style, value);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[]) {\n    this._styler.applyStyleToElements(style, elements);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      if (!!key) {\n        this._inputMap[key] = source;\n      }\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(\n          keyOptions,\n          this._mediaMonitor,\n          (change) => onMediaQueryChange(change)\n      );\n    }\n    return this._mqActivation;\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /**\n   * Does this directive have 1 or more responsive keys defined\n   * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n   */\n  hasResponsiveAPI(baseKey: string) {\n    const totalKeys = Object.keys(this._inputMap).length;\n    const baseValue = this._inputMap[baseKey];\n    return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n  }\n\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** Original dom Elements CSS display style */\n  protected _display;\n\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {ResponsiveActivation} from '../responsive-activation/responsive-activation';\nimport {MediaQuerySubscriber} from '../media-change';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {StyleUtils} from '../style-utils/style-utils';\n\n\n/**\n * Adapter to the BaseFxDirective abstract class so it can be used via composition.\n * @see BaseFxDirective\n */\nexport class BaseFxDirectiveAdapter extends BaseFxDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseFxDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation;\n  }\n\n  /**\n   * BaseFxDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n    super(_mediaMonitor, _elementRef, _styler);\n  }\n\n  /**\n    * Does this directive have 1 or more responsive keys defined\n    * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n    */\n  hasResponsiveAPI() {\n   return super.hasResponsiveAPI(this._baseKey);\n  }\n\n  /**\n   * @see BaseFxDirective._queryInput\n   */\n  queryInput(key) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error(\n        `Invalid class value '${key}' provided. Did you want to cache the raw value?`\n      );\n    }\n  }\n\n  /**\n   * @see BaseFxDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    if (key) {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source ? source.join(' ') : '';\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes: string[] = [];\n    if (source) {\n      for (let prop in source) {\n        if (!!source[prop]) {\n          classes.push(prop);\n        }\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n    this._actives = [];\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList, _) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias) {\n    let bp = this._breakpoints.findByAlias(queryOrAlias);\n    if (bp) {\n      queryOrAlias = bp.mediaQuery;\n    }\n    return queryOrAlias;\n  }\n\n  /**\n   * Manually activate any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      let bp = this._breakpoints.findByQuery(mediaQuery);\n      let alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activate of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases) {\n    let activate = (alias) => {\n      let bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery) {\n    let mql = <MockMediaQueryList> this._registry.get(mediaQuery);\n    let alreadyAdded = this._actives.reduce((found, it) => {\n      return found || (mql && (it.media === mql.media));\n    }, false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current Mock MQLs */\n  private _deactivateAll() {\n    if (this._actives.length) {\n      // Deactivate all current MQLs and reset the buffer\n      for (const it of this._actives) {\n        it.deactivate();\n      }\n      this._actives = [];\n    }\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return (this._actives.length > 0);\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\nimport {MediaChange} from '../media-change';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n    this._registry = new Map<string, ServerMediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\nimport {mergeAlias} from '../add-alias';\n\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    let items: BreakPoint[] = this._breakpoints.overlappings.reverse();\n    return items.filter((bp: BreakPoint) => {\n      return this._matchMedia.isActive(bp.mediaQuery);\n    });\n  }\n\n  get active(): BreakPoint | null {\n    let found: BreakPoint | null = null, items = this.breakpoints.reverse();\n    items.forEach(bp => {\n      if (bp.alias !== '') {\n        if (!found && this._matchMedia.isActive(bp.mediaQuery)) {\n          found = bp;\n        }\n      }\n    });\n\n    let first = this.breakpoints[0];\n    return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias?: string): Observable<MediaChange> {\n    let bp = this._breakpoints.findByAlias(alias || '') ||\n      this._breakpoints.findByQuery(alias || '');\n    let hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    let media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return media$.pipe(\n      map(change => mergeAlias(change, bp)),\n      filter(hasAlias)\n    );\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    let queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {DISABLE_VENDOR_PREFIXES} from '../tokens/vendor-prefixes-token';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId,\n              @Optional() @Inject(DISABLE_VENDOR_PREFIXES) private noVendorPrefixes: boolean) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement, style: StyleDefinition, value?: string | number) {\n    let styles = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.noVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.noVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    if (value === FALLBACK_STYLE) {\n      value = '';\n    }\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return element.style[styleName] || element.style.getPropertyValue(styleName) || '';\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : FALLBACK_STYLE;\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: {}, element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n      values.sort();\n      for (let value of values) {\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          element.style.setProperty(key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n\nconst FALLBACK_STYLE = 'block';\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","removeStyles","_document","platformId","isPlatformBrowser","classRegex_1","Array","from","querySelectorAll","CLASS_NAME","forEach","el","classList","contains","parentNode","removeChild","className","replace","extendObject","dest","sources","_i","arguments","length","TypeError","_a","sources_1","source","key","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","slice","toUpperCase","camelCase","name","ALIAS_DELIMITERS","split","map","join","validateSuffixes","list","bp","suffix","alias","overlapping","mergeByAlias","defaults","custom","dict","keys","k","normalizeQuery","mediaQuery","unique","seen","filter","item","mergeAlias","mqAlias","STYLESHEET_MAP_PROVIDER_FACTORY","parentSheet","StylesheetMap","buildLayoutCSS","value","validateValue","buildCSS","toLowerCase","direction","wrap","inline","LAYOUT_VALUES","find","x","INLINE","validateWrapValue","display","box-sizing","flex-direction","flex-wrap","BREAKPOINTS_PROVIDER_FACTORY","parentBreakpoints","breakpoints","disableDefaults","addOrientation","bpFlattenArray","concat","apply","v","isArray","builtIns","DEFAULT_BREAKPOINTS","ORIENTATION_BREAKPOINTS","MEDIA_MONITOR_PROVIDER_FACTORY","parentMonitor","matchMedia","MediaMonitor","OBSERVABLE_MEDIA_PROVIDER_FACTORY","parentService","MediaService","applyCssPrefixes","target","isNaN","validateBasis","basis","grow","shrink","parts","j","indexOf","_validateCalcValue","substring","trim","matches","substr","calc","setPrototypeOf","__proto__","p","BROWSER_PROVIDER","provide","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","PLATFORM_ID","multi","DISABLE_DEFAULT_BREAKPOINTS","InjectionToken","providedIn","factory","ADD_ORIENTATION_BREAKPOINTS","BREAKPOINT","RESPONSIVE_ALIASES","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","BREAKPOINTS","inject","BreakPointRegistry","_registry","defineProperty","overlaps","it","nonOverlaps","findByAlias","findByQuery","query","type","Injectable","args","decorators","Inject","MediaChange","clone","MatchMedia","_zone","_platformId","Map","_source","BehaviorSubject","_observable$","asObservable","isActive","mql","get","observe","registerQuery","pipe","change","_this","_prepareQueryCSS","onMQLEvent","e","run","next","_buildMQL","addListener","set","media","removeListener","mediaQueries","ALL_STYLES","styleEl_1","createElement","setAttribute","cssText","appendChild","createTextNode","head","mq","console","error","NgZone","undefined","ObservableMedia","mediaWatcher","filterOverlaps","_registerBreakPoints","observable$","_buildObservable","_toMediaQuery","subscribe","complete","queries","sortedItems","self","media$","activationsOnly","addAliasInformation","_findByQuery","excludeOverlaps","_findByAlias","ObservableMediaProvider","useClass","NgModule","providers","CoreModule","stylesheet","addStyleToElement","element","style","clearStyles","clear","getStyleForElement","styleName","styles","STYLESHEET_MAP_PROVIDER","Optional","SkipSelf","ADD_FLEX_STYLES","SERVER_TOKEN","DISABLE_VENDOR_PREFIXES","KeyOptions","baseKey","defaultValue","inputKeys","ResponsiveActivation","_options","_mediaMonitor","_onMediaChanges","_subscribers","_registryMap","_buildRegistryMap","_configureChangeObservers","reverse","_activatedInputKey","activatedInputKey","hasKeyValue","_lookupKeyValue","destroy","link","unsubscribe","subscriptions","_keyInUse","buildChanges","property","push","mediaMonitor","_onMonitorEvents","_calculateActivatedValue","current","currentKey","newKey","_validateInputKey","activatedInput","inputKey","isMissingKey","activeOverlaps","some","BaseFxDirective","_elementRef","_styler","_inputMap","_hasInitialized","_mqActivation","previousVal","SimpleChange","ngOnChanges","nativeElement","_queryInput","ngOnInit","_display","_getDisplayStyle","Error","ngOnDestroy","_getDefaultVal","fallbackVal","val","lookupStyle","_getAttributeValue","attribute","lookupAttributeValue","_getFlowDirection","addIfMissing","hasInlineValue","getFlowDirection","elements","applyStyleToElements","_applyStyleToElement","applyStyleToElement","_applyStyleToElements","_cacheInput","prop","_listenForMediaQueryChanges","onMediaQueryChange","keyOptions","obj","children","buffer","i","hasResponsiveAPI","BaseFxDirectiveAdapter","_super","_baseKey","call","tslib_1.__extends","mqa","queryInput","cacheInput","cacheRaw","_cacheInputRaw","_cacheInputArray","_cacheInputObject","_cacheInputString","listenForMediaQueryChanges","classes","BREAKPOINTS_PROVIDER","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","_actives","clearAll","_","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","reduce","found","deactivate","has","MockMediaQueryList","_mediaQuery","_isActive","_listeners","callback","listener","MockMatchMediaProvider","ServerMediaQueryList","ServerMatchMedia","activateBreakpoint","lookupBreakpoint","deactivateBreakpoint","_matchMedia","_registerBreakpoints","items","overlappings","hasAlias","MEDIA_MONITOR_PROVIDER","OBSERVABLE_MEDIA_PROVIDER","StyleUtils","_serverStylesheet","_serverModuleLoaded","noVendorPrefixes","_applyMultiValueStyleToElement","FALLBACK_STYLE","lookupInlineStyle","isPlatformServer","getAttribute","getPropertyValue","inlineOnly","getComputedStyle","sort","values","values_1","setProperty"],"mappings":"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"}