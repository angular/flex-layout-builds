{"version":3,"file":"flex-layout-core.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/add-alias.ts","../../src/lib/core/stylesheet-map/stylesheet-map-provider.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/core/breakpoints/break-points-provider.ts","../../src/lib/core/media-monitor/media-monitor-provider.ts","../../src/lib/core/observable-media/observable-media-provider.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/media-change.ts","../../src/lib/core/observable-media/observable-media.ts","../../src/lib/core/module.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/flex-styles-token.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/vendor-prefixes-token.ts","../../src/lib/core/responsive-activation/responsive-activation.ts","../../src/lib/core/base/base.ts","../../src/lib/core/base/base-adapter.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/match-media/server-match-media.ts","../../src/lib/core/media-monitor/media-monitor.ts","../../src/lib/core/style-utils/style-utils.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  protected _registry: Map<string, MediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    this._registry = new Map<string, MediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    let mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    if (mediaQuery) {\n      this.registerQuery(mediaQuery);\n    }\n\n    return this._observable$.pipe(\n      filter((change: MediaChange) => {\n        return mediaQuery ? (change.mediaQuery === mediaQuery) : true;\n      })\n    );\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    let list = normalizeQuery(mediaQuery);\n\n    if (list.length > 0) {\n      this._prepareQueryCSS(list, this._document);\n\n      list.forEach(query => {\n        let mql = this._registry.get(query);\n        let onMQLEvent = (e: MediaQueryList) => {\n          this._zone.run(() => {\n            let change = new MediaChange(e.matches, query);\n            this._source.next(change);\n          });\n        };\n\n        if (!mql) {\n          mql = this._buildMQL(query);\n          mql.addListener(onMQLEvent);\n          this._registry.set(query, mql);\n        }\n\n        if (mql.matches) {\n          onMQLEvent(mql);  // Announce activate range for initial subscribers\n        }\n      });\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    let canListen = isPlatformBrowser(this._platformId) &&\n      !!(<any>window).matchMedia('all').addListener;\n\n    return canListen ? (<any>window).matchMedia(query) : <MediaQueryList>{\n      matches: query === 'all' || query === '',\n      media: query,\n      addListener: () => {\n      },\n      removeListener: () => {\n      }\n    };\n  }\n\n  /**\n   * For Webkit engines that only trigger the MediaQueryList Listener\n   * when there is at least one CSS selector for the respective media query.\n   *\n   * @param query string The mediaQuery used to create a faux CSS selector\n   *\n   */\n  protected _prepareQueryCSS(mediaQueries: string[], _document: Document) {\n    let list = mediaQueries.filter(it => !ALL_STYLES[it]);\n    if (list.length > 0) {\n      let query = list.join(', ');\n\n      try {\n        let styleEl = _document.createElement('style');\n\n        styleEl.setAttribute('type', 'text/css');\n        if (!styleEl['styleSheet']) {\n          let cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n` ;\n          styleEl.appendChild(_document.createTextNode(cssText));\n        }\n\n        _document.head.appendChild(styleEl);\n\n        // Store in private global registry\n        list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n\n/**\n * Always convert to unique list of queries; for iteration in ::registerQuery()\n */\nfunction normalizeQuery(mediaQuery: string | string[]): string[] {\n  return (typeof mediaQuery === 'undefined') ? [] :\n      (typeof mediaQuery === 'string') ? [mediaQuery] : unique(mediaQuery as string[]);\n}\n\n/**\n * Filter duplicate mediaQueries in the list\n */\nfunction unique(list: string[]): string[] {\n  let seen = {};\n  return list.filter(item => {\n    return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n  });\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {extendObject} from '../utils/object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null) {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {StylesheetMap} from './stylesheet-map';\n\n/**\n * Ensure a single global service provider\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport function STYLESHEET_MAP_PROVIDER_FACTORY(parentSheet: StylesheetMap) {\n  return parentSheet || new StylesheetMap();\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport const STYLESHEET_MAP_PROVIDER = {\n  provide: StylesheetMap,\n  deps: [\n    [new Optional(), new SkipSelf(), StylesheetMap],\n  ],\n  useFactory: STYLESHEET_MAP_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken, Optional, SkipSelf} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {DEFAULT_BREAKPOINTS} from './data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from './data/orientation-break-points';\nimport {mergeByAlias} from './breakpoint-tools';\nimport {\n  ADD_ORIENTATION_BREAKPOINTS,\n  BREAKPOINT,\n  DISABLE_DEFAULT_BREAKPOINTS,\n} from '../tokens/breakpoint-token';\n\n/**\n * Factory that combines the configured breakpoints into one array and then merges\n * them using a utility function\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport function BREAKPOINTS_PROVIDER_FACTORY(parentBreakpoints: BreakPoint[],\n                                             breakpoints: (BreakPoint|BreakPoint[])[],\n                                             disableDefaults: boolean,\n                                             addOrientation: boolean) {\n  const bpFlattenArray = [].concat.apply([], (breakpoints || [])\n    .map(v => Array.isArray(v) ? v : [v]));\n  const builtIns = DEFAULT_BREAKPOINTS.concat(addOrientation ? ORIENTATION_BREAKPOINTS : []);\n  return parentBreakpoints || disableDefaults ?\n     mergeByAlias(bpFlattenArray) : mergeByAlias(builtIns, bpFlattenArray);\n}\n\n/**\n * Provider that combines the provided extra breakpoints with the default and\n * orientation breakpoints based on configuration\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport const BREAKPOINTS_PROVIDER = {\n  provide: <InjectionToken<BreakPoint[]>>BREAKPOINTS,\n  useFactory: BREAKPOINTS_PROVIDER_FACTORY,\n  deps: [\n    [new Optional(), new SkipSelf(), BREAKPOINTS],\n    [new Optional(), BREAKPOINT],\n    [new Optional(), DISABLE_DEFAULT_BREAKPOINTS],\n    [new Optional(), ADD_ORIENTATION_BREAKPOINTS],\n  ]\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\n\n/**\n * Ensure a single global service provider\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport function MEDIA_MONITOR_PROVIDER_FACTORY(parentMonitor: MediaMonitor,\n                                               breakpoints: BreakPointRegistry,\n                                               matchMedia: MatchMedia) {\n  return parentMonitor || new MediaMonitor(breakpoints, matchMedia);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport const MEDIA_MONITOR_PROVIDER = {\n  provide : MediaMonitor,\n  deps : [\n    [ new Optional(), new SkipSelf(), MediaMonitor ],\n    BreakPointRegistry,\n    MatchMedia,\n  ],\n  useFactory : MEDIA_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {ObservableMedia, MediaService} from './observable-media';\n\n/**\n * Ensure a single global ObservableMedia service provider\n * @deprecated\n * @deletion-target v6.0.0-beta.16\n */\nexport function OBSERVABLE_MEDIA_PROVIDER_FACTORY(parentService: ObservableMedia,\n                                                  matchMedia: MatchMedia,\n                                                  breakpoints: BreakPointRegistry) {\n  return parentService || new MediaService(breakpoints, matchMedia);\n}\n/**\n *  Provider to return global service for observable service for all MediaQuery activations\n *  @deprecated\n *  @deletion-target v6.0.0-beta.16\n */\nexport const OBSERVABLE_MEDIA_PROVIDER = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  deps: [\n    [ new Optional(), new SkipSelf(), ObservableMedia ],\n    MatchMedia,\n    BreakPointRegistry\n  ],\n  useFactory: OBSERVABLE_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const DISABLE_DEFAULT_BREAKPOINTS = new InjectionToken<boolean>(\n  'Flex Layout token, disable the default breakpoints', {\n    providedIn: 'root',\n    factory: () => false\n  });\n\nexport const ADD_ORIENTATION_BREAKPOINTS = new InjectionToken<boolean>(\n  'Flex Layout token, add the orientation breakpoints', {\n    providedIn: 'root',\n    factory: () => false\n  });\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(min-width: 0px) and (max-width: 599px)'\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)'\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)'\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)'\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)'\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)'\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)'\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)'\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)'\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)'\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1920px)'\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)'\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientations: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientations: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientations: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientations: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientations: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientations: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {\n  ADD_ORIENTATION_BREAKPOINTS,\n  BREAKPOINT,\n  DISABLE_DEFAULT_BREAKPOINTS,\n} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const disableDefaults = inject(DISABLE_DEFAULT_BREAKPOINTS);\n      const addOrientation = inject(ADD_ORIENTATION_BREAKPOINTS);\n      const bpFlattenArray = [].concat.apply([], (breakpoints || [])\n        .map(v => Array.isArray(v) ? v : [v]));\n      const builtIns = DEFAULT_BREAKPOINTS.concat(addOrientation ? ORIENTATION_BREAKPOINTS : []);\n      return disableDefaults ?\n        mergeByAlias(bpFlattenArray) : mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint | null {\n    return this._registry.find(bp => bp.alias == alias) || null;\n  }\n\n  findByQuery(query: string): BreakPoint | null {\n    return this._registry.find(bp => bp.mediaQuery == query) || null;\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => !!it.suffix ? it.suffix : '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string;\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable, Subscribable, Subscription} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {mergeAlias} from '../add-alias';\nimport {BreakPoint} from '../breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import {filter} from 'rxjs/operators/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .pipe(\n *          filter((change:MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias): boolean {\n    let query = this._toMediaQuery(alias);\n    return this.mediaWatcher.isActive(query);\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(next?: (value: MediaChange) => void,\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    return this.observable$.subscribe(next, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    let queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const self = this;\n    const media$ = this.mediaWatcher.observe();\n    const activationsOnly = (change: MediaChange) => {\n      return change.matches === true;\n    };\n    const addAliasInformation = (change: MediaChange) => {\n      return mergeAlias(change, this._findByQuery(change.mediaQuery));\n    };\n    const excludeOverlaps = (change: MediaChange) => {\n      let bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(self.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return media$.pipe(\n      filter(activationsOnly),\n      filter(excludeOverlaps),\n      map(addAliasInformation)\n    );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query) {\n    let bp: BreakPoint | null = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private observable$: Observable<MediaChange>;\n}\n\nexport const ObservableMediaProvider = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  useClass: MediaService\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {ObservableMediaProvider} from './observable-media/observable-media';\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [ObservableMediaProvider, BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\nexport const ADD_FLEX_STYLES = new InjectionToken<boolean>(\n  'Flex Layout token, should flex stylings be applied to parents automatically', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\nexport const DISABLE_VENDOR_PREFIXES = new InjectionToken<boolean>(\n  'Flex Layout token, whether to add vendor prefix styles inline for elements', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {MediaChange, MediaQuerySubscriber} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\n\nexport declare type SubscriptionList = Subscription[];\n\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nexport class ResponsiveActivation {\n  private _subscribers: SubscriptionList = [];\n  private _activatedInputKey: string;\n  private _registryMap: BreakPointX[];\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n    this._registryMap = this._buildRegistryMap();\n    this._subscribers = this._configureChangeObservers();\n  }\n\n  /**\n   * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n   * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n   * important when several media queries are 'registered' and from which, the browser uses the\n   * first matching media query.\n   */\n  get registryFromLargest(): BreakPointX[] {\n    return [...this._registryMap].reverse();\n  }\n\n  /**\n   * Accessor to the DI'ed directive property\n   * Each directive instance has a reference to the MediaMonitor which is\n   * used HERE to subscribe to mediaQuery change notifications.\n   */\n  get mediaMonitor(): MediaMonitor {\n    return this._mediaMonitor;\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    let key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  hasKeyValue(key) {\n    let value = this._options.inputKeys[key];\n    return typeof value !== 'undefined';\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach((link: Subscription) => {\n      link.unsubscribe();\n    });\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): SubscriptionList {\n    let subscriptions: Subscription[] = [];\n\n    this._registryMap.forEach((bp: BreakPointX) => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        let buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n          this.mediaMonitor\n              .observe(bp.alias)\n              .pipe(map(buildChanges))\n              .subscribe(change => {\n                this._onMonitorEvents(change);\n              })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this.mediaMonitor.breakpoints\n        .map(bp => {\n          return <BreakPointX> extendObject({}, bp, {\n            baseKey: this._options.baseKey,             // e.g. layout, hide, self-align, flex-wrap\n            key: this._options.baseKey + bp.suffix  // e.g.  layoutGtSm, layoutMd, layoutGtLg\n          });\n        })\n        .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property == this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                     // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey == currentKey) ? '' : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey) {\n    let isMissingKey = (key) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      this.mediaMonitor.activeOverlaps.some(bp => {\n        let key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  SimpleChange,\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  StyleUtils,\n} from '../style-utils/style-utils';\n\nimport {ResponsiveActivation, KeyOptions} from '../responsive-activation/responsive-activation';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {MediaQuerySubscriber} from '../media-change';\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective implements OnDestroy, OnChanges {\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access to host element's parent DOM node\n   */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  protected get nativeElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._display = this._getDisplayStyle();\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseFxDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    delete this._mediaMonitor;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows us to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source: HTMLElement = this.nativeElement): string {\n    const query = 'display';\n    return this._styler.lookupStyle(source, query);\n  }\n\n  /**\n   * Quick accessor to raw attribute value on the target DOM element\n   */\n  protected _getAttributeValue(attribute: string,\n                               source: HTMLElement = this.nativeElement): string {\n    return this._styler.lookupAttributeValue(source, attribute);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    let value = 'row';\n    let hasInlineValue = '';\n\n    if (target) {\n      [value, hasInlineValue] = this._styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this._styler.applyStyleToElements(style, elements);\n      }\n    }\n\n    return value.trim() || 'row';\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 element: HTMLElement = this.nativeElement) {\n    this._styler.applyStyleToElement(element, style, value);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[]) {\n    this._styler.applyStyleToElements(style, elements);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      if (!!key) {\n        this._inputMap[key] = source;\n      }\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(\n          keyOptions,\n          this._mediaMonitor,\n          (change) => onMediaQueryChange(change)\n      );\n    }\n    return this._mqActivation;\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /**\n   * Does this directive have 1 or more responsive keys defined\n   * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n   */\n  hasResponsiveAPI(baseKey: string) {\n    const totalKeys = Object.keys(this._inputMap).length;\n    const baseValue = this._inputMap[baseKey];\n    return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n  }\n\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** Original dom Elements CSS display style */\n  protected _display;\n\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {ResponsiveActivation} from '../responsive-activation/responsive-activation';\nimport {MediaQuerySubscriber} from '../media-change';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {StyleUtils} from '../style-utils/style-utils';\n\n\n/**\n * Adapter to the BaseFxDirective abstract class so it can be used via composition.\n * @see BaseFxDirective\n */\nexport class BaseFxDirectiveAdapter extends BaseFxDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseFxDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation;\n  }\n\n  /**\n   * BaseFxDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n    super(_mediaMonitor, _elementRef, _styler);\n  }\n\n  /**\n    * Does this directive have 1 or more responsive keys defined\n    * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n    */\n  hasResponsiveAPI() {\n   return super.hasResponsiveAPI(this._baseKey);\n  }\n\n  /**\n   * @see BaseFxDirective._queryInput\n   */\n  queryInput(key) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error(\n        `Invalid class value '${key}' provided. Did you want to cache the raw value?`\n      );\n    }\n  }\n\n  /**\n   * @see BaseFxDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    if (key) {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source ? source.join(' ') : '';\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes: string[] = [];\n    if (source) {\n      for (let prop in source) {\n        if (!!source[prop]) {\n          classes.push(prop);\n        }\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n    this._actives = [];\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList, _) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias) {\n    let bp = this._breakpoints.findByAlias(queryOrAlias);\n    if (bp) {\n      queryOrAlias = bp.mediaQuery;\n    }\n    return queryOrAlias;\n  }\n\n  /**\n   * Manually activate any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      let bp = this._breakpoints.findByQuery(mediaQuery);\n      let alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activate of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases) {\n    let activate = (alias) => {\n      let bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery) {\n    let mql = <MockMediaQueryList> this._registry.get(mediaQuery);\n    let alreadyAdded = this._actives.reduce((found, it) => {\n      return found || (mql && (it.media === mql.media));\n    }, false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current Mock MQLs */\n  private _deactivateAll() {\n    if (this._actives.length) {\n      // Deactivate all current MQLs and reset the buffer\n      for (const it of this._actives) {\n        it.deactivate();\n      }\n      this._actives = [];\n    }\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return (this._actives.length > 0);\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\nimport {MediaChange} from '../media-change';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n    this._registry = new Map<string, ServerMediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\nimport {mergeAlias} from '../add-alias';\n\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    let items: BreakPoint[] = this._breakpoints.overlappings.reverse();\n    return items.filter((bp: BreakPoint) => {\n      return this._matchMedia.isActive(bp.mediaQuery);\n    });\n  }\n\n  get active(): BreakPoint | null {\n    let found: BreakPoint | null = null, items = this.breakpoints.reverse();\n    items.forEach(bp => {\n      if (bp.alias !== '') {\n        if (!found && this._matchMedia.isActive(bp.mediaQuery)) {\n          found = bp;\n        }\n      }\n    });\n\n    let first = this.breakpoints[0];\n    return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias?: string): Observable<MediaChange> {\n    let bp = this._breakpoints.findByAlias(alias || '') ||\n      this._breakpoints.findByQuery(alias || '');\n    let hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    let media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return media$.pipe(\n      map(change => mergeAlias(change, bp)),\n      filter(hasAlias)\n    );\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    let queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {DISABLE_VENDOR_PREFIXES} from '../tokens/vendor-prefixes-token';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId,\n              @Optional() @Inject(DISABLE_VENDOR_PREFIXES) private noVendorPrefixes: boolean) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement, style: StyleDefinition, value?: string | number) {\n    let styles = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.noVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.noVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    if (value === FALLBACK_STYLE) {\n      value = '';\n    }\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return element.style[styleName] || element.style.getPropertyValue(styleName) || '';\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : FALLBACK_STYLE;\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: {}, element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n      values.sort();\n      for (let value of values) {\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          element.style.setProperty(key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n\nconst FALLBACK_STYLE = 'block';\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","removeStyles","_document","platformId","isPlatformBrowser","classRegex_1","Array","from","querySelectorAll","CLASS_NAME","forEach","el","classList","contains","parentNode","removeChild","className","replace","extendObject","dest","sources","_i","arguments","length","TypeError","_a","sources_1","source","key","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","slice","toUpperCase","camelCase","name","ALIAS_DELIMITERS","split","map","join","validateSuffixes","list","bp","suffix","alias","overlapping","mergeByAlias","defaults","custom","dict","keys","k","normalizeQuery","mediaQuery","unique","seen","filter","item","mergeAlias","mqAlias","STYLESHEET_MAP_PROVIDER_FACTORY","parentSheet","StylesheetMap","buildLayoutCSS","value","validateValue","buildCSS","toLowerCase","direction","wrap","inline","LAYOUT_VALUES","find","x","INLINE","validateWrapValue","display","box-sizing","flex-direction","flex-wrap","BREAKPOINTS_PROVIDER_FACTORY","parentBreakpoints","breakpoints","disableDefaults","addOrientation","bpFlattenArray","concat","apply","v","isArray","builtIns","DEFAULT_BREAKPOINTS","ORIENTATION_BREAKPOINTS","MEDIA_MONITOR_PROVIDER_FACTORY","parentMonitor","matchMedia","MediaMonitor","OBSERVABLE_MEDIA_PROVIDER_FACTORY","parentService","MediaService","applyCssPrefixes","target","isNaN","setPrototypeOf","__proto__","p","BROWSER_PROVIDER","provide","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","PLATFORM_ID","multi","DISABLE_DEFAULT_BREAKPOINTS","InjectionToken","providedIn","factory","ADD_ORIENTATION_BREAKPOINTS","BREAKPOINT","RESPONSIVE_ALIASES","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","BREAKPOINTS","inject","BreakPointRegistry","_registry","defineProperty","overlaps","it","nonOverlaps","findByAlias","findByQuery","query","type","Injectable","args","decorators","Inject","MediaChange","matches","clone","MatchMedia","_zone","_platformId","Map","_source","BehaviorSubject","_observable$","asObservable","isActive","mql","get","observe","registerQuery","pipe","change","_this","_prepareQueryCSS","onMQLEvent","e","run","next","_buildMQL","addListener","set","media","removeListener","mediaQueries","ALL_STYLES","styleEl_1","createElement","setAttribute","cssText","appendChild","createTextNode","head","mq","console","error","NgZone","undefined","ObservableMedia","mediaWatcher","filterOverlaps","_registerBreakPoints","observable$","_buildObservable","_toMediaQuery","subscribe","complete","queries","sortedItems","self","media$","activationsOnly","addAliasInformation","_findByQuery","excludeOverlaps","_findByAlias","ObservableMediaProvider","useClass","NgModule","providers","CoreModule","stylesheet","addStyleToElement","element","style","clearStyles","clear","getStyleForElement","styleName","styles","STYLESHEET_MAP_PROVIDER","Optional","SkipSelf","ADD_FLEX_STYLES","SERVER_TOKEN","DISABLE_VENDOR_PREFIXES","KeyOptions","baseKey","defaultValue","inputKeys","ResponsiveActivation","_options","_mediaMonitor","_onMediaChanges","_subscribers","_registryMap","_buildRegistryMap","_configureChangeObservers","reverse","_activatedInputKey","activatedInputKey","hasKeyValue","_lookupKeyValue","destroy","link","unsubscribe","subscriptions","_keyInUse","buildChanges","property","push","mediaMonitor","_onMonitorEvents","_calculateActivatedValue","current","currentKey","newKey","_validateInputKey","activatedInput","inputKey","isMissingKey","activeOverlaps","some","BaseFxDirective","_elementRef","_styler","_inputMap","_hasInitialized","_mqActivation","previousVal","SimpleChange","ngOnChanges","nativeElement","_queryInput","ngOnInit","_display","_getDisplayStyle","Error","ngOnDestroy","_getDefaultVal","fallbackVal","val","lookupStyle","_getAttributeValue","attribute","lookupAttributeValue","_getFlowDirection","addIfMissing","hasInlineValue","getFlowDirection","elements","applyStyleToElements","trim","_applyStyleToElement","applyStyleToElement","_applyStyleToElements","_cacheInput","prop","_listenForMediaQueryChanges","onMediaQueryChange","keyOptions","obj","children","buffer","i","hasResponsiveAPI","BaseFxDirectiveAdapter","_super","_baseKey","call","tslib_1.__extends","mqa","queryInput","cacheInput","cacheRaw","_cacheInputRaw","_cacheInputArray","_cacheInputObject","_cacheInputString","listenForMediaQueryChanges","classes","BREAKPOINTS_PROVIDER","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","_actives","clearAll","_","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","reduce","found","deactivate","has","MockMediaQueryList","_mediaQuery","_isActive","_listeners","callback","listener","indexOf","MockMatchMediaProvider","ServerMediaQueryList","ServerMatchMedia","activateBreakpoint","lookupBreakpoint","deactivateBreakpoint","_matchMedia","_registerBreakpoints","items","overlappings","hasAlias","MEDIA_MONITOR_PROVIDER","OBSERVABLE_MEDIA_PROVIDER","StyleUtils","_serverStylesheet","_serverModuleLoaded","noVendorPrefixes","_applyMultiValueStyleToElement","FALLBACK_STYLE","lookupInlineStyle","isPlatformServer","getAttribute","getPropertyValue","inlineOnly","getComputedStyle","sort","values","values_1","setProperty"],"mappings":"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"}