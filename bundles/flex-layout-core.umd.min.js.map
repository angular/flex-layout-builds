{"version":3,"file":"flex-layout-core.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/module.ts","../../src/lib/core/media-change.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/match-media/server-match-media.ts","../../src/lib/core/media-observer/media-observer.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts","../../src/lib/core/media-marshaller/media-marshaller.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n/** HOF to sort the breakpoints by priority */\nexport function prioritySort(a: BreakPoint, b: BreakPoint): number {\n  const priorityA = a.priority || 0;\n  const priorityB = b.priority || 0;\n  return priorityB - priorityA;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  protected _registry = new Map<string, MediaQueryList>();\n  protected _source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  protected _observable$ = this._source.asObservable();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    if (mediaQuery) {\n      this.registerQuery(mediaQuery);\n    }\n\n    return this._observable$.pipe(\n      filter(change => (mediaQuery ? (change.mediaQuery === mediaQuery) : true))\n    );\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? Array.from(new Set(mediaQuery)) : [mediaQuery];\n\n    if (list.length > 0) {\n      buildQueryCss(list, this._document);\n    }\n\n    list.forEach(query => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this._source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this._registry.get(query);\n\n      if (!mql) {\n        mql = this._buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this._registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        onMQLEvent(mql as unknown as MediaQueryListEvent);\n      }\n    });\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: {[key: string]: any} = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n` ;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<any>window).matchMedia('all').addListener;\n\n  return canListen ? (<any>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {extendObject} from '../utils/object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n  'Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedBreakpoint);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.')[1] || '';\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  protected triggerUpdate() {\n    const val = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n    this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, val);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(min-width: 0px) and (max-width: 599px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)',\n    priority: 7,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)',\n    priority: 10,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)',\n    priority: 8,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)',\n    priority: 9,\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)',\n    priority: 9,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)',\n    priority: 8,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)',\n    priority: 10,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1919px)',\n    priority: 7,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)',\n    priority: 100,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint | null {\n    return this._registry.find(bp => bp.alias == alias) || null;\n  }\n\n  findByQuery(query: string): BreakPoint | null {\n    return this._registry.find(bp => bp.mediaQuery == query) || null;\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => !!it.suffix ? it.suffix : '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  protected _registry: Map<string, MockMediaQueryList> = new Map();\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually activate any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl', true);\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg', true);\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md', true);\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm', true);\n          break;\n      }\n\n      // Simulate activate of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs', true);\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs', true);\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs', true);\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs', true);\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string, useOverlaps = false) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias, useOverlaps);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string, useOverlaps = false) {\n    if (useOverlaps) {\n      this._registerMediaQuery(mediaQuery);\n    }\n    const mql = this._registry.get(mediaQuery);\n    const alreadyAdded = this._actives\n      .reduce((found, it) => (found || (mql ? (it.media === mql.media) : false)), false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current Mock MQLs */\n  private _deactivateAll() {\n    if (this._actives.length) {\n      // Deactivate all current MQLs and reset the buffer\n      for (const it of this._actives) {\n        it.deactivate();\n      }\n      this._actives = [];\n    }\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this._actives.length > 0;\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: EventListenerOrEventListenerObject | null) {\n  }\n\n  addEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | AddEventListenerOptions): void;\n  addEventListener(_: string,\n                   __: EventListenerOrEventListenerObject,\n                   ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                  ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | EventListenerOptions): void;\n  removeEventListener(_: string,\n                      __: EventListenerOrEventListenerObject,\n                      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: EventListenerOrEventListenerObject | null) {\n  }\n\n  addEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | AddEventListenerOptions): void;\n  addEventListener(_: string,\n                   __: EventListenerOrEventListenerObject,\n                   ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | EventListenerOptions): void;\n  removeEventListener(_: string,\n                      __: EventListenerOrEventListenerObject,\n                      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList> = new Map();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {mergeAlias} from '../add-alias';\n\n/**\n * Class internalizes a MatchMedia service and exposes an Observable interface.\n\n * This exposes an Observable with a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the MediaObserver\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.media$` with syntax like mediaObserver.media$.map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const onChange = (change: MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g. mediaObserver.media$.subscribe(onChange);\n *\n *      mediaObserver.media$()\n *        .pipe(\n *          filter((change: MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver {\n  /**\n   * Whether to announce gt-<xxx> breakpoint activations\n   */\n  filterOverlaps = true;\n  readonly media$: Observable<MediaChange>;\n\n  constructor(private breakpoints: BreakPointRegistry, private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.media$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    return this.mediaWatcher.isActive(this._toMediaQuery(alias));\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    const queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const excludeOverlaps = (change: MediaChange) => {\n      const bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(this.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return this.mediaWatcher.observe()\n      .pipe(\n        filter(change => change.matches),\n        filter(excludeOverlaps),\n        map((change: MediaChange) =>\n          mergeAlias(change, this._findByQuery(change.mediaQuery))\n        )\n      );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias: string) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query: string) {\n    const bp = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value.trim();\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {prioritySort} from '../breakpoints/breakpoint-tools';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\ntype Builder = Function;\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private watcherMap: WatcherMap = new WeakMap();\n  private builderMap: BuilderMap = new WeakMap();\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedBreakpoint(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry) {\n    this.matchMedia.observe().subscribe(this.activate.bind(this));\n  }\n\n  /**\n   * activate or deactivate a given breakpoint\n   * @param mc\n   */\n  activate(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (mc.matches && bp) {\n      this.activatedBreakpoints.push(bp);\n      this.activatedBreakpoints.sort(prioritySort);\n    } else if (!mc.matches && bp) {\n      // Remove the breakpoint when it's deactivated\n      this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n    }\n    this.updateStyles();\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param builder optional so that custom bp directives don't have to re-provide this\n   * @param observables\n   */\n  init(element: HTMLElement,\n       key: string,\n       builder?: Builder,\n       observables: Observable<any>[] = []): void {\n    if (builder) {\n      let builders = this.builderMap.get(element);\n      if (!builders) {\n        builders = new Map();\n        this.builderMap.set(element, builders);\n      }\n      builders.set(key, builder);\n    }\n    if (observables) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...observables).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getFallback(bpMap);\n      if (values) {\n        const value = values.get(key);\n        return value !== undefined ? value : '';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getFallback(bpMap);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    this.updateElement(element, key, this.getValue(element, key));\n  }\n\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject.asObservable()\n      .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const valueMap = this.getFallback(bpMap);\n      if (valueMap) {\n        valueMap.forEach((v, k) => this.updateElement(el, k, v));\n      }\n    });\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.builderMap.get(element);\n    if (builders) {\n      const builder: Builder | undefined = builders.get(key);\n      if (builder) {\n        builder(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   */\n  private getFallback(bpMap: BreakpointMap): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        return valueMap;\n      }\n    }\n    return bpMap.get('');\n  }\n}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","removeStyles","_document","platformId","isPlatformBrowser","classRegex_1","Array","from","querySelectorAll","CLASS_NAME","forEach","el","classList","contains","parentNode","removeChild","className","replace","buildLayoutCSS","value","_a","validateValue","buildCSS","toLowerCase","split","direction","wrap","inline","LAYOUT_VALUES","find","x","INLINE","validateWrapValue","display","box-sizing","flex-direction","flex-wrap","extendObject","dest","sources","_i","arguments","length","TypeError","sources_1","source","key","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","slice","toUpperCase","camelCase","name","ALIAS_DELIMITERS","map","join","validateSuffixes","list","bp","suffix","alias","overlapping","mergeByAlias","defaults","custom","dict","keys","k","prioritySort","a","priorityA","priority","buildQueryCss","mediaQueries","filter","it","ALL_STYLES","query","styleEl_1","createElement","setAttribute","styleSheet","cssText","appendChild","createTextNode","mq","e","console","error","constructMql","isBrowser","matchMedia","addListener","matches","media","removeListener","mergeAlias","mqAlias","applyCssPrefixes","target","isNaN","validateBasis","basis","grow","shrink","parts","j","indexOf","_validateCalcValue","substring","trim","substr","calc","setPrototypeOf","__proto__","p","BROWSER_PROVIDER","provide","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","PLATFORM_ID","multi","type","NgModule","args","providers","CoreModule","MediaChange","mediaQuery","property","clone","stylesheet","Map","StylesheetMap","addStyleToElement","element","style","get","set","clearStyles","clear","getStyleForElement","styleName","styles","Injectable","providedIn","DEFAULT_CONFIG","addFlexToParent","addOrientationBps","disableDefaultBps","disableVendorPrefixes","serverLoaded","useColumnBasisZero","LAYOUT_CONFIG","InjectionToken","factory","SERVER_TOKEN","BREAKPOINT","BaseDirective2","elementRef","styleBuilder","styler","marshal","DIRECTIVE_KEY","inputs","destroySubject","Subject","styleCache","defineProperty","nativeElement","parentElement","getValue","setValue","activatedBreakpoint","ngOnChanges","changes","_this","val","currentValue","ngOnDestroy","next","complete","releaseElement","addStyles","input","parent","builder","useCache","shouldCache","genStyles","buildStyles","applyStyleToElement","sideEffect","triggerUpdate","updateElement","getFlexFlowDirection","addIfMissing","getFlowDirection","elements","applyStyleToElements","RESPONSIVE_ALIASES","DEFAULT_BREAKPOINTS","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","BREAKPOINTS","breakpoints","inject","layoutConfig","bpFlattenArray","concat","apply","v","isArray","BreakPointRegistry","_registry","overlaps","nonOverlaps","findByAlias","findByQuery","decorators","Inject","MatchMedia","_zone","_platformId","_source","BehaviorSubject","_observable$","asObservable","isActive","mql","observe","registerQuery","pipe","change","Set","onMQLEvent","run","_buildMQL","NgZone","undefined","MockMatchMedia","_breakpoints","_super","call","autoRegisterQueries","useOverlaps","_actives","tslib_1.__extends","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","reduce","found","push","deactivate","has","MockMediaQueryList","_mediaQuery","_isActive","_listeners","onchange","callback","listener","_","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","useClass","ServerMediaQueryList","ServerMatchMedia","activateBreakpoint","lookupBreakpoint","deactivateBreakpoint","MediaObserver","mediaWatcher","filterOverlaps","_registerBreakPoints","media$","_buildObservable","_toMediaQuery","queries","sortedItems","excludeOverlaps","_findByQuery","_findByAlias","StyleUtils","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","lookupStyle","hasInlineValue","lookupInlineStyle","isPlatformServer","lookupAttributeValue","attribute","getAttribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","sort","values","values_1","setProperty","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","i","colonIndex","Error","name_1","styleAttrValue","Optional","Boolean","StyleBuilder","_input","_styles","_parent","MediaMarshaller","activatedBreakpoints","elementMap","watcherMap","WeakMap","builderMap","subject","subscribe","bind","mc","splice","updateStyles","init","observables","builders","watchers","newSubscription","merge","bpMap","getFallback","hasValue","trackValue","valueMap","s","unsubscribe","delete","activatedBp"],"mappings":"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"}