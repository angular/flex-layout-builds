{"version":3,"file":"flex-layout-core.umd.min.js","sources":["../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/style-builder/style-builder.ts","../../src/lib/core/media-marshaller/media-marshaller.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/browser-provider.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/basis-validator/basis-validator.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/tokens/library-config.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/media-change.ts","../../src/lib/core/observable-media/observable-media.ts","../../src/lib/core/module.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/responsive-activation/responsive-activation.ts","../../src/lib/core/base/base.ts","../../src/lib/core/base/base-adapter.ts","../../src/lib/core/base/base2.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/match-media/server-match-media.ts","../../src/lib/core/media-monitor/media-monitor.ts","../../src/lib/core/media-observer/media-observer.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value.trim();\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {prioritySort} from '../breakpoints/breakpoint-tools';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\ntype Builder = Function;\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  // registry of special triggers to update elements\n  private watcherMap: WatcherMap = new WeakMap();\n  private builderMap: BuilderMap = new WeakMap();\n  private clearBuilderMap: BuilderMap = new WeakMap();\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedBreakpoint(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry) {\n    this.matchMedia\n      .observe()\n      .subscribe(this.activate.bind(this));\n    this.registerBreakpoints();\n  }\n\n  /**\n   * activate or deactivate a given breakpoint\n   * @param mc\n   */\n  activate(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(prioritySort);\n        this.updateStyles();\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n    this.buildElementKeyMap(element, key);\n    initBuilderMap(this.builderMap, element, key, updateFn);\n    initBuilderMap(this.clearBuilderMap, element, key, clearFn);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getFallback(bpMap, key);\n      if (values) {\n        const value = values.get(key);\n        return value !== undefined ? value : '';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getFallback(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    this.updateElement(element, key, this.getValue(element, key));\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject.asObservable()\n      .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const valueMap = this.getFallback(bpMap);\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n      keyMap.forEach(k => {\n        const fallbackMap = this.getFallback(bpMap, k);\n        if (fallbackMap) {\n          const value = fallbackMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearBuilderMap.get(element);\n    if (builders) {\n      const builder: Builder | undefined = builders.get(key);\n      if (builder) {\n        builder();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.builderMap.get(element);\n    if (builders) {\n      const builder: Builder | undefined = builders.get(key);\n      if (builder) {\n        builder(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getFallback(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    return bpMap.get('');\n  }\n\n  private registerBreakpoints() {\n    const queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.matchMedia.registerQuery(queries);\n  }\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n/** HOF to sort the breakpoints by priority */\nexport function prioritySort(a: BreakPoint, b: BreakPoint): number {\n  const priorityA = a.priority || 0;\n  const priorityB = b.priority || 0;\n  return priorityB - priorityA;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  protected _registry = new Map<string, MediaQueryList>();\n  protected _source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  protected _observable$ = this._source.asObservable();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    if (mediaQuery) {\n      this.registerQuery(mediaQuery);\n    }\n\n    return this._observable$.pipe(\n      filter(change => (mediaQuery ? (change.mediaQuery === mediaQuery) : true))\n    );\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? Array.from(new Set(mediaQuery)) : [mediaQuery];\n\n    if (list.length > 0) {\n      buildQueryCss(list, this._document);\n    }\n\n    list.forEach(query => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this._source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this._registry.get(query);\n\n      if (!mql) {\n        mql = this._buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this._registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        onMQLEvent(mql as unknown as MediaQueryListEvent);\n      }\n    });\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: {[key: string]: any} = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n` ;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<any>window).matchMedia('all').addListener;\n\n  return canListen ? (<any>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {extendObject} from '../utils/object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(min-width: 0px) and (max-width: 599px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)',\n    priority: 7,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)',\n    priority: 10,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)',\n    priority: 8,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)',\n    priority: 9,\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)',\n    priority: 9,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)',\n    priority: 8,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)',\n    priority: 100,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)',\n    priority: 10,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1919px)',\n    priority: 7,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)',\n    priority: 100,\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n  'Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: () => DEFAULT_CONFIG\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint | null {\n    return this._registry.find(bp => bp.alias == alias) || null;\n  }\n\n  findByQuery(query: string): BreakPoint | null {\n    return this._registry.find(bp => bp.mediaQuery == query) || null;\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => !!it.suffix ? it.suffix : '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '') {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable, PartialObserver, Subscribable, Subscription} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {mergeAlias} from '../add-alias';\nimport {BreakPoint} from '../breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n * @deprecated use MediaObserver instead\n * @deletion-target v7.0.0-beta.21\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n  abstract subscribe(observer?: PartialObserver<MediaChange>): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import {filter} from 'rxjs/operators/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .pipe(\n *          filter((change:MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n *  @deprecated use MediaObserver instead\n *  @deletion-target v7.0.0-beta.21\n */\n@Injectable({providedIn: 'root'})\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    return this.mediaWatcher.isActive(this._toMediaQuery(alias));\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(observerOrNext?: PartialObserver<MediaChange> | ((value: MediaChange) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    if (observerOrNext) {\n      if (typeof observerOrNext === 'object') {\n        return this.observable$.subscribe(observerOrNext.next, observerOrNext.error,\n          observerOrNext.complete);\n      }\n    }\n\n    return this.observable$.subscribe(observerOrNext, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    const queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const excludeOverlaps = (change: MediaChange) => {\n      const bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(this.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return this.mediaWatcher.observe().pipe(\n      filter(change => change.matches),\n      filter(excludeOverlaps),\n      map((change: MediaChange) =>\n        mergeAlias(change, this._findByQuery(change.mediaQuery)))\n    );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias: string) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query: string) {\n    const bp: BreakPoint | null = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private readonly observable$: Observable<MediaChange>;\n}\n\n/**\n * @deprecated\n * @deletion-target v7.0.0-beta.21\n */\nexport const ObservableMediaProvider = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  useClass: MediaService\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\nimport {ObservableMediaProvider} from './observable-media/observable-media';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [BROWSER_PROVIDER, ObservableMediaProvider]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {MediaChange, MediaQuerySubscriber} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\n\n/**\n * @deprecated\n * @deletion-target v7.0.0-beta.21\n */\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\n/**\n * @deprecated\n * @deletion-target v7.0.0-beta.21\n */\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n * @deprecated\n * @deletion-target v7.0.0-beta.21\n */\nexport class ResponsiveActivation {\n  private _activatedInputKey: string = '';\n  private _registryMap: BreakPointX[] = this._buildRegistryMap();\n  private _subscribers: Subscription[] = this._configureChangeObservers();\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n  }\n\n  /**\n   * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n   * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n   * important when several media queries are 'registered' and from which, the browser uses the\n   * first matching media query.\n   */\n  get registryFromLargest(): BreakPointX[] {\n    return [...this._registryMap].reverse();\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    const key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  hasKeyValue(key: string) {\n    return this._options.inputKeys[key] !== undefined;\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach(link => link.unsubscribe());\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): Subscription[] {\n    const subscriptions: Subscription[] = [];\n\n    this._registryMap.forEach(bp => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        const buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n          this._mediaMonitor\n              .observe(bp.alias)\n              .pipe(map(buildChanges))\n              .subscribe(change => {\n                this._onMonitorEvents(change);\n              })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this._mediaMonitor.breakpoints\n      .map(bp => <BreakPointX>extendObject({}, bp, {\n        baseKey: this._options.baseKey,         // e.g. layout, hide, self-align, flex-wrap\n        key: this._options.baseKey + bp.suffix  // e.g. layoutGtSm, layoutMd, layoutGtLg\n      }))\n      .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property === this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key: string): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                       // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey === currentKey) ? '' : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey: string) {\n    const isMissingKey = (key: string) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      this._mediaMonitor.activeOverlaps.some(bp => {\n        const key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key: string) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  SimpleChange,\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  StyleUtils,\n} from '../style-utils/style-utils';\nimport {ResponsiveActivation, KeyOptions} from '../responsive-activation/responsive-activation';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {MediaQuerySubscriber} from '../media-change';\nimport {StyleBuilder} from '../style-builder/style-builder';\n\n/**\n * Abstract base class for the Layout API styling directives.\n * @deprecated\n * @deletion-target v7.0.0-beta.21\n */\nexport abstract class BaseDirective implements OnDestroy, OnChanges {\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    const change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n  protected constructor(protected _mediaMonitor: MediaMonitor,\n                        protected _elementRef: ElementRef,\n                        protected _styler: StyleUtils,\n                        protected _styleBuilder?: StyleBuilder) {\n  }\n\n  /**\n   * Does this directive have 1 or more responsive keys defined\n   * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n   */\n  hasResponsiveAPI(baseKey: string) {\n    const totalKeys = Object.keys(this._inputMap).length;\n    const baseValue = this._inputMap[baseKey];\n    return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    delete this._mediaMonitor;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  protected get nativeElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this._styleBuilder!;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this._styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this._styleCache.set(input, genStyles);\n      }\n    }\n\n    this._applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Access the current value (if any) of the @Input property */\n  protected _queryInput(key: string) {\n    return this._inputMap[key];\n  }\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    const val = this._queryInput(key);\n    const hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows us to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source: HTMLElement = this.nativeElement): string {\n    const query = 'display';\n    return this._styler.lookupStyle(source, query);\n  }\n\n  /** Quick accessor to raw attribute value on the target DOM element */\n  protected _getAttributeValue(attribute: string,\n                               source: HTMLElement = this.nativeElement): string {\n    return this._styler.lookupAttributeValue(source, attribute);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      let [value, hasInlineValue] = this._styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this._styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 element: HTMLElement = this.nativeElement) {\n    this._styler.applyStyleToElement(element, style, value);\n  }\n\n  /** Applies styles given via string pair or object map to the directive's element */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[]) {\n    this._styler.applyStyleToElements(style, elements);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      if (!!key) {\n        this._inputMap[key] = source;\n      }\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(keyOptions, this._mediaMonitor,\n        (change) => onMediaQueryChange(change));\n    }\n    return this._mqActivation;\n  }\n\n  /** Special accessor to query for all child 'element' nodes regardless of type, class, etc */\n  protected get childrenNodes(): HTMLElement[] {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** MediaQuery Activation Tracker */\n  protected _mqActivation?: ResponsiveActivation;\n\n  /** Dictionary of input keys with associated values */\n  protected _inputMap: {[key: string]: any} = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n\n  /** Cache map for style computation */\n  protected _styleCache: Map<string, StyleDefinition> = new Map();\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef} from '@angular/core';\n\nimport {BaseDirective} from './base';\nimport {ResponsiveActivation} from '../responsive-activation/responsive-activation';\nimport {MediaQuerySubscriber} from '../media-change';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {StyleUtils} from '../style-utils/style-utils';\n\n\n/**\n * Adapter to the BaseDirective abstract class so it can be used via composition.\n * @see BaseDirective\n * @deprecated\n * @deletion-target v7.0.0-beta.21\n */\nexport class BaseDirectiveAdapter extends BaseDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation!;\n  }\n\n  /**\n   * BaseDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n    super(_mediaMonitor, _elementRef, _styler);\n  }\n\n  /**\n    * Does this directive have 1 or more responsive keys defined\n    * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n    */\n  hasResponsiveAPI() {\n   return super.hasResponsiveAPI(this._baseKey);\n  }\n\n  /**\n   * @see BaseDirective._queryInput\n   */\n  queryInput(key: string | null) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error(\n        `Invalid class value '${key}' provided. Did you want to cache the raw value?`\n      );\n    }\n  }\n\n  /**\n   * @see BaseDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    if (key) {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source ? source.join(' ') : '';\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes: string[] = [];\n    if (source) {\n      for (let prop in source) {\n        if (!!source[prop]) {\n          classes.push(prop);\n        }\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedBreakpoint);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    const val = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n    this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, val);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  protected _registry: Map<string, MockMediaQueryList> = new Map();\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually activate any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activate of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql = this._registry.get(mediaQuery);\n    const alreadyAdded = this._actives\n      .reduce((found, it) => (found || (mql ? (it.media === mql.media) : false)), false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current Mock MQLs */\n  private _deactivateAll() {\n    if (this._actives.length) {\n      // Deactivate all current MQLs and reset the buffer\n      for (const it of this._actives) {\n        it.deactivate();\n      }\n      this._actives = [];\n    }\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this._actives.length > 0;\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: EventListenerOrEventListenerObject | null) {\n  }\n\n  addEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | AddEventListenerOptions): void;\n  addEventListener(_: string,\n                   __: EventListenerOrEventListenerObject,\n                   ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                  ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | EventListenerOptions): void;\n  removeEventListener(_: string,\n                      __: EventListenerOrEventListenerObject,\n                      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: EventListenerOrEventListenerObject | null) {\n  }\n\n  addEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | AddEventListenerOptions): void;\n  addEventListener(_: string,\n                   __: EventListenerOrEventListenerObject,\n                   ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof\n    MediaQueryListEventMap>(_: K,\n                            __: (this: MediaQueryList,\n                                 ev: MediaQueryListEventMap[K]) => any,\n                            ___?: boolean | EventListenerOptions): void;\n  removeEventListener(_: string,\n                      __: EventListenerOrEventListenerObject,\n                      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList> = new Map();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\nimport {mergeAlias} from '../add-alias';\n\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n * @deprecated\n * @deletion-target v7.0.0-beta.21\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    return this._breakpoints.overlappings\n      .reverse()\n      .filter(bp => this._matchMedia.isActive(bp.mediaQuery));\n  }\n\n  get active(): BreakPoint | null {\n    const items = this.breakpoints.reverse();\n    const first = items.find(bp => bp.alias !== '' && this._matchMedia.isActive(bp.mediaQuery));\n    return first || null;\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    const bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias: string = ''): Observable<MediaChange> {\n    const bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    const hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    const media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return media$.pipe(\n      map(change => mergeAlias(change, bp)),\n      filter(hasAlias)\n    );\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    const queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {mergeAlias} from '../add-alias';\n\n/**\n * Class internalizes a MatchMedia service and exposes an Observable interface.\n\n * This exposes an Observable with a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the MediaObserver\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.media$` with syntax like mediaObserver.media$.map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const onChange = (change: MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g. mediaObserver.media$.subscribe(onChange);\n *\n *      mediaObserver.media$()\n *        .pipe(\n *          filter((change: MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver {\n  /**\n   * Whether to announce gt-<xxx> breakpoint activations\n   */\n  filterOverlaps = true;\n  readonly media$: Observable<MediaChange>;\n\n  constructor(private breakpoints: BreakPointRegistry, private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.media$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias: string): boolean {\n    return this.mediaWatcher.isActive(this._toMediaQuery(alias));\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    const queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const excludeOverlaps = (change: MediaChange) => {\n      const bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(this.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return this.mediaWatcher.observe()\n      .pipe(\n        filter(change => change.matches),\n        filter(excludeOverlaps),\n        map((change: MediaChange) =>\n          mergeAlias(change, this._findByQuery(change.mediaQuery))\n        )\n      );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias: string) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query: string) {\n    const bp = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n}\n"],"names":["decorators","type","Optional","Inject","args","SERVER_TOKEN","Object","PLATFORM_ID","undefined","LAYOUT_CONFIG","StyleUtils","StyleBuilder","this","shouldCache","prototype","sideEffect","_input","_styles","_parent","MediaMarshaller","matchMedia","breakpoints","activatedBreakpoints","elementMap","Map","elementKeyMap","WeakMap","watcherMap","builderMap","clearBuilderMap","subject","Subject","observe","subscribe","activate","bind","registerBreakpoints","defineProperty","alias","mc","bp","findByQuery","mediaQuery","matches","indexOf","push","sort","prioritySort","updateStyles","splice","init","element","key","updateFn","clearFn","extraTriggers","buildElementKeyMap","initBuilderMap","watchExtraTriggers","getValue","bpMap","get","values","getFallback","value","hasValue","setValue","val","set","updateElement","trackValue","asObservable","pipe","filter","v","_this","forEach","el","valueMap","keyMap","Set","k","delete","fallbackMap","clearElement","builders","builder","next","releaseElement","s","unsubscribe","_","add","triggers","length","watchers","newSubscription","merge","apply","currentValue","query","i","activatedBp","has","queries","sortedItems","map","registerQuery","Injectable","providedIn","MatchMedia","BreakPointRegistry","__extends","d","b","__","constructor","extendStatics","create","removeStyles","_document","platformId","isPlatformBrowser","classRegex_1","Array","from","querySelectorAll","CLASS_NAME","classList","contains","parentNode","removeChild","className","replace","extendObject","dest","sources","_i","arguments","TypeError","_a","sources_1","source","hasOwnProperty","firstUpperCase","part","first","charAt","remainder","slice","toUpperCase","camelCase","name","ALIAS_DELIMITERS","split","join","validateSuffixes","list","suffix","overlapping","mergeByAlias","defaults","custom","dict","keys","a","priorityA","priority","buildQueryCss","mediaQueries","it","ALL_STYLES","styleEl_1","createElement","setAttribute","styleSheet","cssText","appendChild","createTextNode","mq","e","console","error","constructMql","isBrowser","addListener","media","removeListener","mergeAlias","mqAlias","buildLayoutCSS","validateValue","buildCSS","toLowerCase","direction","wrap","inline","LAYOUT_VALUES","find","x","INLINE","validateWrapValue","display","box-sizing","flex-direction","flex-wrap","applyCssPrefixes","target","isNaN","validateBasis","basis","grow","shrink","parts","j","_validateCalcValue","substring","trim","substr","calc","input","oldMap","setPrototypeOf","__proto__","p","__assign","assign","t","n","call","BROWSER_PROVIDER","provide","APP_BOOTSTRAP_LISTENER","useFactory","deps","DOCUMENT","multi","BREAKPOINT","InjectionToken","factory","RESPONSIVE_ALIASES","DEFAULT_BREAKPOINTS","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","ORIENTATION_BREAKPOINTS","DEFAULT_CONFIG","addFlexToParent","addOrientationBps","disableDefaultBps","disableVendorPrefixes","serverLoaded","useColumnBasisZero","BREAKPOINTS","inject","layoutConfig","bpFlattenArray","concat","isArray","_registry","overlaps","nonOverlaps","findByAlias","MediaChange","property","clone","_zone","_platformId","_source","BehaviorSubject","_observable$","isActive","mql","change","onMQLEvent","run","_buildMQL","NgZone","ObservableMedia","MediaService","mediaWatcher","filterOverlaps","_registerBreakPoints","observable$","_buildObservable","_toMediaQuery","observerOrNext","complete","excludeOverlaps","_findByQuery","_findByAlias","ObservableMediaProvider","useClass","NgModule","providers","CoreModule","stylesheet","StylesheetMap","addStyleToElement","style","clearStyles","clear","getStyleForElement","styleName","styles","KeyOptions","baseKey","defaultValue","inputKeys","ResponsiveActivation","_options","_mediaMonitor","_onMediaChanges","_activatedInputKey","_registryMap","_buildRegistryMap","_subscribers","_configureChangeObservers","reverse","activatedInputKey","hasKeyValue","_lookupKeyValue","destroy","link","subscriptions","_keyInUse","buildChanges","_onMonitorEvents","_calculateActivatedValue","current","currentKey","newKey","_validateInputKey","activatedInput","inputKey","isMissingKey","activeOverlaps","some","BaseDirective","_elementRef","_styler","_styleBuilder","_inputMap","_hasInitialized","_styleCache","_mqActivation","previousVal","SimpleChange","ngOnChanges","hasResponsiveAPI","ngOnInit","Error","ngOnDestroy","nativeElement","addStyles","parent","useCache","genStyles","buildStyles","_applyStyleToElement","_queryInput","_getDefaultVal","fallbackVal","_getDisplayStyle","lookupStyle","_getAttributeValue","attribute","lookupAttributeValue","_getFlexFlowDirection","addIfMissing","getFlowDirection","elements","applyStyleToElements","applyStyleToElement","_applyStyleToElements","_cacheInput","prop","_listenForMediaQueryChanges","onMediaQueryChange","keyOptions","obj","children","buffer","BaseDirectiveAdapter","_super","_baseKey","tslib_1.__extends","mqa","queryInput","cacheInput","cacheRaw","_cacheInputRaw","_cacheInputArray","_cacheInputObject","_cacheInputString","listenForMediaQueryChanges","classes","BaseDirective2","elementRef","styleBuilder","styler","marshal","DIRECTIVE_KEY","inputs","mru","destroySubject","styleCache","parentElement","activatedBreakpoint","changes","updateWithValue","tslib_1.__assign","triggerUpdate","getFlexFlowDirection","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","_actives","clearAll","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","aliases","alreadyAdded","reduce","found","deactivate","MockMediaQueryList","_mediaQuery","_isActive","_listeners","onchange","callback","listener","addEventListener","___","removeEventListener","dispatchEvent","MockMatchMediaProvider","ServerMediaQueryList","ServerMatchMedia","activateBreakpoint","lookupBreakpoint","deactivateBreakpoint","MediaMonitor","_matchMedia","_registerBreakpoints","items","overlappings","hasAlias","MediaObserver","media$","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","hasInlineValue","lookupInlineStyle","isPlatformServer","getAttribute","getPropertyValue","_getServerStyle","inlineOnly","getComputedStyle","values_1","setProperty","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","colonIndex","name_1","styleAttrValue","Boolean"],"mappings":"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"}